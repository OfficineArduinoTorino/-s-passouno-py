%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: spasso1_telecomando_6.0_definitivo.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Fabrizio
%%CreationDate: 11/04/16
%%BoundingBox: 0 0 2464 2098
%%HiResBoundingBox: 0 0 2463.1182 2097.2261
%%CropBox: 0 0 2463.1182 2097.2261
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:CreateDate>2016-04-11T23:10:41+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2016-04-11T23:10:42+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2016-04-11T23:10:42+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>220</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA3AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q8g1/Wv8AnJS3uL86&#xA;LoWmXdtDqN0NNWUxCSWwQ/6O0pN5Cv7z1ewRkEZryLUxVZ+m/wDnJaERXzeX9PuZp4Ykk0eNrdIL&#xA;dw916knrvd+o7kLbnrxKkiisC2Ko1vMH51XPl7VLK+02LRPMV3eQW3lq9tbY3ai1M0a3FzdRpLeW&#xA;0LJCzOqyT0J2HLjUqoby3qX/ADkbcaVrSa/pVpaahJp1zJpEkDWtI79EgS1iB9eYESMZXcyIRUfa&#xA;C0XFVOHzX/zkrNaMV8paTHdowSSOSVl4N9VdzStyEkUzenRo5CByKE8lZgqjfNfmz84Lq/mh8i6M&#xA;Lqzt7aznW4vrR7D1rg3EguIeV9LCwUxxKOKwkhWLeop4hlUb5I1/86rzUNMt/N2hWGmxyNePqjwB&#xA;mCQxRxi2ELpc3Sc5JpWrzNeCV47/AAqvSMVdirsVdirsVYF+Y35d+afNV5bz6N50v/K0UNuYZIbF&#xA;XIlczJJ6jUmiFQqFRQV368aqVUnb8n/Okhsy/wCYOoobS3eN2hN6vqzFW9OaQNfSKeEhEhUj4jyS&#xA;vpcI0VQN9+RnmsaBpNppvna5t9W0z6+1xqKLcQTXv1+7W7ZHnS5aSKrRhWc+p15cagYqik/KHz5b&#xA;HWblfzC1PUbi702W00u2uZJ7eK3u3t1hS5ZoJtyCGbaPYnkPiFcVQLfkV53N3fzW/wCYup6e1w0U&#xA;8D2jTcPXWH0pDNFJO7Sj91DQySuxUFSa/EVU3uvyj82SPIIPPWoR25lunjjd76RvSnVljikb68nI&#xA;IGAYqFPwqY/Scu7qpYP+cftSTVbe+t/ON5ZCG30yylFkk1pLLa6dbLA8LzQXKNxlZTIKfYLH7RoQ&#xA;qyf8vfy78y+V7yW71fzjf+ZXuElWaO89UR8naJo2jjeeZIvT4S7IoqHp0RcVZ5irsVYJ5w8t/mRf&#xA;ecNJ1Py7rqWGi2slq1/p8j0WVI3nF0DH6EvMyxTIFrIoUpWlaMqrG9K8kfnutrCNY80293dW9pFE&#xA;jQTyQI0yajb3DFwlovIm1geL1H5V5ceH22kVQ0Plv/nKOVV9XzbpVu8YkhlUW0TK9LcelNG/1ZiS&#xA;ZnbnyRacRRKbFVGXPlr8+bzX47iPzINO01dQvoEolrNIunySj0JXiEKQlvSh/d15urtVjwd0RVpf&#xA;LX/OSX1K3E3mvTJLz1zLdGFIoEELKtYIzJYXRJDV4SEfD+0snIBFVPW/I357Xmnutn5ntrfU/wBN&#xA;LqUVz9ZnRBbQ28cUcHpxWyp6LSLI7W7Ky7rykkIbkqi9P8q/85BQa0JbrzlZ3Wkxahbulu0FsJJd&#xA;PWRjcRzFLGOkrIsYXgwG77j4aKvVsVdirsVSnVr7Uhpl1eabby3JgjZ7e3gMSzXLjosbTVjVT2J+&#xA;122pyVYnX81jYfXTqdn6qM7/AFVbalu0Z4lI2umJcEANWUQ8DUHoN1WX6dDqdxYW095LcWV3LEj3&#xA;FmTbSGKRlBaMukfFuJ2qNjiqW6l5o8uabLcwXvmRYrizUSXVuGt3miViFUvEkTOtS60qO+KqOl+d&#xA;PKWqXiWNl5oR7+RmSOydreKd2UEkLFJEkjfCpYUG43G2Ksh+pXP/AC3z/wDAwf8AVLFXfUrn/lvn&#xA;/wCBg/6pYq76teRgtHdPK43EcwjCH2JjRWFfHengemKq0E6TIWUFWU8ZI22ZWHUEf5gjcbYqqYq7&#xA;FXYql11dXE3BLV/SWVuEUwAJZqEkjkCOChetPi7U64qg2juxVzq18YV/vLhYrP0VI67GEvxHiKgf&#xA;zdcVRdtDes8kE1/N68XEkqsIVlavFgDGabqRSvbFUR9Suf8Alvn/AOBg/wCqWKu+pXP/AC3z/wDA&#xA;wf8AVLFXfUrn/lvn/wCBg/6pYq76lc/8t8//AAMH/VLFWjbXqKWju3lkG6pMIwh9iURWFfEdPfpi&#xA;qtb3CzKdikiHjJGeqt/n0OKquKoUyT3RIgcw24/3eoUs5/yAwYcfcjft44qhRKpcKNRuSCaCT0o/&#xA;TJ6f3no8PxxVFfUrn/lvn/4GD/qlirvqVz/y3z/8DB/1SxV31K5/5b5/+Bg/6pYq76lc/wDLfP8A&#xA;8DB/1SxV31K5/wCW+f8A4GD/AKpYq70byEF0ne5I3MUojBI8FKLHQ/Pb5dcVV4Zo5ow8Zqu4PYgg&#xA;0II7EHriqhekyvFZjYT8mlP/ABUlOY/2RZV+RxVFAACg2A6DFUtRLtdPXTxbMWWIQeuTGYtl48iC&#xA;3KntxxVCebtEm1bQv0dHqtxpMLvGLq5tgGuJIa0aFGYMVaSoHIAn2NaYqg/LfkPQ9AgKaNptrp5d&#xA;DHLNJH9Zu5UNCfVnZuRqVB4kstcVVPMPkfRNdt3g1rTbLVoW3PqwiO42/aWdDVX/ANUL8xiqI8na&#xA;E2i6bLZDU7vUbcTs1qt8yvNbRkD/AEfmAGZUapXkTsQB8IGKpONN856p5imu76+k0+ys5D+j9GtJ&#xA;VjVolkolxdThJWkab02IiA4qv2viJGKqvl2XzLpGqwaJqE02safKsiQ6lJGWuIJolEnp3UsaiJ0d&#xA;H/dyEISfhK16Ksmuv3E8d0NlYrFOPFXNEb5qx+4nFUVirsVQ16zOY7VCQ05PNhsViX7ZHzqF9uVe&#xA;2KrLkJbzW9zQLBErwydlRH4kN8g0aj2Br0GKrLc3ttbR2iWzO8KCNJ+SCI8RRWPxcxt1HHbtXriq&#xA;GhlS1kdIGDiOCG3SVt1/clgzmn2t5AoUbltuxIVX/o67uPjnKkH9i4DSg+/pKyRIR22b54q79ETQ&#xA;72xjHHoI1Nu7eBdoz6bEdg0dMVRFtf0BS5YKVr+8aibqOTK+9A4XfbYj4l26Koch7rj6kPrzuiyv&#xA;bTO0cMaPXgrJRuTfCeqncfs7DFV0cn1U/CDHweNJ7UuXRVlbijxFqUUHwoKA7bYqibz9zIl4NgtI&#xA;5/AxsftH/jGTyqeg5eOKuvCZJIrRTT1qtKRt+6SnID/WLKvyOKq00PO3eFGMXJCiumxWooCtPDFU&#xA;DM7zWL2At2ineIw8QhES1XjUP9jiOwrX2xVMJZUiQu54qvU4qh+eoy7xrHbJ29UGRz81RkC/8Efo&#xA;xV3LUot3WO5Tv6QMTj5KzOG/4IfTiqIiljljEkZqp+YNQaEEHcEHYg4qozXZWQxRQvO6gGQIVAUH&#xA;pUsV3NDQD6aYqqQTrMrEKUZDxkjanJWoDQ0JHQg7HFVGb/R7pJxtFORHOOwc7Rv86/Afo8MVatzz&#xA;1C7kHSMRwEd+SgyE/SJVxVF4q7FUISJtT4E/DaRiSnX45eSg+3FVb58sVReKuxVCv+61GNuiXKNG&#xA;3vInxJ/wnPf2HtircsNwlw1xbhHZ0WN45GKCiFirBgr/AM5qKf2qrrWB4/VeQj1Z39Rwv2VPFUCg&#xA;nc0Cjfv7dMVXXkBuLSeAHiZo2jDdaclIrirrWcXFrDOBxEyLIF605AGmKquKoRDy1WYHcxwRcPbm&#xA;8nKn+twX7sVReKoX9F2PQIVj/wB8q7rF8vSB4UPfbfFUHZhJ9ScgDhEWPp9OIjYwRAf5NY5Wp2ri&#xA;qbYq7FUn8wxxrEZWFVkR0Za0q0aNKlSN6URkNKEhuuKq9sLxlW5jKST8Tb3CyEoHMDsvNWUNx+Lk&#xA;acfuxVbcwTM8aScTPeSIswFSqwQ1kKUoOSndSTT7fhRcVTCeFJ4JIZPsSqUamxowocVQGjzPc87u&#xA;T+8aOCNgOhIjEpb756fRiqZYq7FUIxE2pCM/ZtYxJx8XlLKD/sVQ/wDBe2KovFXYqhR+61Liv2bm&#xA;NnYf5cRVa/Nlb/hcVc0V1DPJJbLHIs5DOsjlKOFC1BCvWqqNu1PfFV9pDJH6sktBJO/qOqklVIRU&#xA;ABIFdk8MVWattpl037SRO6HwZByUj3DCuKug+DULqP8AZkWOffryIMbAewEa/fiqKxVJj508ojU3&#xA;0ttYs11CMBntmmQOFK8waE9OO+Ko9/3OorIfsXEYiLeDxksg/wBkHb7vfFUVirsVQjgTajGB8SWq&#xA;szeAlcALQ+IQtUeDDxxVh8fkzUtW8wXGo+ZLszzwyibTtNjmnNhbRB2EBESNB6s7enyd32GwVe+K&#xA;ory/pGs6BrcOnWck135eZJEmgmkVzZuP3kUkUkrGd4pasnElyrDrQYqyu9naCznnUAtFGzqD0JUE&#xA;gYqutoFt7eKBSSsSKik9SFFN8VVMVQqfDqstdvUgj4e/pu/L7vUX78VRLMqqWYhVUVZjsAB3OKob&#xA;9J23ZZiOxEExB+RCUOKoKzkji1ByjBoJSR6gIYESsZYmqNqeo0qD3piqb4q7FUn16SN19JjRI1cu&#xA;4FSrSo0Y2HXjG0jkDegxVXtjeKi20fCK44/WLlpAXVWndm4KFZa/Fy35du+KrbmadWRpOPrWUkck&#xA;pAIVoJeUbP1PHj8TEGv2fpxVH3E6QW8s7glIkZ2A60UVNK4qgtHga19W0koZVSGQlfs09JYe9P2o&#xA;D9FMVTHFXYqhABFqTE7JdRjieg9SImtf8pkYU9l9sVReKuxVCMBLqaU3W2jblXoHlK8af5QVWr7N&#xA;74qukuLhpmitkRjHT1XkYqoLbhRQNU069KVHXFV9tcGUOrrwlibhKoPIBuIbY0FRRh2xVT1b/jl3&#xA;g7mGQAeJKkAfScVbvFZHiukBJgJEgG5MT05gD2IVtt9qDrirHvP19eCz0aws5zbx63qdvY3N5G/B&#xA;o7d0kmcxuCKNJ6Xpqf8AK79MVVYvLeiDyv6CWkEVi9sWNgI0W0EbqXMRgVeHDfc05++KoH8uJOdh&#xA;reiSzPc2+iapNZWxk3aOAxxXMUJYE/FAJwla1+EYqynhqMPwxmO4T9n1SY3HzZVcN/wI+nFXU1OX&#xA;ZvStl7shMrH5cljVT8w3yxVXhhSJAiCgG5J3JJ6knuTiqlNbSmb17eQRSlQj815oyqSVqAVNV5Gl&#xA;D33rtRVfbW/ohyzc5ZW5yvSgLUC7DsAFAH8Tviqlcf6RcR2y7pGyzTnw4nlGvzLCvyHuMVRWKuxV&#xA;DXqOPTuY1LSQGpVRUtG2zqKbnb4gO5AxVZO6T3FpGGDQOGm5A1V+HHgv08+X+xxVTt0luLSO9Nw8&#xA;U0sayA1/doGXlxKbKQO5Pxe4xVQiiF5K7BfRZ4IZwjfEA83MOp6Gh9Na9NxXriq763qVr8DwmQdF&#xA;DCR/ukiSQsP9dFPzxV36Q1Gb4I4DGx6lUlLU70MyQIp9yW/1TiqJttPAUtcBXdgQU3daNs1Sw+Mt&#xA;0JI6bAAYqh2Mltx5yNHOiCNrl43mikjSvFpCpHEipJJYd+oxVuONrlhs7FnjkuLiSNov7puaIiP8&#xA;VOX0UrvXFUTdfv5UtF3WokuD4Ipqq/7Nh0/l5e2Kuu/3M0d5+wgKXH/GNt+R/wBRh9ALYqrzyiGC&#xA;SYgsI1LlVFWIUVoB44qgpjeQWkl6bku0cZlaABDCaLUqp4h+nQ8vf2xVGzQpKnB/mrDYgjoQfHFV&#xA;DnqMOzRrcoP2kISU+HwN8BPieY+WKu56hNssa2yH9t2DyD/YLVPkeZ+WKq8MKQpwSvUlmJqST1JO&#xA;KqMltcCZpbaVIzJT1VkQupK7BhRo6Gmx69Biq+2tzEHZ25yytzlYDiC3ELsKmgoo74qp3P7+5ith&#xA;ukZWaf5Kaxr8y45f7H3xVFYqgZbUxFWSAXMCMHS3PDlG46NFzoO/QsKdvDFVH0l58v0fdUrX0/WT&#xA;0/H+79bh+GKr7UR2gkW10l7cTSPPMIhbIHlkPJ5G4yCrMdyTucVV/rtz/wAsE/8AwUH/AFVxV312&#xA;5/5YJ/8AgoP+quKu+u3P/LBP/wAFB/1VxV3125/5YJ/+Cg/6q4q0Z72UcI7Z7dj/ALtlMZAHiAju&#xA;SfbFURDCkKcVqSTV3O7Mx6knFV+KuxV2KpfdWc6ESWvxBX9RI9vgc1BZASoIYMQylh1qCDiqCY3b&#xA;FuWi3JkclmQXMX1Ykmpqvqjr3/ddcVRlvNdozyyWMzTy05kNBQBa8VX970FTiqv9duf+WCf/AIKD&#xA;/qrirvrtz/ywT/8ABQf9VcVd9duf+WCf/goP+quKu+u3P/LBP/wUH/VXFWjcXsg4R2rwsdvUmMZV&#xA;feiO5NPDaviMVV4IEhQgEszHk7tuzMf2m/z26DbFVQgEUO4PUYqhP3tnsFaW0FAoQFpI/ag3Zflu&#xA;PfsqhQbIUSt2bYU42voTemKdv7vmV/yS1O1KbYqi/wBJ238k/wD0jz/80Yq79J238k//AEjz/wDN&#xA;GKu/Sdt/JP8A9I8//NGKu/Sdt/JP/wBI8/8AzRirv0nbfyT/APSPP/zRirX1x5vgtY35nrJNG8aJ&#xA;7kOELfJfvHXFVeCBIUIBLMx5O7bszH9pv89ug2xVB+Y21lfL2qNoaq+tC0nOlq/HiboRN6AbkVWn&#xA;qUrUgYq81bWP+cjLe5sLCHRdNvbc3Rtb7WJ1iRltkkRBdmCO+Tnzj5ScVCnlVeCgBnVasb//AJyH&#xA;TQtaa90+2m1aGTTZdGEYtE9UAoNRhKm5KGP4GKFnRzyNCuwRVdoXmX/nIm8k00ah5a0m0t5puGqT&#xA;hn5QILiFJCsL3ClikZnoVZlfirKaEBlUO3mb/nIWW+1WWz0OxW3a9ks9Dgu4nSN7a3a7ZrmTjP6q&#xA;tKIoUUyFEbkrKB+0qq2/mL/nJT6vO115Y0lbgRv6EcDrInqI6JHV3v4iwlo7FeK+mhU8pHrFiqFu&#xA;b/8A5yVksrO5g0+3i1A3V1Nc2hFiLYQpaW/1e3cfWZZPTe5M/wAaTczQcvTVqKqmmi63/wA5DSa3&#xA;bRavoGkR6Qq2xu54m4ySNM8f1hY/9Mm9P6usr7lH5+kafbUKqiNV1b88xdaHLY6HYos81xb63bpP&#xA;FdQQQG6iWG5DyvYSsy24kYKgNf2lBPwqpFpvmf8A5yfXSXe/8oaa99GnGKJJ4FkmZZIF5O31wxR8&#xA;ozO23Kh4/DtRlURqOr/85KwWqwadoml3Lx2NhIt3NJGJpLwJbfXopUWeKKjSSTFWTiOKEDcoSqtb&#xA;Xf8AnJQPNMnl6w9Rre0WK1b6ubdbj94bkhxfrNxIKfEehARUbeXFWUfl9qv5uXmoXUfnjRrHTbNY&#xA;FNtJZOHrcCV0da/WJ2ZGjVZFJjSnLid1qVWc4q7FXYq7FXhUa/8AOVayWvOe0b/SbNZ2+r2BT0bj&#xA;lNdu6i4R+NoQsACNykUlh8VGCqeXPmD/AJyAh1W+EWgWRsLi2sXsGnKSrDfTraRXMBNtP6rRRPJc&#xA;SFmj/Y+3xIoqutvMv5/L5fgn1Ly7p8Ou3Wpx2kdhaqZ447P0JZZLiWYXnBayKicmPw7njISq4ql9&#xA;p5g/5ydXSbMroGj3dyPUiumnLQzA23FS7L9YijZp3Zgvp0T92XB4yIAqmzax+fM80ELaNa2sBvLA&#xA;TXEK2xf6oXja7JEl/KEbh6gYKrlNlQy8vUjVSqw1T/nJ2zW6WXSdO1FEWaW3NybdJndrgxxwhre5&#xA;hjVEiIlBZCSo4khm+FV6D5GuvPlxZ34852lpbXkN5JHYSWI4xz2iqvCYoZ7oozNyNC+woKdyqyXF&#xA;XYq7FXYq7FXYq7FXYqhNQufSVUD+lyDPLL1KRRjk70P0L9Ne2KoUWV0w5LCwU7gPfXIYD/KADAHx&#xA;oTirvqN7/vn/AKf7r/mjFVkdvcNdiAxNwXeeRb65PAEbChVasfCvTc9qqq01vbRyelGt3PIAGZY7&#xA;iX4Qa0JLyoN6dK4qqQWdpMhIa4VlPF0a4nDKw/Zb4/8Ab6jbFVT9GW388/8A0kT/APNeKu/Rlt/P&#xA;P/0kT/8ANeKu/Rlt/PP/ANJE/wDzXirv0Zbfzz/9JE//ADXirX6Mtv55/wDpIn/5rxVBTW86XnoL&#xA;ExjcVgle+uV50FWUgBgrDfau438aKr/qN7/vn/p/uv8AmjFXCxuwamE0G9BfXJOx8CoH44qidPuf&#xA;UrGWLjiksLt9oxyDbl/lBlIP0YqjMVULyZ0REiNJp3EcZ8K1Zm32+FFY4qhbiC1hKqzXU071KpHN&#xA;NyanU7OqKPnQYqp+j/y533/SV/2cYq1aLDczvGLe9jRKhp3uG9PkpoUHGdmJ+Qp71xVGfoy2/nn/&#xA;AOkif/mvFXfoy2/nn/6SJ/8AmvFXfoy2/nn/AOkif/mvFXfoy2/nn/6SJ/8AmvFXfoy2/nn/AOki&#xA;f/mvFXfoy2/nn/6SJ/8AmvFXfoy2/nn/AOkif/mvFUPe20VtGJEhvLkV+JYbiQso8aPKlf8AY1OK&#xA;qUaxyxrJHa3rxuAyMLqoIIqCP9IxVfHFatIIpkvLd3qE9SeYhtq7PHK6g+xNcVRUDSRXbWzsXjZP&#xA;UgZjVqKaOpP+TyWhO5r7YqisVSq4/fXzodg00VtvvRY0Ny/0SCiEfTv0xVNcVUrqcQW7y05FR8Cd&#xA;CzHZVH+sxAxV1rAYYQrHnIfilk6cnP2j/TwG2KqLLPbTyyRxGeKch2VCodXChP2yi8eKDvWvjXZV&#xA;UtIZE9aSQAPO/qMgNQtEVAK99kxVXxV2KuxVSubj0VXivOWRgkSVpViCdz2AAJPsO52xVTS5uFlj&#xA;juYkj9UlYmjcyAsFLUNUSnwqcVVbmATwtGTxJ3Rx1VhurD5HFVtnOZ7dJGHF91kUdA6Eq4HyYHFV&#xA;bFUqT9xfgdAk7pU/76ul9Tl9M68V+7FU1xVCj95qjV6W8IC0/mmY8q+4EQ+/FWrECSW5uT1kkMan&#xA;uEhJTj/wYdh88VX30rrEI4jxmnYRRHwJBLNvt8KAt70piqtFEkUSRRjjHGoVF8ABQDFV2KuxV2Ku&#xA;xV2KuxV2KuxVCwfuLuW3/YlrPD8yf3o+hmDb/wA3tiqpeQNPayRoQshFYmPRZF+JG+hgDiqGnnWW&#xA;1s75AQA8UgU/yzD0zy/1Vkr9GKo/FWD+ePNb+VPKmp+YUh+sz2EN/JbwN0e4a6SCDl7cpApP8tcV&#xA;Yn5w88ectE8wL5fv9et9AkOnW50TWryz/wBx+p6owf147m44ultGrKtEUBqGvI7Aqsu0zzNfz+e9&#xA;Y8pagRKtjLaX9jOFCFrW6imkWJ+P7UM9qaNtyXjWu5KrNsVdirsVU7idILeWdwSkSM7AdaKKmlcV&#xA;UDNeQFZLj0zE7KhWMNyQuwVfiJ+P4iOy4qi8VUrmAzKvFuEsbB4npUBgCNxUVBBIOKqaW1w0sclz&#xA;KknpEtEsaGMBipWpq71+FjiqJxVC2W098o+ys4oOwrDGx+8knFUViqVX3+9kv/Rh/wBRTYqmuKoW&#xA;y/3pv/8AjOv/ACYixV2k76Zat+08SO58WccmJ9yxrirpvi1K1Q7qsc0oH+WpRAf+BkYfTiqKxV2K&#xA;uxV2KuxV2KuxV2KuxVC3fw3dk42ZpHiJ/wAhomcj/go1P0YqisVSp9vL96o+zGl1Gg8ERnVR9CgD&#xA;FU1xVi+ueXdM8w6Zd6BqyFrHUEvrK4VTRg1w4njKnejBF5qexGKpFrn5U6rr1nf6Zq3mee50fWIb&#xA;WPVrQ20RZntVRGe3d2dYPW9Pk9EPxbrTFU80/wAoWeja1fa96hnvdTurdZG4hRFbQxNa2tvGKnaP&#xA;1izMTViWPgAqynFXYq7FVssSSxPFIOUcilXXxBFCMVQ4spCy+tcNLFGwZEIUVINQXIG/E7ilPeuK&#xA;orFVG6neMRpGB6sz+nGW+yDxLEmngqk079NuuKqQlvIZ4UuGjlSdiitGjRlWCl9wWeoIU/59FUXi&#xA;qFsfikvJB9iSc8D48ESNvudGGKorFUqvv97Jf+jD/qKbFU1xVC2e11fA7EzKwH+SYYwD8qqRirtK&#xA;2063jP2oUEL/AOvF+7b/AIZTirp/g1C0kP2XWWAU68mCyA/KkJ/DFUVirsVdirsVdirsVdirsVdi&#xA;qFuvjvbOMfaRpJzXpxVDGR86zD8cVRWKpU2/l65cdLiOeSIdyJ2Z4x/rHmBTxxVNcVSq9/0e7eXo&#xA;qlLsE77IPRuDt2WFlIHj0r0xVNcVWTwpNC8L/YkUq1NjQim2KqdnM7xlJf8AeiL4JgNgTTZh7MNx&#xA;93UYqolPrV1PHK7okJUJGjtGSGUN6hKFWIJJUdvhOKqlk7k3ETMXWCT043bdivBX3PehYj9e+Kon&#xA;FXYq7FVOeBJk4sSpBDI6/aVh0YV/z8dsVU4rMrKsks8lwyV9MScAFJFCQEVN6bb4quup2ijpGA08&#xA;h4QqehY9z/kjq3tiq62gWCBIlJbgKFj1Y92b3Y7n3xVUxVKrb9/epIv2WlkuqjcBVT6tH9Eoq6n2&#xA;79cVTXFUK37rU1Y/ZuY/TqezxEsoH+srsfoxVq1PpXNxbHYFjPCOxV/t0J6kScifDkPbFVW8geaA&#xA;iMgTIQ8LHoHU1Fab8T0anauKrredJ4VlSoDdVPVSDRlandSKHFVTFXYq7FXYq7FXYq7FXYqhLM+v&#xA;JJe9UkAS3/4xL+1/s2qduq8cVX38zx2riI0uJP3dvQVPqNsppvsv2j7AnFVK4ijUWdjEKRh1PEVJ&#xA;WO3o4O/+WqKfniqNxVD3lsZlVkCmSM1VX+ywIKsjbHZlP374qguN+vwot6ijYKptGUDwBerEfPfF&#xA;Xf7kv+X7/pxxVpI70XKTlL12TYqTZAMv8rcSDSu/XFVWdmnIZ9PuQ42DpJFG1PDkkymntiqpFcSx&#xA;II49OmVF6AGD/qriq/67c/8ALBP/AMFB/wBVcVd9duf+WCf/AIKD/qrirvrtz/ywT/8ABQf9VcVd&#xA;9duf+WCf/goP+quKtfXbn/lgn/4KD/qriqEkS8e6a4Ed6jMAqqpsyqLtULyLHcip33+gUVb/ANyP&#xA;/L9/044q6l+dmF8ynqCbNQR4ckIYfMGuKoyytTCGdwqu4VQibqiIKKimg2G56d8VROKqN1AZogEP&#xA;GVGDxP4Mpr86EfCfYnFUNcF51CXOnPKVNQyNEwDUpyRmeNwfegOKqPo/8ud9/wBJX/ZxirreCO3u&#xA;WuYtPuvWccXdpkfkNqcg05BpTbwxVF/Xbn/lgn/4KD/qrirvrtz/AMsE/wDwUH/VXFXfXbn/AJYJ&#xA;/wDgoP8Aqrirvrtz/wAsE/8AwUH/AFVxV3125/5YJ/8AgoP+quKu+u3P/LBP/wAFB/1VxV3125/5&#xA;YJ/+Cg/6q4qh71BexCK5065eMHlxEkaAn34zLX6cVWej/wAud9/0lf8AZxiq+BVhk9VNNnMtKes7&#xA;xSSUP7PN5Wam3SuKoqCGUzNczgLIyhEjB5BFBJO9Bu23KngPCuKojFUp82XPmK18uX9x5btI77XY&#xA;4+VhaTECOSSo+Fi0kAApX9sYq8xvdW/5yVf1FtdGs4zb2FpJbuxtCJ74S2puopT9b+yU+sj4FTal&#xA;G5UxVHT+Yfz8tvMH1CDy9Z3WlT3c5h1G6dBxgFxcSRxf6NM3W1SJUeSNaOfi5HFUDf8AmX/nI9tH&#xA;gt08vWEGu3sc+1uiyxW/pw2nF2nlvPRRjLPPwDB/7sDgy8nxVFSeYf8AnItrbSZbTQNImjurYPqT&#xA;t6kcsEnqyn4bea6tyxe3jSkbsnGSQKzAKxCqJ0jV/wA/LrzXosGq6JZWHl0gSazcwGBnD/VZP3QL&#xA;Xc7tH65Q1WIMD8PxKObqpR5Y1T/nKCDSrePWNJ026uhFfCaSf0PXMqQNJZlmtruKArJcMsVFjBCr&#xA;VjVuQVej+R7rztc6OzecbO2s9WWRaLZ7RNG0Mch+H1bkgpK7xH4/i4chQMMVZDirsVdirsVdirsV&#xA;dirsVSnzZc+YrXy5f3Hlu0jvtdjj5WFpMQI5JKj4WLSQAClf2xirAR5i/wCcgzcKr+WNOjiMziqP&#xA;HMvo+tMELu19AyH01irxjfZmanJfSKqFttV/5yMuhbvfaRa2EkUIa4isvqjxyS/pC2qA095K9fqQ&#xA;n+D4R39QswVFVuna3/zknew35v8Ay/p+myHTrlbGOOWAUvuEPoyep9YvQx5GUrG0YTYK778sVUbr&#xA;zb/zkwZ7iKw8oaWy283FTdSBHmgkeT05QUu/RDKka80EhNWBooxVGeZfMf58Ra3LBoWkWlxY6fcW&#xA;kTXEsDRRXZns1MtK3Esvpi5mpyRQIuI5PIvqcVW017/nJFLy7jm8uaNLbxCdLOaF6CZogVjkfneq&#xA;0STEc1Xi5FQjcas6qsm8kXn5lXWs6i/muzjstNW1tBp0cSQIDOTKblj6dzeyV4mOoZgqn4V509R1&#xA;WZ4q7FXYq7FXYq7FXYq7FUFqdyI1WMllQq80xSof0ogOQQj9pmZR8q03xVDjRiw5GCyQncobb1CP&#xA;bnzTl86DFXfoT/iux/6Q/wDr7iqnDpiNd+mYLJ4Y/wC/K2vE1I2VSXbfudv7FUd+iNK/5YoP+RSf&#xA;0xVv9E6V/wAsUH/IpP6Yq79E6V/yxQf8ik/pirv0TpX/ACxQf8ik/pirv0TpX/LFB/yKT+mKu/RO&#xA;lf8ALFB/yKT+mKtfojSv+WKD/kUn9MVQVxpsaXYVbeyS2koIna2DkP8AyuQ6/a/ZNPbrTkqv/Qn/&#xA;ABXY/wDSH/19xVw0Whr6NiwH7P1XjX25c2p9xxVW024qTES3Bl9SAOSWVfsyRsSTVo3G/hUDFUfi&#xA;qEn/ANIuhakn0kT1JwCRy5Eqimn7J4sT8h2OKoZrOxd2W1022lCEq0jqiJyGxVSEckg7Hanata4q&#xA;1+jf+1VY/wDBf9eMVd+jf+1VY/8ABf8AXjFXfo3/ALVVj/wX/XjFXfo3/tVWP/Bf9eMVd+jf+1VY&#xA;/wDBf9eMVd+jf+1VY/8ABf8AXjFXfo3/ALVVj/wX/XjFXfo3/tVWP/Bf9eMVd+jf+1VY/wDBf9eM&#xA;Vd+jf+1VY/8ABf8AXjFXfo3/ALVVj/wX/XjFV8Flp5k9GawhguOJdTGqkEAgEo4CNVajsPbFUTZP&#xA;IDLbytykgb4WPVo23Q/R9mvcqcVROKpVN+9v2U7criGA0/lgjN0p+ZY0Ptiqa4qo3k5gt3kUcn2W&#xA;NT0LuQqA/NiMVXW0AggSIHkV+056sxNWY+7E1xVUxV2KuxV2KuxV2KuxVZPCk0TRP9lxQkbEeBB7&#xA;EdsVU7GZ5bZTJ/eqWjlI2BeNijEexIqPbFVfFUqP7i//AJVScHxpFdLT/hrla/2YqmuKoCCdYra9&#xA;vnBI9SZ2UdaQfu6D5iKv04qibKBoLWKJyGkVaysP2nO7t9LEnFVkt44kaKCIzOm0jFgkaEjl8bGp&#xA;6fyqffFUH+kJZd1uU9M/a+qQyXPH2Ey8k5fNPoxVRl/ThuIDCbo2vxfWOQtA52+Dh0pv15DFVb61&#xA;cxbG4kT/AH4bq2Zwv/PSH04wvian54qrx6k/petKiNb7k3FvIJUUDqWqEI+gH3xVXnuvTf0o4mnm&#xA;oGMaUHFSaBmLFQBX6fAGmKoJ9QuC7KJ4VdSVeKGOW7ZSP5inDj8iuKqFydaPpGye6ZPUX1WkW1Ws&#xA;X7XFWCMG8OQxVW+sXcXWW4Vz1Se29cU8QbUKPvb6MVVoNQmZSwWO7iU0aa1cMa9amM9NuwZjiqNj&#xA;kSSNZIzyRwGVh0IIqDiqH1H4Iorjvbyo5PYKTwkJ9hG7HFXS/u9Rgk6LOjwtTu6/vEr8lEn34qis&#xA;VSqx/wB7If8Ao/P0/WlxVNcVQl9vNZId1ef4l7HjFI61+TKDiqLxV2KuxV2KuxV2KuxV2KuxVC2X&#xA;+9N//wAZ1/5MRYqisVSq+/3sl/6MP+opsVTXFUhiuWeyg0/1rIg+lDKVuas68lEgC+nuXWopXviq&#xA;fYqk+nxx3NxPFMokhiaR1Rt1LvczKSwOxoIxTwxVOMVdirsVQV/FHEVuo0VZ2lhjdwKF0eRYyr/z&#xA;UVtq4qlWjgXBigkPOFoleQE15CO3t+KNXqn75mp4/TirIURERURQqKAFUCgAGwAAxVvFXYqgtViR&#xA;bSa8RQLq3id4Zhsw4gtxr/KSNxiq7S6fVnp/v+4/5Pvirerf8cq9/wCMEv8AxA4q69/3psP+M7f8&#xA;mJcVRWKpVbfur6NW3KzXMBp/NORdKfkEFD74qmuKoXUPgWCftBMrEduL1iYk9gqyFvoxVFYq7FXY&#xA;q7FXYq7FXYq7FXYqhbD4nu5R9mWduPj+7VYm/wCGjOKorFUqvd72UDepsVFP5luGdh8wvxH23xVN&#xA;cVSr7Pl//Ksk+gvZt/xFmi+7FU1xVI7S7W0nupHjdlcsEYKQlVurioMhoi05Dq3y3xVX561dfFGP&#xA;q6duiH/kokjN9KJ9OKu/RF73vKnua3I/AXAGKu9DW7f+7l9dF6Lsdj/kPRjT3n/piq2XUGuY0gaF&#xA;1nE0BIRHZQFmRiW+EMm2/wAYFe1cVQWkzCB4pmR2QQ8SURmAY29qQCQKLXid2IGKo/6zq13vbKIo&#xA;TuHqBUe0jLJWvtGV8HxV36Kv2+J7yrnc7zj/AIhNEv3KPlirvqesW+8Nx6qjfgSfupL6rNX/AIyq&#xA;Pl1xVSvNRmawuraeB/rDQyKixI7sSVIFY15kV8QWXtyrtiqYaZ/vM/8AxnuP+T74q7Vd9NuUH2pI&#xA;2iQeLyDgo+lmAxV15vc2IHUTMSPb0ZBX7yMVRWKpVfgwXLyjpRbpabmsBCT/AEtC4VR7dsVTUEEV&#xA;G4PQ4qtkjSSNo5ByRwVZT0IIoRiqjZyOFNvMazw7Fj+2vRX+kDf3riqIxV2KuxV2KuxV2KuxVQu5&#xA;nRRFD/vRLURDrTxcj+Va/qHfFVSCFIYUhT7EahVruaAU3xVfiqVWn+kXiyj7Jd7skeDL6EHXs8as&#xA;3z8MVTXFUJbAR3Vzbn7LETRjtxk2Yf8ABqzH/WxV2mtxgFo5pNbfuyp+0UU0jf8A2agH57dRirVr&#xA;YekzNM/qkSSSQrSioJHZ607t8VOX3d6qozFXYq7FVKe3WQh1PCZP7uUdRXsfFT3H8aYqgrDSGhT0&#xA;7hxLEBGREBRS6RJHyata/wB3VR267mlFUyxV2KuxVTnt45lAcUZTVHH2lbxU4qssbeS3t/TkcO5e&#xA;RywHEH1JGfpU/wA2Kqdyyz3MVqhDCNhNcAdgnxRg06EvxI8QDira/vdSZx9m2j9Kvi8pV2B/1VRD&#xA;9OKorFVK5gMqoVbhLE3OJyKgNQruKioKsQf64qlotZfVMKRxq6KGMMd7cJxViQpEarRVJU07Yqsh&#xA;iaWWeGHhJLbOEuI11G5Zo3ZRIFcBaqSjqwB7EHFVUWV1HKlwYF5w1Ks97cMACKGoZCKfPFVa2vb2&#xA;6t4rm2jtZ7adFkgmiuWdHRxyV1ZYqMrA1BGKuub+7tYvVuUtYIuSR+pJcsi85HEaLVogKu7BVHcm&#xA;mKqOna0dTga402SxvoEkeF5ra79VBJGeLoWSNhyU7EdsVRfqar/yzwf8j3/6o4q71NV/5Z4P+R7/&#xA;APVHFXepqv8Ayzwf8j3/AOqOKterqv8AyzQf8j3/AOqOKoaSyu5J3nNuokkADFL24QUXoKKgAGKt&#xA;fULz/fX/AE/3X/NOKu+oXfeAMO6tfXLA+xBQgj54qjrW2MIdnYPLIeUjAcRsAoCrVqAAdK4qr4qg&#xA;794Y5bZzPHBdSOYbVZWA9ZmUu0SgkEkrGW+Hcca9AcVQ08puLkWk9vYzXKr6gt3n5SBCacuBhrSo&#xA;64qpXEFrbIr3NhpsCO6RI0kgQGSVgkaAtCKs7sFUdztiqr+jf+1VY/8ABf8AXjFVIwWq3SWjWGmi&#xA;6kRpY7cyD1GjQqruE9HkVVnUE9qjxxVV/Rv/AGqrH/gv+vGKoCW+0GG6jtJk0eO6ln+qRW73MayP&#xA;cBBL6KoYuRk9Ng/Eb8SD0xVH/o3/ALVVj/wX/XjFXfo3/tVWP/Bf9eMVd+jf+1VY/wDBf9eMVd+j&#xA;f+1VY/8ABf8AXjFXfo3/ALVVj/wX/XjFXfo3/tVWP/Bf9eMVRESX8SCKG1toU7BJGoK9+IiWv3jF&#xA;URbQCCMrXk7MXkc9SzGp+jsPAbYqq4qknnTQdN8xeWr/AMvag9wltqsTW8n1Ngk5U0rwYhlHgeQ4&#xA;+OKvNj/zjp5J9S8kji1eOS8M3qSB9NeQCaGaBgJJI3k2S6k+0xJJFa8VoqrX/wCQnlq81G4v5Tq8&#xA;0t5aWWnXiTy2jrJb2RtQashil9SWOyVWYyEfE/w/FTFVlr+QHlix0C30OxXU1tV1OPVLu5nNjPdS&#xA;+lBLCkIlPEIqtMXVuJZDUpxYhgqg1/5xm8iNZQW00Grc4HmYSwz20ZcOVEPqKzyKxhVTSlF5vI3E&#xA;cqKqm0H5GeV4buC6SPVPUgurO9Uf7iqepYlDGBSIFEJjHwxleA5LF6aO6sqluof841+Qr+1kgng1&#xA;jm8gkS5WawE0dHlk4xsVPFS0++2/BCdwSVWdeRvJmk+SrO/stEsLtLTULyS/eB2teEckiqnCJY2j&#xA;CoqxqFHgOuKsl+u3P/LBP/wUH/VXFXfXbn/lgn/4KD/qrirvrtz/AMsE/wDwUH/VXFXfXbn/AJYJ&#xA;/wDgoP8Aqrirvrtz/wAsE/8AwUH/AFVxV312YH47KdE6s/7pqf7FHZj9AxVEo6SIsiEMjgMrDoQd&#xA;wRireKsY89+VNC802ljYarLcotjdx6hF9TQO/qRo8a8qxT8QRI1GHFgRyRgy1Crz1P8AnHL8tI7j&#xA;6wk2qLOYI7dnNpbOGWKQSKzRvYNGWPFVc8fjA+KpZyyqLi/IT8u4LLUrW3m1eH9Kuz3c4jDSMWnh&#xA;uVqZLVw4jktvg9QN9t+vLFUFp3/OOP5c2p0szXOsXP6JneaKFkkMEwZ0PGeF4ZFbkkKiXjxDtyag&#xA;qAFUSv5EeS5dai1XULi+vXGoXmoXNp9VeG3lF3M06xssUaMxjcp8cjOzcabAIEVUrT/nHb8uLW2u&#xA;YI7rWnF5GI7mWeJJ5HNeTSF5rN25MdzT4eVHADojKqjr38jPy/vdLOmXE2rNbNeXd+1IgGMl7Alv&#xA;IrEWu4CxK3I/GzVLs3JqqrND/Ib8uNF1211qybVBd2QtRZq0XwRfVXjesYW2UqZmib1qH4vUk/nx&#xA;V6l+k7b+Sf8A6R5/+aMVd+k7b+Sf/pHn/wCaMVd+k7b+Sf8A6R5/+aMVd+k7b+Sf/pHn/wCaMVd+&#xA;k7b+Sf8A6R5/+aMVXR6hbyOEHqIWNF9SKSME+FXVRiqIxV2KoS3Ilup7g/Yj/cRHtRd5GHzf4T/q&#xA;4qsghN5CtzO8gWUc4okdowqNuteBUlitOVSaHpiqp+jLb+ef/pIn/wCa8Vd+jLb+ef8A6SJ/+a8V&#xA;d+jLb+ef/pIn/wCa8Vd+jLb+ef8A6SJ/+a8Vd+jLb+ef/pIn/wCa8Vd+jLb+ef8A6SJ/+a8Vd+jL&#xA;b+ef/pIn/wCa8Vd+jLb+ef8A6SJ/+a8Vd+jLb+ef/pIn/wCa8Vd+jLb+ef8A6SJ/+a8Vd+jLb+ef&#xA;/pIn/wCa8VajL21zHAXZ4JVIiLmrK6CvDl1bktT8W+x3NdlXWQEU1xajZUYSxAdklqaf8Gr/AEUx&#xA;VFMyqpZiFVRVmOwAHc4qh9OVvq/ruCJLljM4OxHIAKpHiqBV+jFUTirsVdirsVdirsVdirsVdirs&#xA;VdirsVU7m3S4t5IWNA4pyHVT2Ye6ncYqts52ntkkcASbrKo6CRCVcD5MDiqtiqVD4tAjB63ixiU/&#xA;5V24DsPpkJxVNcVdirsVdirsVdirsVdirsVdirsVdiqF1L4YY5hsYZY35/yqXCyMfb02avtirpvg&#xA;1G2kOyyJJDt3c8ZFr/sY2xV2qb2Lx9pykDHwWZxGSPcBsVRWKuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxVC2nwXV5CdvjWZFHQJIoFR85Ecn7++KorFUqT/jg2H/AEZf8nI8VTXFXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYqhdW/45V7/wAYJf8AiBxV17/vTYf8Z2/5MS4q7U/95k/4z2//ACfTFUVirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVQsf/HVuP+MEH/E5sVRWKpWqt+gVVQWks1ACjfk9o/QezNFiqZqy&#xA;soZSGVhVWG4IPcYq3irsVdirsVdirsVdirsVdirsVdiqF1H4kgiH2pZ4uPh+7b1W/wCFjOKul/ea&#xA;lAnVYY3lYfyuxCIfpX1BirtU2smk/ZhaOZ/9WKRZGp78VxVFYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FULafHd3kp3o6woR0KRoG/B5HBxVFYqhYv3N9LEfsXA9aP/AFlASQf8RP0nFVkX1mzjEC27&#xA;TwptC0TICEB+FWEjJ9kfCDU1pU4qv+u3P/LBP/wUH/VXFXfXbn/lgn/4KD/qrirvrtz/AMsE/wDw&#xA;UH/VXFXfXbn/AJYJ/wDgoP8Aqrirvrtz/wAsE/8AwUH/AFVxV3125/5YJ/8AgoP+quKu+u3P/LBP&#xA;/wAFB/1VxV3125/5YJ/+Cg/6q4q767c/8sE//BQf9VcVd9duf+WCf/goP+quKu+u3P8AywT/APBQ&#xA;f9VcVbijmluFuJk9IIpWKIkFviI5M9KrX4aCh8d99lVtgfVMt32nYCIn/fSbL9DHk4/1sVRTojoy&#xA;OoZGBDKRUEHYgg4qh9OdjbCJ2LTW59GViasSnRj/AK60f6cVROKuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxVTuJ44IHmk+ygJIHU+w9z2xVZYwvDaoklPVNXlp09RyXentyY4qr4qoXv1T0f9J+zUcOvLl24c&#xA;fi5eHHfFUD/uO/5fv+n7FXf7jv8Al+/6fsVd/uO/5fv+n7FXf7jv+X7/AKfsVd/uO/5fv+n7FXf7&#xA;jv8Al+/6fsVd/uO/5fv+n7FXf7jv+X7/AKfsVd/uO/5fv+n7FXf7jv8Al+/6fsVd/uO/5fv+n7FX&#xA;f7jv+X7/AKfsVd/uK/3Z9a9P9r1/rfpU/wAv1Pg4+PLbFU1FKCnTtTpTFXYqgbz6h6/7z1vW4jl9&#xA;X9evHenL0fppXFVD/cd/y/f9P2Ku/wBx3/L9/wBP2Ku/3Hf8v3/T9irv9x3/AC/f9P2Ku/3Hf8v3&#xA;/T9irv8Acd/y/f8AT9irv9x3/L9/0/Yq7/cd/wAv3/T9irv9x3/L9/0/Yq7/AHHf8v3/AE/Yq7/c&#xA;d/y/f9P2Ku/3Hf8AL9/0/Yqvh/RnqpX6xXkOH1j6zw5V+H+++DlXp79MVTLFXYq//9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>999.999943</stDim:w>
            <stDim:h>999.999943</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>MyriadPro-Regular</stFnt:fontName>
                  <stFnt:fontFamily>Myriad Pro</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 2.037;PS 2.000;hotconv 1.0.51;makeotf.lib2.0.18671</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-Regular.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Gruppo campioni predefinito</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>AutoCAD Color</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DocumentID>xmp.did:02801174072068118F62CB862B5CCAB7</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:02801174072068118F62CB862B5CCAB7</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>uuid:2a47e32b-a52b-f946-b653-786d72ee576d</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:01801174072068118F62CB862B5CCAB7</stRef:instanceID>
            <stRef:documentID>xmp.did:01801174072068118F62CB862B5CCAB7</stRef:documentID>
            <stRef:originalDocumentID>uuid:2a47e32b-a52b-f946-b653-786d72ee576d</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:01801174072068118F6281D31C6C144D</stEvt:instanceID>
                  <stEvt:when>2016-04-11T15:36:07+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:01801174072068118F62CB862B5CCAB7</stEvt:instanceID>
                  <stEvt:when>2016-04-11T22:59:01+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:02801174072068118F62CB862B5CCAB7</stEvt:instanceID>
                  <stEvt:when>2016-04-11T23:10:42+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -2097.23 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2097.23 li
2463.12 2097.23 li
2463.12 0 li
cp
clp
[1 0 0 1 0 0 ]ct
.25 lw
1 lc
1 lj
4 ml
[] 0 dsh
true sadj
834.883 631.336 mo
322.986 631.336 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
.860075 .849699 .789548 1 cmyk
@
1100.78 1025.54 mo
1158.18 902.324 1158.18 779.111 1100.78 655.899 cv
1100.78 655.899 li
1100.78 655.899 li
1100.78 655.899 li
1093.15 639.524 1080.31 631.336 1062.24 631.336 cv
@
1062.24 1050.1 mo
1077.71 1050.78 1094.87 1039.84 1100.78 1025.54 cv
@
868.111 656.22 mo
985.966 656.22 li
@
985.966 656.22 mo
1045.7 656.22 li
@
1045.7 656.22 mo
1064.73 656.22 1077.84 665.774 1085.05 684.882 cv
1085.05 684.882 li
1085.05 684.882 li
1085.05 684.882 li
1124.22 788.773 1124.22 892.664 1085.05 996.555 cv
1085.05 996.555 li
1085.05 996.555 li
1085.05 996.555 li
1077.84 1015.66 1064.73 1025.22 1045.7 1025.22 cv
@
1045.7 1025.22 mo
985.966 1025.22 li
@
985.966 1025.22 mo
868.111 1025.22 li
@
834.883 1050.1 mo
1062.24 1050.1 li
@
1062.24 631.336 mo
834.883 631.336 li
@
322.986 631.336 mo
95.627 631.336 li
@
95.627 631.336 mo
77.5615 631.336 64.7148 639.524 57.0879 655.899 cv
57.0879 655.899 li
57.0879 655.899 li
57.0879 655.899 li
-.306152 779.111 -.306152 902.324 57.0879 1025.54 cv
57.0879 1025.54 li
57.0879 1025.54 li
57.0879 1025.54 li
64.7148 1041.91 77.5615 1050.1 95.627 1050.1 cv
@
95.627 1050.1 mo
322.986 1050.1 li
@
171.903 656.22 mo
289.758 656.22 li
@
289.758 1025.22 mo
171.903 1025.22 li
@
72.8223 684.882 mo
80.0254 665.774 93.1426 656.22 112.172 656.22 cv
@
112.172 1025.22 mo
93.1426 1025.22 80.0254 1015.66 72.8223 996.555 cv
72.8223 996.555 li
72.8223 996.555 li
72.8223 996.555 li
33.6523 892.664 33.6523 788.773 72.8223 684.882 cv
@
112.172 656.22 mo
171.903 656.22 li
@
171.903 1025.22 mo
112.172 1025.22 li
@
322.986 1050.1 mo
834.883 1050.1 li
@
289.758 656.22 mo
240.707 694.99 203.311 778.299 206.939 840.719 cv
@
206.939 840.719 mo
203.311 903.137 240.707 986.445 289.758 1025.22 cv
@
868.111 1025.22 mo
970.006 934.588 979.14 778.518 888.513 676.622 cv
888.513 676.622 li
883.715 671.028 873.704 661.018 868.111 656.22 cv
@
1 lw
0 lc
0 lj
410.225 705.826 mo
410.225 726.961 393.092 744.094 371.957 744.094 cv
350.822 744.094 333.689 726.961 333.689 705.826 cv
333.689 684.691 350.822 667.558 371.957 667.558 cv
393.092 667.558 410.225 684.691 410.225 705.826 cv
cp
@
410.225 975.611 mo
410.225 996.746 393.092 1013.88 371.957 1013.88 cv
350.822 1013.88 333.689 996.746 333.689 975.611 cv
333.689 954.477 350.822 937.344 371.957 937.344 cv
393.092 937.344 410.225 954.477 410.225 975.611 cv
cp
@
823.959 914.219 mo
823.959 935.354 806.826 952.486 785.691 952.486 cv
764.557 952.486 747.424 935.354 747.424 914.219 cv
747.424 893.084 764.557 875.951 785.691 875.951 cv
806.826 875.951 823.959 893.084 823.959 914.219 cv
cp
@
823.355 769.931 mo
823.355 791.065 806.223 808.198 785.088 808.198 cv
763.953 808.198 746.82 791.065 746.82 769.931 cv
746.82 748.796 763.953 731.663 785.088 731.663 cv
806.223 731.663 823.355 748.796 823.355 769.931 cv
cp
@
.25 lw
1 lc
1 lj
2340.28 1025.52 mo
2397.67 902.31 2397.67 779.097 2340.28 655.885 cv
2340.28 655.885 li
2340.28 655.885 li
2340.28 655.885 li
2332.65 639.51 2319.8 631.322 2301.74 631.322 cv
@
2301.74 631.322 mo
1335.13 631.322 li
@
1335.13 631.322 mo
1317.06 631.322 1304.21 639.51 1296.59 655.885 cv
1296.59 655.885 li
1296.59 655.885 li
1296.59 655.885 li
1239.19 779.097 1239.19 902.31 1296.59 1025.52 cv
1296.59 1025.52 li
1296.59 1025.52 li
1296.59 1025.52 li
1304.21 1041.9 1317.06 1050.09 1335.13 1050.09 cv
@
1335.13 1050.09 mo
2301.74 1050.09 li
@
2301.74 1050.09 mo
2317.2 1050.76 2334.37 1039.83 2340.28 1025.52 cv
@
1381.54 670.645 mo
1511.1 670.645 li
@
1511.1 1010.76 mo
1381.54 1010.76 li
@
2255.33 1010.76 mo
2125.76 1010.76 li
@
2125.76 670.645 mo
2255.33 670.645 li
@
1511.1 670.645 mo
1496.34 670.645 1484.73 676.691 1476.27 688.784 cv
1476.27 688.784 li
1476.27 688.784 li
1476.27 688.784 li
1444.35 734.394 1428.39 785.034 1428.39 840.704 cv
1428.39 840.704 li
1428.39 840.704 li
1428.39 840.704 li
1428.39 896.374 1444.35 947.014 1476.27 992.625 cv
@
1381.54 1010.76 mo
1372.9 1010.76 1365 1008.36 1357.84 1003.55 cv
1357.84 1003.55 li
1357.84 1003.55 li
1357.84 1003.55 li
1350.67 998.734 1345.45 992.333 1342.19 984.343 cv
1342.19 984.343 li
1342.19 984.343 li
1342.19 984.343 li
1323.36 938.314 1313.94 890.434 1313.94 840.704 cv
1313.94 840.704 li
1313.94 840.704 li
1313.94 840.704 li
1313.94 790.973 1323.36 743.093 1342.19 697.064 cv
1342.19 697.064 li
1342.19 697.064 li
1342.19 697.064 li
1345.45 689.075 1350.67 682.674 1357.84 677.863 cv
1357.84 677.863 li
1357.84 677.863 li
1357.84 677.863 li
1365 673.05 1372.9 670.645 1381.54 670.645 cv
@
1476.27 992.625 mo
1482.92 1003.31 1498.53 1011.44 1511.1 1010.76 cv
@
2125.76 1010.76 mo
2138.33 1011.44 2153.95 1003.31 2160.6 992.625 cv
@
2255.33 670.645 mo
2263.96 670.645 2271.86 673.05 2279.03 677.863 cv
2279.03 677.863 li
2279.03 677.863 li
2279.03 677.863 li
2286.2 682.674 2291.41 689.075 2294.68 697.064 cv
2294.68 697.064 li
2294.68 697.064 li
2294.68 697.064 li
2313.51 743.093 2322.92 790.973 2322.92 840.704 cv
2322.92 840.704 li
2322.92 840.704 li
2322.92 840.704 li
2322.92 890.434 2313.51 938.314 2294.68 984.343 cv
2294.68 984.343 li
2294.68 984.343 li
2294.68 984.343 li
2291.41 992.333 2286.2 998.734 2279.03 1003.55 cv
2279.03 1003.55 li
2279.03 1003.55 li
2279.03 1003.55 li
2271.86 1008.36 2263.96 1010.76 2255.33 1010.76 cv
@
2160.6 992.625 mo
2192.52 947.014 2208.48 896.374 2208.48 840.704 cv
2208.48 840.704 li
2208.48 840.704 li
2208.48 840.704 li
2208.48 785.034 2192.52 734.394 2160.6 688.784 cv
2160.6 688.784 li
2160.6 688.784 li
2160.6 688.784 li
2152.14 676.691 2140.52 670.645 2125.76 670.645 cv
@
1294.33 2097.07 mo
2260.95 2097.07 li
@
2299.49 2072.51 mo
2356.88 1949.29 2356.88 1826.08 2299.49 1702.87 cv
2299.49 1702.87 li
2299.49 1702.87 li
2299.49 1702.87 li
2291.86 1686.49 2279.01 1678.31 2260.95 1678.31 cv
@
1294.33 2097.07 mo
1276.27 2097.07 1263.42 2088.88 1255.79 2072.51 cv
1255.79 2072.51 li
1255.79 2072.51 li
1255.79 2072.51 li
1198.4 1949.29 1198.4 1826.08 1255.79 1702.87 cv
1255.79 1702.87 li
1255.79 1702.87 li
1255.79 1702.87 li
1263.42 1686.49 1276.27 1678.31 1294.33 1678.31 cv
2260.95 1678.31 li
@
2260.95 2097.07 mo
2276.41 2097.75 2293.58 2086.81 2299.49 2072.51 cv
@
1086.86 2066.01 mo
1144.26 1942.8 1144.26 1819.58 1086.86 1696.37 cv
1086.86 1696.37 li
1086.86 1696.37 li
1086.86 1696.37 li
1079.24 1680 1066.39 1671.81 1048.33 1671.81 cv
@
1048.33 1671.81 mo
81.7075 1671.81 li
@
81.7075 1671.81 mo
63.644 1671.81 50.7983 1680 43.1694 1696.37 cv
43.1694 1696.37 li
43.1694 1696.37 li
43.1694 1696.37 li
-14.2231 1819.58 -14.2231 1942.8 43.1694 2066.01 cv
43.1694 2066.01 li
43.1694 2066.01 li
43.1694 2066.01 li
50.7983 2082.38 63.644 2090.57 81.7075 2090.57 cv
@
81.7075 2090.57 mo
1048.33 2090.57 li
@
1048.33 2090.57 mo
1063.79 2091.25 1080.95 2080.31 1086.86 2066.01 cv
@
1001.91 2051.25 mo
128.121 2051.25 li
@
128.121 1711.13 mo
1001.91 1711.13 li
@
128.121 1711.13 mo
111.833 1710.48 94.3276 1722.23 88.769 1737.55 cv
@
1001.91 1711.13 mo
1020.94 1711.13 1034.06 1719.94 1041.26 1737.55 cv
1041.26 1737.55 li
1041.26 1737.55 li
1041.26 1737.55 li
1080.43 1833.31 1080.43 1929.07 1041.26 2024.83 cv
1041.26 2024.83 li
1041.26 2024.83 li
1041.26 2024.83 li
1034.06 2042.44 1020.94 2051.25 1001.91 2051.25 cv
@
128.121 2051.25 mo
109.09 2051.25 95.9741 2042.44 88.769 2024.83 cv
88.769 2024.83 li
88.769 2024.83 li
88.769 2024.83 li
49.6011 1929.07 49.6011 1833.31 88.769 1737.55 cv
@
2323.6 1555.87 mo
2380.99 1432.65 2380.99 1309.44 2323.6 1186.23 cv
2323.6 1186.23 li
2323.6 1186.23 li
2323.6 1186.23 li
2315.97 1169.86 2303.12 1161.67 2285.06 1161.67 cv
@
2285.06 1161.67 mo
1318.44 1161.67 li
@
1236.99 1381.45 mo
1238.52 1439.59 1252.82 1497.73 1279.9 1555.87 cv
1279.9 1555.87 li
1279.9 1555.87 li
1279.9 1555.87 li
1287.53 1572.24 1300.38 1580.43 1318.44 1580.43 cv
@
1318.44 1161.67 mo
1300.38 1161.67 1287.53 1169.86 1279.9 1186.23 cv
1279.9 1186.23 li
1279.9 1186.23 li
1279.9 1186.23 li
1253.99 1241.86 1239.78 1297.48 1237.26 1353.1 cv
@
1318.44 1580.43 mo
2285.06 1580.43 li
@
2285.06 1580.43 mo
2300.52 1581.11 2317.68 1570.17 2323.6 1555.87 cv
@
2238.65 1541.11 mo
1364.85 1541.11 li
@
1364.85 1200.99 mo
2238.65 1200.99 li
@
1364.85 1200.99 mo
1348.57 1200.34 1331.06 1212.09 1325.5 1227.41 cv
@
2238.65 1200.99 mo
2257.68 1200.99 2270.79 1209.8 2278 1227.41 cv
2278 1227.41 li
2278 1227.41 li
2278 1227.41 li
2317.17 1323.17 2317.17 1418.93 2278 1514.69 cv
2278 1514.69 li
2278 1514.69 li
2278 1514.69 li
2270.79 1532.3 2257.68 1541.11 2238.65 1541.11 cv
@
1296.59 1353.1 mo
1298.73 1311.21 1308.37 1269.31 1325.5 1227.41 cv
@
1364.85 1541.11 mo
1345.82 1541.11 1332.71 1532.3 1325.5 1514.69 cv
1325.5 1514.69 li
1325.5 1514.69 li
1325.5 1514.69 li
1307.34 1470.27 1297.6 1425.86 1296.28 1381.45 cv
@
.251202 lw
0 lc
0 lj
1237.26 1353.1 mo
1254.04 1353.1 1296.59 1353.1 1296.59 1353.1 cv
@
1296.28 1381.45 mo
1236.99 1381.45 li
@
.25 lw
1 lc
1 lj
2135.05 1449.28 mo
2135.05 1449.28 li
2135.05 1449.28 li
2135.05 1449.28 li
2089.44 1417.36 2038.8 1401.41 1983.13 1401.41 cv
1983.13 1401.41 li
1983.13 1401.41 li
1983.13 1401.41 li
1927.46 1401.41 1876.82 1417.36 1831.21 1449.28 cv
@
2153.19 1354.55 mo
2153.19 1449.28 li
2135.04 1449.28 li
@
1813.07 1354.55 mo
1813.07 1345.92 1815.47 1338.02 1820.29 1330.86 cv
1820.29 1330.86 li
1820.29 1330.86 li
1820.29 1330.86 li
1825.1 1323.69 1831.5 1318.47 1839.49 1315.2 cv
1839.49 1315.2 li
1839.49 1315.2 li
1839.49 1315.2 li
1885.52 1296.38 1933.4 1286.96 1983.13 1286.96 cv
1983.13 1286.96 li
1983.13 1286.96 li
1983.13 1286.96 li
2032.86 1286.96 2080.74 1296.38 2126.77 1315.2 cv
2126.77 1315.2 li
2126.77 1315.2 li
2126.77 1315.2 li
2134.76 1318.47 2141.16 1323.69 2145.97 1330.86 cv
2145.97 1330.86 li
2145.97 1330.86 li
2145.97 1330.86 li
2150.78 1338.02 2153.19 1345.92 2153.19 1354.55 cv
@
1813.07 1354.55 mo
1813.07 1449.28 li
1814.36 1449.28 1831.21 1449.28 1831.21 1449.28 cv
@
1798.63 1502.27 mo
1798.63 1384.42 li
@
2138.96 1285.34 mo
2158.07 1292.54 2167.63 1305.66 2167.63 1324.69 cv
@
1798.63 1324.69 mo
1798.63 1305.66 1808.18 1292.54 1827.29 1285.34 cv
1827.29 1285.34 li
1827.29 1285.34 li
1827.29 1285.34 li
1931.18 1246.17 2035.07 1246.17 2138.96 1285.34 cv
@
2167.63 1324.69 mo
2167.63 1384.42 li
@
1798.63 1384.42 mo
1798.63 1324.69 li
@
1798.63 1502.27 mo
1847.74 1447.06 1909.24 1419.45 1983.13 1419.45 cv
1983.13 1419.45 li
1983.13 1419.45 li
1983.13 1419.45 li
2057.02 1419.45 2118.52 1447.06 2167.63 1502.27 cv
@
2167.63 1384.42 mo
2167.63 1502.27 li
@
1739.56 1449.28 mo
1739.56 1449.28 li
1739.56 1449.28 li
1739.56 1449.28 li
1693.95 1417.36 1643.31 1401.4 1587.64 1401.4 cv
1587.64 1401.4 li
1587.64 1401.4 li
1587.64 1401.4 li
1531.97 1401.4 1481.33 1417.36 1435.72 1449.28 cv
@
1757.7 1354.55 mo
1757.7 1449.28 li
1739.56 1449.28 li
@
1417.58 1354.55 mo
1417.58 1345.92 1419.99 1338.02 1424.8 1330.85 cv
1424.8 1330.85 li
1424.8 1330.85 li
1424.8 1330.85 li
1429.61 1323.69 1436.01 1318.47 1444 1315.2 cv
1444 1315.2 li
1444 1315.2 li
1444 1315.2 li
1490.03 1296.38 1537.91 1286.96 1587.64 1286.96 cv
1587.64 1286.96 li
1587.64 1286.96 li
1587.64 1286.96 li
1637.37 1286.96 1685.25 1296.38 1731.28 1315.2 cv
1731.28 1315.2 li
1731.28 1315.2 li
1731.28 1315.2 li
1739.27 1318.47 1745.67 1323.69 1750.48 1330.85 cv
1750.48 1330.85 li
1750.48 1330.85 li
1750.48 1330.85 li
1755.3 1338.02 1757.7 1345.92 1757.7 1354.55 cv
@
1417.58 1354.55 mo
1417.58 1449.28 li
1418.88 1449.28 1435.72 1449.28 1435.72 1449.28 cv
@
1403.14 1502.27 mo
1403.14 1384.42 li
@
1743.48 1285.34 mo
1762.59 1292.54 1772.14 1305.66 1772.14 1324.69 cv
@
1403.14 1324.69 mo
1403.14 1305.66 1412.7 1292.54 1431.81 1285.34 cv
1431.81 1285.34 li
1431.81 1285.34 li
1431.81 1285.34 li
1535.7 1246.17 1639.59 1246.17 1743.48 1285.34 cv
@
1772.14 1324.69 mo
1772.14 1384.42 li
@
1403.14 1384.42 mo
1403.14 1324.69 li
@
1403.14 1502.27 mo
1452.25 1447.06 1513.75 1419.45 1587.64 1419.45 cv
1587.64 1419.45 li
1587.64 1419.45 li
1587.64 1419.45 li
1661.53 1419.45 1723.03 1447.06 1772.14 1502.27 cv
@
1772.14 1384.42 mo
1772.14 1502.27 li
@
1596.15 1269.95 mo
1596.15 1274.65 1592.34 1278.46 1587.64 1278.46 cv
1582.95 1278.46 1579.14 1274.65 1579.14 1269.95 cv
1579.14 1265.26 1582.95 1261.45 1587.64 1261.45 cv
1592.34 1261.45 1596.15 1265.26 1596.15 1269.95 cv
cp
@
1991.63 1269.95 mo
1991.63 1274.65 1987.82 1278.46 1983.13 1278.46 cv
1978.43 1278.46 1974.62 1274.65 1974.62 1269.95 cv
1974.62 1265.26 1978.43 1261.45 1983.13 1261.45 cv
1987.82 1261.45 1991.63 1265.26 1991.63 1269.95 cv
cp
@
835.185 1161.68 mo
323.289 1161.68 li
@
1101.08 1555.88 mo
1158.48 1432.67 1158.48 1309.46 1101.08 1186.25 cv
1101.08 1186.25 li
1101.08 1186.25 li
1101.08 1186.25 li
1093.46 1169.87 1080.61 1161.68 1062.54 1161.68 cv
@
1062.54 1580.44 mo
1078.01 1581.12 1095.17 1570.19 1101.08 1555.88 cv
@
868.414 1186.57 mo
986.268 1186.57 li
@
986.268 1186.57 mo
1046 1186.57 li
@
1046 1186.57 mo
1065.03 1186.57 1078.15 1196.12 1085.35 1215.23 cv
1085.35 1215.23 li
1085.35 1215.23 li
1085.35 1215.23 li
1124.52 1319.12 1124.52 1423.01 1085.35 1526.9 cv
1085.35 1526.9 li
1085.35 1526.9 li
1085.35 1526.9 li
1078.15 1546.01 1065.03 1555.56 1046 1555.56 cv
@
1046 1555.56 mo
986.268 1555.56 li
@
986.268 1555.56 mo
868.414 1555.56 li
@
835.185 1580.44 mo
1062.54 1580.44 li
@
1062.54 1161.68 mo
835.185 1161.68 li
@
323.289 1161.68 mo
95.9292 1161.68 li
@
95.9292 1161.68 mo
77.8638 1161.68 65.0171 1169.87 57.3901 1186.25 cv
57.3901 1186.25 li
57.3901 1186.25 li
57.3901 1186.25 li
-.00390625 1309.46 -.00390625 1432.67 57.3901 1555.88 cv
57.3901 1555.88 li
57.3901 1555.88 li
57.3901 1555.88 li
65.0171 1572.26 77.8638 1580.44 95.9292 1580.44 cv
@
95.9292 1580.44 mo
323.289 1580.44 li
@
172.206 1186.57 mo
290.06 1186.57 li
@
290.06 1555.56 mo
172.206 1555.56 li
@
73.1245 1215.23 mo
80.3276 1196.12 93.4448 1186.57 112.474 1186.57 cv
@
112.474 1555.56 mo
93.4448 1555.56 80.3276 1546.01 73.1245 1526.9 cv
73.1245 1526.9 li
73.1245 1526.9 li
73.1245 1526.9 li
33.9546 1423.01 33.9546 1319.12 73.1245 1215.23 cv
@
112.474 1186.57 mo
172.206 1186.57 li
@
172.206 1555.56 mo
112.474 1555.56 li
@
323.289 1580.44 mo
835.185 1580.44 li
@
290.06 1186.57 mo
241.009 1225.34 203.613 1308.65 207.242 1371.07 cv
@
207.242 1371.07 mo
203.613 1433.48 241.009 1516.79 290.06 1555.56 cv
@
868.414 1555.56 mo
970.308 1464.93 979.442 1308.87 888.815 1206.97 cv
888.815 1206.97 li
884.017 1201.38 874.006 1191.37 868.414 1186.57 cv
@
1 lw
0 lc
0 lj
602.332 840.718 mo
602.332 860.286 586.469 876.149 566.899 876.149 cv
547.33 876.149 531.467 860.286 531.467 840.718 cv
531.467 821.149 547.33 805.286 566.899 805.286 cv
586.469 805.286 602.332 821.149 602.332 840.718 cv
cp
@
.25 lw
1 lc
1 lj
655.81 96.5337 mo
143.913 96.5337 li
143.913 96.5337 130.376 102.852 110.685 121.417 cv
@
143.913 515.297 mo
655.81 515.297 li
@
110.685 121.417 mo
61.6338 160.188 24.2373 243.496 27.8662 305.916 cv
@
27.8662 305.916 mo
24.2373 368.334 61.6338 451.643 110.685 490.414 cv
@
689.038 490.414 mo
790.933 399.785 800.066 243.715 709.439 141.819 cv
709.439 141.819 li
704.642 136.226 694.631 126.215 689.038 121.417 cv
@
1 lw
0 lc
0 lj
231.151 171.023 mo
231.151 192.158 214.019 209.291 192.884 209.291 cv
171.749 209.291 154.616 192.158 154.616 171.023 cv
154.616 149.888 171.749 132.755 192.884 132.755 cv
214.019 132.755 231.151 149.888 231.151 171.023 cv
cp
@
231.151 440.809 mo
231.151 461.943 214.019 479.076 192.884 479.076 cv
171.749 479.076 154.616 461.943 154.616 440.809 cv
154.616 419.674 171.749 402.541 192.884 402.541 cv
214.019 402.541 231.151 419.674 231.151 440.809 cv
cp
@
644.886 379.416 mo
644.886 400.551 627.753 417.684 606.618 417.684 cv
585.483 417.684 568.351 400.551 568.351 379.416 cv
568.351 358.281 585.483 341.148 606.618 341.148 cv
627.753 341.148 644.886 358.281 644.886 379.416 cv
cp
@
644.282 235.128 mo
644.282 256.263 627.149 273.396 606.015 273.396 cv
584.88 273.396 567.747 256.263 567.747 235.128 cv
567.747 213.993 584.88 196.86 606.015 196.86 cv
627.149 196.86 644.282 213.993 644.282 235.128 cv
cp
@
.25 lw
1 lc
1 lj
143.913 515.297 mo
143.913 515.297 130.376 508.98 110.685 490.414 cv
@
655.814 96.5352 mo
655.814 96.5352 669.351 102.852 689.042 121.418 cv
@
655.814 515.299 mo
655.814 515.299 669.351 508.981 689.042 490.415 cv
@
511.134 300.247 mo
511.088 300.247 511.044 300.253 510.999 300.254 cv
508.039 234.782 454.028 182.609 387.826 182.609 cv
321.624 182.609 267.613 234.782 264.653 300.254 cv
264.608 300.253 264.564 300.247 264.519 300.247 cv
261.387 300.247 258.849 302.785 258.849 305.916 cv
258.849 309.047 261.387 311.585 264.519 311.585 cv
264.564 311.585 264.608 311.579 264.653 311.578 cv
267.613 377.051 321.624 429.224 387.826 429.224 cv
454.028 429.224 508.039 377.051 510.999 311.578 cv
511.044 311.579 511.088 311.585 511.134 311.585 cv
514.265 311.585 516.803 309.047 516.803 305.916 cv
516.803 302.785 514.265 300.247 511.134 300.247 cv
cp
@
%ADOBeginSubsetFont: MyriadPro-Regular Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /MyriadPro-Regular def/FontInfo 7 dict dup begin/Notice (Copyright 1992, 1994, 1997, 2000, 2004 Adobe Systems Incorporated. All rights reserved. Protected by U.S. Patents D454,582. Myriad is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def/Weight (Regular) def/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 95 /underscore putdup 97 /a putdup 99 /c putdup 101 /e putdup 102 /f putdup 105 /i putdup 108 /l putdup 110 /n putdup 112 /p putdup 114 /r putdup 115 /s putdup 116 /t putdup 120 /x putdup 121 /y putdup 127 /f_i putdef/FontBBox {-157 -250 1126 952} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def/BlueScale 0.0604582 def/StdHW [67] def/StdVW [88] def/StemSnapV [88 92] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings17 dict dup begin/space <1C60D8A8C9B896187A> |-/underscore <1C60D8A8C9B7A73DB5FD3C3C923B7843323CF8B6FBF0CBA0C46FB7> |-/a <1C60D8A8C9B75946039FC5B56ED6A50878B478B1780B40C4125CE8039A261528F027CE6FDEC5783823498623E2545F156FE1817CCA8E4CEF932EAF146EA4E45F8E44AF7B3429BDE6EAD3417E01676A62E7E41175148C72742B2C6CC241FF06B9AE6A99EACBD61DC0A967A1A9EA490A3B86CCCCBA356FE0C46F09ED4CCD9D7FD84EFCB667453A166D73A23A48C3A48DCEEFA9A85E6DA8EDA33C7A566D88393EC5B1BCAE7CEACDFA7D9A043D> |-/c <1C60D8A8C9B77BBBDD6F2DE36836EA750B0DCDA2C66B70D3B3E9B799935A114CCF88968CB157B7DEA63450CA5D1B4BBF8E61AF225B205D414E242FC06624097F1B5D47BF4F384727F53BA1763156DBDB0266> |-/e <1C60D8A8C9B7A66F85F3DBE5AE1E76F6A9740420B265CA4AC9DE99AD8AEDC4233110D7344BA8969F49ACBE3164296BAF8D8824063AB5A81F8F9142D2C0492C8D085FBBDD29052840FCC873C574581FB314AC3521D9DA4AE8E6D987C45E9E8106797186054DABC39E6B> |-/f <1C60D8A8C9B8469EE0EEFD5AEC6CA97A72064EDB5F8138E6D1529C05D71AD800DE9767801FDF34CB86E1E21FD9D405698D46905E6F519DDB7CBC96570BA09B7E74CE45A9784C89ACE8876894AF309C859106C75B1212CD> |-/i <1C60D8A8C9B88055FF27B3934D040E8DA53B043AB8CFF68E8D519FEAB9D5A4874DC9B90E63751BC12355D9D8276E2A66CDDB9CE6DD75534C5A54C45E2D6E21C6C79BBDA40B7772F2DEC85ADAD3476B> |-/l <1C60D8A8C9B87EB6C12D27FEBAAD9108B57B5CEF2AA76DC2FD884A8623> |-/n <1C60D8A8C9B790A816BA887E1EEC2C6B98EC99098FC021FEBA148F884875E3B03D8F5BA9B51A6918EFA4195D8FABF82DC961545110C1672CA0A5B167A36646DBDC6B2B1EB2CCFFCB412605A41F5E921E35125025B68561FC08FF5F5A87F0318D13C761F9DF> |-/p <1C60D8A8C9B7E2CE2B5D9AEC775B38F2FDCA5DD8FB0C9C7D76709EB2E3CEF7455DFF330D234D9132A6F52698D79064F174F1D99AEB0CF9139A6469F8D4BE826FAC77DD18B951C7429F3A77A1434C1A624632AE9545E6FD8A1CFF86A978EB2F9D9C8D213E3AEF1293A1DF353A70DA5E24E2AC4CE8D2656D24B8166AAA778D66777269CA00CCD283376A690AE85A4058A8C9155FC3FA3A08F87D3A4F002FFBBE8C69D79181> |-/r <1C60D8A8C9B825FA276057E430FDF01407E8A25201058EF45B5C185214AB1116383552C8A26ACD44FF0BE1E00A052AF17C7B552C44648BDA524B50952CB0AE525A4563499AD1C42D4D0C12A5AD458628362FB1B81E032637466F> |-/s <1C60D8A8C9B70FAD6F31E6985338EEEA1793890FC3B3DC4027B9CC9488D5A6B4D4C4E3E08CED307B2C798C1699A9DD310011666D86920512F1C3EB9CEE4F24B897BB1E950EE111237B9A2BC5BBB8732A07D9407EA3C86D8241785B5209F0AEBA9DE73147EEE82D829B87C7> |-/t <1C60D8A8C9B821B37F30E246C711EE3A9B1905ECA3B2281EC66105C6FB87D8A11F34421A86A4C8EB1634F07587A29F1959067E8F5C01D391C88E6402088837AF0D6E016A2B2057BCC898EDBE8C7509BAF139B3EFB89894D72C8915100CD3D16C57> |-/x <1C60D8A8C9B74CDDCE74E258E27BD7DEC2AC84271E6C98FD20D770EC885A525E4B13092058B38B98D913CBB4CB890C6B5723895529FEAE9BA916EC36A86A9F59939408772A8E004C80432C1BF5EAC4792ACA2BAD6B237FD805243D3976056A1B26> |-/y <1C60D8A8C9B744514052D02E803EBAB86C11F12291D9D5A1504FC788087D686381D5B543506197B0A8ADF9BBF970FE769142A069FB8380E5823DCC497A6C0095124D4923B5CA9C6A958F4E90ADD7B82826865D1CD8932D873AEC8C248461B62B69DDE1FA42A8CFA455E382875F1E62FEF36E2B6CCC071B48DCAFB9B91BFAAE28D80C> |-/f_i <1C60D8A8C9B7B07F53A1558F68652DF6013355F9F1E87F50373E8BD48BCCABB3EC3C45930D0DF90952BCC40A7766C7F4D86466254C59FDE5BEB84264CA9494C8579C506D93908483998E668F169235E3B7355EDBD18D1B600312> |-/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B17192> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/SARMTK+MyriadPro-Regular /MyriadPro-Regular findfont ct_VMDictPut/SARMTK+MyriadPro-Regular*1 [32{/.notdef}rp /space 62{/.notdef}rp /underscore /.notdef /a /.notdef /c /.notdef /e /f 2{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /.notdef /p /.notdef /r /s /t 3{/.notdef}rp /x /y 5{/.notdef}rp /f_i 128{/.notdef}rp]SARMTK+MyriadPro-Regular nfSARMTK+MyriadPro-Regular*1 [48 0 0 -48 0 0 ]msf87.0884 56.959 mo(interface_\177rls layer_plexy)[11.2319 26.4478 15.6001 24.0479 17.1357 14.0156 23.1357 21.2158 24.0474 24 25.1035 15.8877 11.3276 19.0078 10.1758 11.3276 22.752 22.1284 24.0479 15.6953 24 27.3115 11.3271 23.9043 22.9434 0 ]xsh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginSARMTK+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/eight <1C60D8A8C9B7BA8F623D810BCFAA50091BF89AB5BE3357ACF7A8EC11C35A526108259CA49EFD17EA8971235551BABBA49C018C3375128659D5D7051D45E4C4ECFE02CC0D35373F3D4B2DC792F4C41BCD9DEAF2AC24EA7A456EB3C15513EE5D201ACCA4975153635E279761AFF1AF1596B3D3861988A67B17B4B842347EAF131C1ABA71797B1264826F04BDED0719803E211C51F417CEBD773552253C6786889CD2B3EB81707FCE2453D0BD7C65B6D6DB5614A7F2FDB700BE408D6F36A3C20DDE8F30CA7C808E9263350AB2907E45DC2CA6BBA6B44E98822CA142BAF4C98107A946AA8711E8E6F4BC5EB9C6DC60704FA7E3779BF270D263AF4819BBE793351D4C> |-/d <1C60D8A8C9B7E7C1D82219353B31AE497773900CFE039E7C34F7CEBE101056958EFFC2C789CCBD8768CC683564B6074DAAAE648B50C88AD4C58AC712C8476BA68C74E592EF7E71792F9E5367AB3C80F9D183D28DD5E961AA14DCB5D9206768FB9E099DA642A8BAA73D52C56C9913DC619FDF3F90996DC8D242E6BF94BEBE752CB2F5D6196384CDD6E5AC10AFB49712810FFD82A2782B9B182DA37A23E6043872EFC1C407DD53136E> |-/m <1C60D8A8C9B6B770778B71072C32D83B2DE18F9EFFEDDA9C73816E98D1CE691983731B7222B167A6D2F63D304D344E93EA069603D18629A4320C5F1BC8DCC049DE26F978CA9BC88005768D4CD278F658DBD0215EC4C428D90DCB1C70291E674313AFD07F4ACB4C5152C73088F1801AB89447326D19BFA79413EE5F810BDD4269F23365D24789FC23A7E37320B3F849B7FB9F5D52128289A6456940F89EBCF3> |-/o <1C60D8A8C9B7967683396363C4C5A9E451FFBD75248EC3A8EC4B566E5BD4E7BBB72EB29C672F7BE91209F1171F84980F7DA08B43C90BC9E3BDC65B190F81C7A4B1ED6D074E407F8CF228B147D6A94BC016CC67> |-/w <1C60D8A8C9B615D1D39C3ADF830FB08A1A35A87DCFD157E58FABDD21BA80846DED508D58D627D5468CDEA878B4EBB2BC39F9E17357A3B538845D213A53BE481E0D6B92FA11EAB84DAA099CD1E52DEE6734C0A900F3A37F8B6CBD74174B2BAF5100CBE402299FC69ADD471E1494375657D0074EB17A39D5C9C17257D613AB99E3> |-systemdict /gcheck known {setglobal} if end {end} ifendSARMTK+MyriadPro-Regular /Encoding getdup 56 /eight putdup 100 /d putdup 109 /m putdup 111 /o putdup 119 /w putpop%ADOEndSubsetFont
/SARMTK+MyriadPro-Regular*1 [32{/.notdef}rp /space 23{/.notdef}rp /eight 38{/.notdef}rp /underscore /.notdef /a /.notdef /c /d /e /f 2{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t 2{/.notdef}rp /w /x /y 5{/.notdef}rp /f_i 128{/.notdef}rp]SARMTK+MyriadPro-Regular nfSARMTK+MyriadPro-Regular*1 [48 0 0 -48 0 0 ]msf1034.86 40.1763 mo(second layer plywood 8mm)[19.0078 24.0479 21.2158 26.3516 26.6396 27.0723 10.1748 11.3281 22.752 22.1279 24.0479 15.6958 10.1753 27.3115 11.3276 23.1836 34.8481 26.3516 26.3516 27.0723 10.1748 24.623 40.0322 0 ]xsh1582.46 96.5332 mo
1070.57 96.5332 li
1070.57 96.5332 1057.03 102.851 1037.34 121.417 cv
@
1070.57 515.296 mo
1582.46 515.296 li
@
1037.34 121.417 mo
988.286 160.187 950.89 243.496 954.519 305.916 cv
@
954.519 305.916 mo
950.89 368.334 988.286 451.642 1037.34 490.414 cv
@
1615.69 490.414 mo
1717.58 399.785 1726.72 243.714 1636.09 141.818 cv
1636.09 141.818 li
1631.29 136.226 1621.28 126.215 1615.69 121.417 cv
@
1 lw
0 lc
0 lj
1157.8 171.023 mo
1157.8 192.158 1140.67 209.291 1119.54 209.291 cv
1098.4 209.291 1081.27 192.158 1081.27 171.023 cv
1081.27 149.888 1098.4 132.755 1119.54 132.755 cv
1140.67 132.755 1157.8 149.888 1157.8 171.023 cv
cp
@
1157.8 440.808 mo
1157.8 461.943 1140.67 479.076 1119.54 479.076 cv
1098.4 479.076 1081.27 461.943 1081.27 440.808 cv
1081.27 419.673 1098.4 402.541 1119.54 402.541 cv
1140.67 402.541 1157.8 419.673 1157.8 440.808 cv
cp
@
1571.54 379.416 mo
1571.54 400.551 1554.41 417.684 1533.27 417.684 cv
1512.14 417.684 1495 400.551 1495 379.416 cv
1495 358.281 1512.14 341.148 1533.27 341.148 cv
1554.41 341.148 1571.54 358.281 1571.54 379.416 cv
cp
@
1570.93 235.127 mo
1570.93 256.262 1553.8 273.395 1532.67 273.395 cv
1511.53 273.395 1494.4 256.262 1494.4 235.127 cv
1494.4 213.993 1511.53 196.86 1532.67 196.86 cv
1553.8 196.86 1570.93 213.993 1570.93 235.127 cv
cp
@
.25 lw
1 lc
1 lj
1070.57 515.297 mo
1070.57 515.297 1057.03 508.979 1037.34 490.414 cv
@
1582.47 96.5342 mo
1582.47 96.5342 1596 102.852 1615.69 121.418 cv
@
1582.47 515.298 mo
1582.47 515.298 1596 508.98 1615.69 490.415 cv
@
1437.79 300.247 mo
1437.74 300.247 1437.7 300.252 1437.65 300.253 cv
1434.69 234.782 1380.68 182.609 1314.48 182.609 cv
1248.28 182.609 1194.27 234.782 1191.31 300.253 cv
1191.26 300.252 1191.22 300.247 1191.17 300.247 cv
1188.04 300.247 1185.5 302.785 1185.5 305.916 cv
1185.5 309.046 1188.04 311.584 1191.17 311.584 cv
1191.22 311.584 1191.26 311.579 1191.31 311.578 cv
1194.27 377.051 1248.28 429.224 1314.48 429.224 cv
1380.68 429.224 1434.69 377.051 1437.65 311.578 cv
1437.7 311.579 1437.74 311.584 1437.79 311.584 cv
1440.92 311.584 1443.46 309.046 1443.46 305.916 cv
1443.46 302.785 1440.92 300.247 1437.79 300.247 cv
cp
@
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginSARMTK+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/h <1C60D8A8C9B790A816BA887E1DA4852044FABD5C80CA3A9E2E9C1F200BD200369E1A531F52CE66B5B19C492F0751A1C2858510B2E2690FB789B214E0E0C6537C1C71B0F5B79BE42FC591254AEEEA9BA5BA2F0A43A49AB11B4C> |-systemdict /gcheck known {setglobal} if end {end} ifendSARMTK+MyriadPro-Regular /Encoding getdup 104 /h putpop%ADOEndSubsetFont
/SARMTK+MyriadPro-Regular*1 [32{/.notdef}rp /space 23{/.notdef}rp /eight 38{/.notdef}rp /underscore /.notdef /a /.notdef /c /d /e /f /.notdef /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t 2{/.notdef}rp /w /x /y 5{/.notdef}rp /f_i 128{/.notdef}rp]SARMTK+MyriadPro-Regular nfSARMTK+MyriadPro-Regular*1 [48 0 0 -48 0 0 ]msf1799.34 45.3262 mo(thi)sh1853.1 45.3262 mo(rd layer plywood 8mm)[15.2158 27.0723 10.1758 11.3271 22.752 22.1284 24.0479 15.6958 10.1753 27.3115 11.3276 23.1836 34.8477 26.3525 26.3516 27.0713 10.1758 24.623 40.0322 0 ]xsh2346.94 101.684 mo
1835.05 101.684 li
1835.05 101.684 1821.51 108.001 1801.82 126.567 cv
@
1835.05 520.447 mo
2346.94 520.447 li
@
1801.82 126.567 mo
1752.77 165.337 1715.37 248.646 1719 311.066 cv
@
1719 311.066 mo
1715.37 373.484 1752.77 456.792 1801.82 495.564 cv
@
2380.17 495.564 mo
2482.07 404.935 2491.2 248.865 2400.57 146.969 cv
2400.57 146.969 li
2395.78 141.376 2385.77 131.365 2380.17 126.567 cv
@
1 lw
0 lc
0 lj
1922.29 176.173 mo
1922.29 197.308 1905.15 214.441 1884.02 214.441 cv
1862.88 214.441 1845.75 197.308 1845.75 176.173 cv
1845.75 155.038 1862.88 137.905 1884.02 137.905 cv
1905.15 137.905 1922.29 155.038 1922.29 176.173 cv
cp
@
1922.29 445.958 mo
1922.29 467.093 1905.15 484.226 1884.02 484.226 cv
1862.88 484.226 1845.75 467.093 1845.75 445.958 cv
1845.75 424.824 1862.88 407.691 1884.02 407.691 cv
1905.15 407.691 1922.29 424.824 1922.29 445.958 cv
cp
@
2336.02 384.566 mo
2336.02 405.701 2318.89 422.834 2297.75 422.834 cv
2276.62 422.834 2259.49 405.701 2259.49 384.566 cv
2259.49 363.431 2276.62 346.299 2297.75 346.299 cv
2318.89 346.299 2336.02 363.431 2336.02 384.566 cv
cp
@
2335.42 240.278 mo
2335.42 261.413 2318.28 278.545 2297.15 278.545 cv
2276.01 278.545 2258.88 261.413 2258.88 240.278 cv
2258.88 219.144 2276.01 202.01 2297.15 202.01 cv
2318.28 202.01 2335.42 219.144 2335.42 240.278 cv
cp
@
.25 lw
1 lc
1 lj
1835.05 520.447 mo
1835.05 520.447 1821.51 514.13 1801.82 495.564 cv
@
2346.95 101.685 mo
2346.95 101.685 2360.49 108.002 2380.18 126.568 cv
@
2346.95 520.448 mo
2346.95 520.448 2360.49 514.131 2380.18 495.565 cv
@
2202.27 305.397 mo
2202.22 305.397 2202.18 305.403 2202.13 305.404 cv
2199.17 239.932 2145.16 187.759 2078.96 187.759 cv
2012.76 187.759 1958.75 239.932 1955.79 305.404 cv
1955.74 305.403 1955.7 305.397 1955.65 305.397 cv
1952.52 305.397 1949.98 307.935 1949.98 311.066 cv
1949.98 314.197 1952.52 316.735 1955.65 316.735 cv
1955.7 316.735 1955.74 316.729 1955.79 316.728 cv
1958.75 382.201 2012.76 434.374 2078.96 434.374 cv
2145.16 434.374 2199.17 382.201 2202.13 316.728 cv
2202.18 316.729 2202.22 316.735 2202.27 316.735 cv
2205.4 316.735 2207.94 314.197 2207.94 311.066 cv
2207.94 307.935 2205.4 305.397 2202.27 305.397 cv
cp
@
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginSARMTK+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/plus <1C60D8A8C9B7C7F3FCFFFDB16D71949556271E5F2AA88700268763C9ACD3F9E0997704EFB58B3C8E85BE2CD24BB97B678052C8703CE2AE55> |-/u <1C60D8A8C9B794D34CED683BC0F75FB25BE8ECA5D4F8D235649E81E6A62DD7B90AF6DE09B4373C71DC870DE9EFA0B94E7506F75EEE558DF81CD33372DAD0B84FB6B3C173C4DB8D5EA8C4F6D8C721F2FFE6909411B724C264F09293D8D8F89019F8CCCB6FE3AF5C57> |-systemdict /gcheck known {setglobal} if end {end} ifendSARMTK+MyriadPro-Regular /Encoding getdup 43 /plus putdup 117 /u putpop%ADOEndSubsetFont
/SARMTK+MyriadPro-Regular*1 [32{/.notdef}rp /space 10{/.notdef}rp /plus 12{/.notdef}rp /eight 38{/.notdef}rp /underscore /.notdef /a /.notdef /c /d /e /f /.notdef /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /.notdef /w /x /y 5{/.notdef}rp /f_i 128{/.notdef}rp]SARMTK+MyriadPro-Regular nfSARMTK+MyriadPro-Regular*1 [48 0 0 -48 0 0 ]msf70.7271 600.708 mo(fourth layer plywood 8mm + lateral windows)[13.3926 26.3516 26.4473 16.8477 15.8877 26.6396 10.1758 11.3271 22.752 22.1284 24.0479 15.6958 10.1753 27.3115 11.3276 23.1836 34.8477 26.3525 26.3516 27.0713 10.1758 24.623 40.0322 40.0322 10.1758 28.6074 10.1758 11.3271 22.9443 15.5996 24.0474 15.4565 23.1357 11.3271 10.1758 35.3281 11.2314 26.6396 27.0723 26.0166 35.0396 0 ]xshSARMTK+MyriadPro-Regular*1 [48 0 0 -48 0 0 ]msf1311.26 600.708 mo(\177fth layer plywood 8mm)[25.104 14.543 15.8877 26.6396 10.1758 11.3276 22.752 22.1284 24.0479 15.6953 10.1758 27.3115 11.3271 23.1836 34.8481 26.3521 26.3516 27.0718 10.1753 24.623 40.0322 0 ]xshSARMTK+MyriadPro-Regular*1 [48 0 0 -48 0 0 ]msf60.8218 1133.32 mo(sixth layer plywood 8mm)[19.0078 11.2319 22.8467 15.8877 26.6396 10.1758 11.3281 22.752 22.1279 24.0479 15.6958 10.1753 27.3115 11.3276 23.1836 34.8481 26.3516 26.3516 27.0723 10.1748 24.623 40.0322 0 ]xsh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginSARMTK+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/hyphen <1C60D8A8C9B8391507657B8D1429650EAD682B1E1FA8FF445B393CF432> |-systemdict /gcheck known {setglobal} if end {end} ifendSARMTK+MyriadPro-Regular /Encoding getdup 45 /hyphen putpop%ADOEndSubsetFont
/SARMTK+MyriadPro-Regular*1 [32{/.notdef}rp /space 10{/.notdef}rp /plus /.notdef /hyphen 10{/.notdef}rp /eight 38{/.notdef}rp /underscore /.notdef /a /.notdef /c /d /e /f /.notdef /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /.notdef /w /x /y 5{/.notdef}rp /f_i 128{/.notdef}rp]SARMTK+MyriadPro-Regular nfSARMTK+MyriadPro-Regular*1 [48 0 0 -48 0 0 ]msf1291.31 1133.32 mo(second last-layer plywood )[19.0078 24.0474 21.2158 26.3516 26.6396 27.0723 10.1748 11.3281 23.1357 19.0078 15.6479 14.7358 11.3276 22.752 22.1284 24.0479 15.6953 10.1758 27.3115 11.3271 23.1836 34.8481 26.3521 26.3516 27.0718 0 ]xsh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginSARMTK+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/b <1C60D8A8C9B7E2CE503F0CE2BC5634A8F8728B9E7DF78E9EB37EA1AAF5A6E14429B2FFC30BA7B2B7F7056F226E2401F24ABDAD5426247AC27BE4FA97CE94C91E5B97490DDD42E9AC1499720E52A641A6B5FD3039B53C33A6C3FB59A9FDC5809A26029808C985DEBED644B28F1427AE3990CDC08FE3F67389E1C6D971D03C58C4203806687562D626FE9888BA19E8E374C457B0F0CAD2096A35C2A25CA9F88F3E7B91EC8C23BC> |-systemdict /gcheck known {setglobal} if end {end} ifendSARMTK+MyriadPro-Regular /Encoding getdup 98 /b putpop%ADOEndSubsetFont
/SARMTK+MyriadPro-Regular*1 [32{/.notdef}rp /space 10{/.notdef}rp /plus /.notdef /hyphen 10{/.notdef}rp /eight 38{/.notdef}rp /underscore /.notdef /a /b /c /d /e /f /.notdef /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /.notdef /w /x /y 5{/.notdef}rp /f_i 128{/.notdef}rp]SARMTK+MyriadPro-Regular nfSARMTK+MyriadPro-Regular*1 [48 0 0 -48 0 0 ]msf1278.91 1643.46 mo(bottom layer plywood 8mm)[27.311 26.3516 15.8877 15.5996 26.3516 40.0322 10.1758 11.3281 22.752 22.1279 24.0479 15.6958 10.1753 27.3115 11.3276 23.1836 34.8481 26.3516 26.3516 27.0723 10.1748 24.623 40.0322 0 ]xshSARMTK+MyriadPro-Regular*1 [48 0 0 -48 0 0 ]msf60.8213 1643.46 mo(extra layer plywood 8mm)[23.9038 22.8467 15.8877 15.4565 23.1357 10.1753 11.3276 22.752 22.1284 24.0479 15.6953 10.1758 27.3115 11.3271 23.1836 34.8481 26.3521 26.3516 27.0718 10.1753 24.623 40.0322 0 ]xsh87.3594 879.598 mo
87.3594 880.251 87.1768 880.738 86.8105 881.064 cv
86.4844 881.433 85.873 881.615 84.9756 881.615 cv
83.957 881.615 82.6318 881.023 81.001 879.842 cv
79.4121 878.701 77.7207 877.092 75.9258 875.011 cv
74.1328 872.934 72.3398 870.507 70.5449 867.734 cv
68.752 864.922 67.1211 861.865 65.6533 858.563 cv
64.2266 855.261 63.0654 851.816 62.168 848.229 cv
61.2715 844.603 60.8223 840.953 60.8223 837.284 cv
60.8223 833.616 61.25 829.989 62.1074 826.401 cv
63.0039 822.773 64.1445 819.329 65.5313 816.067 cv
66.958 812.766 68.5684 809.728 70.3613 806.955 cv
72.1543 804.144 73.9492 801.719 75.7422 799.679 cv
77.5771 797.602 79.3301 795.992 81.001 794.849 cv
82.6719 793.667 84.1191 793.077 85.3418 793.077 cv
85.873 793.077 86.3418 793.239 86.748 793.564 cv
87.1563 793.851 87.3594 794.401 87.3594 795.217 cv
87.3594 795.992 87.0342 796.786 86.3809 797.602 cv
85.7305 798.376 84.9141 799.394 83.9365 800.658 cv
82.957 801.881 81.8779 803.431 80.6953 805.306 cv
79.5547 807.14 78.4941 809.505 77.5156 812.397 cv
76.5371 815.252 75.7227 818.737 75.0703 822.854 cv
74.418 826.932 74.0918 831.822 74.0918 837.529 cv
74.0918 843.237 74.418 848.108 75.0703 852.143 cv
75.7227 856.179 76.5371 859.603 77.5156 862.415 cv
78.4941 865.229 79.5547 867.552 80.6953 869.387 cv
81.8779 871.18 82.957 872.688 83.9365 873.911 cv
84.9141 875.136 85.7305 876.174 86.3809 877.029 cv
87.0342 877.845 87.3594 878.701 87.3594 879.598 cv
f
155.232 855.567 mo
155.232 858.746 154.6 861.865 153.337 864.922 cv
152.113 867.98 150.157 870.711 147.467 873.117 cv
144.776 875.521 141.332 877.458 137.133 878.925 cv
132.934 880.394 127.9 881.126 122.029 881.126 cv
118.606 881.126 115.527 880.881 112.797 880.394 cv
110.106 879.904 107.783 879.374 105.826 878.804 cv
103.584 878.109 101.566 877.335 99.7734 876.479 cv
99.7734 854.284 li
107.66 854.284 li
109.312 868.47 li
109.393 868.959 109.639 869.489 110.046 870.06 cv
110.494 870.631 110.941 871.018 111.391 871.22 cv
111.473 871.262 111.818 871.445 112.43 871.771 cv
113.041 872.057 113.877 872.382 114.938 872.749 cv
115.997 873.076 117.281 873.381 118.789 873.666 cv
120.338 873.951 122.092 874.095 124.048 874.095 cv
126.697 874.095 129.144 873.769 131.385 873.117 cv
133.668 872.423 135.625 871.445 137.256 870.181 cv
138.885 868.918 140.149 867.368 141.047 865.534 cv
141.984 863.701 142.453 861.62 142.453 859.298 cv
142.453 856.771 141.719 854.569 140.252 852.693 cv
138.824 850.777 137.011 849.086 134.811 847.618 cv
132.648 846.109 130.285 844.766 127.717 843.582 cv
125.148 842.4 122.723 841.259 120.44 840.158 cv
117.871 838.937 115.406 837.673 113.041 836.367 cv
110.717 835.064 108.66 833.555 106.866 831.843 cv
105.113 830.131 103.707 828.133 102.646 825.85 cv
101.628 823.527 101.118 820.774 101.118 817.596 cv
101.118 813.886 101.852 810.524 103.32 807.507 cv
104.787 804.49 106.805 801.923 109.373 799.802 cv
111.982 797.642 115.039 795.992 118.545 794.849 cv
122.092 793.667 125.922 793.077 130.04 793.077 cv
132.404 793.077 134.625 793.22 136.705 793.505 cv
138.824 793.791 140.781 794.156 142.575 794.605 cv
144.41 795.013 146.102 795.462 147.65 795.949 cv
149.24 796.439 150.729 796.907 152.113 797.356 cv
152.113 816.862 li
144.959 816.862 li
143.064 804.878 li
142.982 804.469 142.738 804.063 142.33 803.653 cv
141.964 803.247 141.597 802.94 141.229 802.738 cv
141.148 802.696 140.883 802.513 140.436 802.187 cv
139.986 801.861 139.313 801.535 138.417 801.208 cv
137.561 800.882 136.44 800.577 135.055 800.292 cv
133.709 800.007 132.098 799.864 130.224 799.864 cv
127.695 799.864 125.434 800.23 123.438 800.965 cv
121.439 801.697 119.748 802.738 118.361 804.082 cv
116.976 805.387 115.895 806.937 115.121 808.729 cv
114.387 810.524 114.02 812.48 114.02 814.599 cv
114.02 816.515 114.387 818.27 115.121 819.857 cv
115.895 821.407 117.016 822.854 118.484 824.2 cv
119.992 825.503 121.826 826.728 123.986 827.868 cv
126.146 829.009 128.634 830.11 131.445 831.17 cv
135.238 832.597 138.6 834.085 141.535 835.635 cv
144.512 837.183 146.998 838.915 148.996 840.832 cv
151.033 842.747 152.583 844.908 153.643 847.312 cv
154.703 849.677 155.232 852.428 155.232 855.567 cv
f
194.243 837.406 mo
194.243 841.076 193.795 844.723 192.898 848.353 cv
192.041 851.94 190.9 855.385 189.475 858.685 cv
188.088 861.946 186.498 864.984 184.705 867.796 cv
182.91 870.568 181.098 872.993 179.263 875.073 cv
177.469 877.11 175.717 878.701 174.004 879.842 cv
172.334 881.023 170.906 881.615 169.725 881.615 cv
169.193 881.615 168.725 881.452 168.318 881.126 cv
167.91 880.841 167.706 880.291 167.706 879.476 cv
167.706 878.701 168.033 877.926 168.684 877.151 cv
169.337 876.335 170.152 875.317 171.131 874.095 cv
172.109 872.831 173.168 871.281 174.311 869.446 cv
175.492 867.572 176.572 865.208 177.551 862.355 cv
178.529 859.46 179.344 855.975 179.996 851.897 cv
180.648 847.782 180.975 842.868 180.975 837.163 cv
180.975 831.455 180.648 826.584 179.996 822.548 cv
179.344 818.514 178.529 815.089 177.551 812.276 cv
176.572 809.464 175.492 807.16 174.311 805.367 cv
173.168 803.532 172.109 802.004 171.131 800.779 cv
170.152 799.558 169.337 798.538 168.684 797.723 cv
168.033 796.866 167.706 795.992 167.706 795.094 cv
167.706 794.442 167.869 793.952 168.195 793.626 cv
168.563 793.261 169.193 793.077 170.09 793.077 cv
171.11 793.077 172.414 793.667 174.004 794.849 cv
175.635 795.992 177.348 797.602 179.141 799.679 cv
180.934 801.76 182.728 804.205 184.521 807.018 cv
186.314 809.79 187.924 812.827 189.352 816.128 cv
190.818 819.429 192.002 822.895 192.898 826.522 cv
193.795 830.11 194.243 833.738 194.243 837.406 cv
f
550.458 201.215 mo
550.073 201.418 549.853 201.582 549.801 201.705 cv
549.749 201.827 549.773 202.121 549.873 202.584 cv
549.959 202.958 550.109 203.295 550.327 203.6 cv
550.544 203.904 550.906 204.262 551.414 204.675 cv
551.682 204.907 551.891 204.954 552.041 204.82 cv
552.197 204.675 552.464 204.157 552.842 203.264 cv
553.458 201.808 li
552.719 201.432 li
552.206 201.167 551.783 201.02 551.452 200.991 cv
551.121 200.96 550.79 201.037 550.458 201.215 cv
cp
548.182 201.871 mo
548.179 201.478 548.254 201.169 548.408 200.947 cv
548.562 200.726 548.901 200.442 549.427 200.098 cv
549.783 199.876 550.113 199.732 550.42 199.664 cv
550.727 199.594 551.138 199.613 551.655 199.717 cv
552.171 199.824 552.754 200.007 553.402 200.268 cv
554.05 200.527 554.944 200.92 556.083 201.445 cv
558.9 202.768 li
559.098 202.857 559.231 202.951 559.299 203.046 cv
559.367 203.144 559.408 203.287 559.421 203.476 cv
559.424 203.66 559.406 203.789 559.368 203.864 cv
559.33 203.939 559.248 204.001 559.12 204.051 cv
558.855 204.144 558.538 204.137 558.169 204.029 cv
557.801 203.921 557.248 203.677 556.512 203.293 cv
555.591 202.801 555.072 202.568 554.958 202.597 cv
554.892 202.614 554.792 202.792 554.66 203.133 cv
554.527 203.472 554.372 203.879 554.194 204.353 cv
554.017 204.827 553.86 205.177 553.726 205.405 cv
553.51 205.766 553.451 205.995 553.545 206.093 cv
553.594 206.151 554.072 206.526 554.979 207.22 cv
555.886 207.914 556.389 208.353 556.488 208.539 cv
556.608 208.736 556.613 208.92 556.503 209.091 cv
556.394 209.264 556.203 209.381 555.929 209.441 cv
555.771 209.472 555.632 209.47 555.514 209.435 cv
555.396 209.4 555.234 209.299 555.031 209.136 cv
554.828 208.974 554.604 208.781 554.36 208.56 cv
554.116 208.336 553.713 208.009 553.153 207.578 cv
552.593 207.146 551.967 206.689 551.276 206.208 cv
550.123 205.423 549.442 204.861 549.234 204.519 cv
549.025 204.178 548.874 203.98 548.782 203.925 cv
548.658 203.852 548.53 203.58 548.397 203.109 cv
548.265 202.64 548.194 202.227 548.182 201.871 cv
cp
f
555.171 191.058 mo
555.139 190.796 555.18 190.596 555.295 190.458 cv
555.402 190.329 555.632 190.274 555.982 190.292 cv
556.333 190.312 556.588 190.386 556.745 190.516 cv
556.837 190.593 557.019 190.713 557.289 190.876 cv
557.56 191.039 557.994 191.294 558.593 191.644 cv
559.191 191.994 559.79 192.354 560.386 192.726 cv
561.055 193.14 561.816 193.558 562.668 193.978 cv
563.521 194.398 564.131 194.66 564.498 194.761 cv
565.283 194.962 565.833 195.295 566.149 195.76 cv
566.394 196.104 566.334 196.335 565.97 196.455 cv
565.599 196.582 565.078 196.551 564.409 196.362 cv
563.739 196.171 563.152 195.968 562.646 195.75 cv
562.141 195.533 561.869 195.448 561.83 195.494 cv
561.807 195.521 561.827 195.6 561.89 195.731 cv
561.953 195.861 562.057 196.103 562.2 196.457 cv
562.343 196.81 562.465 197.208 562.565 197.649 cv
562.657 198.084 562.696 198.406 562.686 198.616 cv
562.676 198.826 562.604 199.04 562.47 199.257 cv
562.178 199.777 561.851 200.146 561.492 200.363 cv
561.133 200.578 560.664 200.697 560.087 200.715 cv
559.541 200.715 559.01 200.627 558.491 200.454 cv
557.972 200.28 557.527 200.074 557.155 199.835 cv
556.784 199.596 556.266 199.271 555.602 198.86 cv
554.938 198.448 554.32 198.097 553.748 197.81 cv
553.068 197.463 552.664 197.236 552.534 197.128 cv
552.406 197.021 552.322 196.859 552.285 196.64 cv
552.22 196.212 552.344 195.941 552.658 195.827 cv
552.971 195.712 553.409 195.788 553.969 196.051 cv
554.298 196.2 555.078 196.688 556.309 197.516 cv
557.541 198.345 558.298 198.823 558.582 198.95 cv
558.972 199.118 559.347 199.175 559.704 199.121 cv
560.061 199.067 560.343 198.915 560.55 198.667 cv
560.757 198.417 560.824 198.06 560.751 197.593 cv
560.678 197.126 560.441 196.422 560.039 195.48 cv
559.711 194.692 559.367 194.125 559.006 193.778 cv
558.647 193.432 558.026 193.049 557.144 192.626 cv
556.423 192.293 555.922 192.013 555.641 191.788 cv
555.361 191.563 555.204 191.319 555.171 191.058 cv
cp
f
565.224 194.564 mo
565.079 194.387 564.929 194.03 564.771 193.49 cv
564.615 192.951 564.498 192.635 564.422 192.542 cv
564.3 192.394 564.178 192.114 564.056 191.701 cv
563.914 191.227 563.518 190.472 562.868 189.438 cv
562.218 188.404 561.676 187.662 561.242 187.21 cv
560.729 186.7 560.461 186.299 560.438 186.007 cv
560.396 185.372 560.709 185.138 561.375 185.304 cv
561.874 185.438 562.487 185.795 563.215 186.377 cv
563.482 186.607 564.097 187.014 565.06 187.597 cv
566.022 188.182 566.563 188.516 566.682 188.604 cv
566.794 188.684 566.899 188.741 566.998 188.775 cv
567.098 188.811 567.165 188.814 567.202 188.783 cv
567.267 188.73 567.188 188.455 566.968 187.961 cv
566.748 187.467 566.26 186.488 565.507 185.026 cv
564.897 183.834 564.534 183.067 564.418 182.728 cv
564.301 182.388 564.306 182.096 564.432 181.852 cv
564.607 181.538 564.775 181.392 564.935 181.416 cv
565.146 181.445 565.721 181.833 566.663 182.58 cv
567.219 183.009 567.74 183.387 568.229 183.717 cv
568.717 184.044 569.078 184.279 569.312 184.421 cv
569.545 184.564 569.697 184.668 569.767 184.734 cv
569.836 184.818 570.017 184.91 570.31 185.01 cv
570.603 185.112 570.806 185.231 570.92 185.37 cv
571.035 185.509 571.308 185.666 571.738 185.839 cv
572.169 186.012 572.43 186.155 572.522 186.266 cv
572.651 186.423 572.883 186.544 573.216 186.627 cv
573.517 186.691 573.781 186.846 574.008 187.094 cv
574.236 187.343 574.376 187.608 574.43 187.889 cv
574.483 188.171 574.422 188.385 574.247 188.53 cv
574.062 188.684 573.577 188.561 572.792 188.166 cv
572.007 187.77 571.109 187.25 570.098 186.607 cv
569.086 185.965 568.499 185.602 568.336 185.516 cv
567.987 185.337 567.744 185.165 567.606 184.999 cv
567.469 184.832 567.377 184.768 567.331 184.806 cv
567.248 184.874 567.318 185.15 567.545 185.631 cv
567.643 185.863 567.781 186.184 567.963 186.593 cv
568.146 187.003 568.291 187.33 568.399 187.575 cv
568.508 187.82 568.643 188.097 568.805 188.407 cv
568.967 188.717 569.118 188.985 569.258 189.211 cv
570.126 190.549 570.412 191.425 570.116 191.839 cv
569.951 192.053 569.636 192.087 569.173 191.939 cv
568.859 191.841 568.221 191.454 567.259 190.777 cv
566.297 190.1 565.71 189.708 565.499 189.603 cv
565.157 189.434 564.931 189.282 564.82 189.147 cv
564.71 189.013 564.622 188.974 564.557 189.026 cv
564.511 189.064 564.708 189.562 565.148 190.521 cv
565.589 191.481 566.028 192.378 566.467 193.213 cv
566.72 193.689 566.864 194.063 566.902 194.335 cv
566.939 194.607 566.875 194.812 566.708 194.95 cv
566.542 195.087 566.301 195.115 565.984 195.033 cv
565.668 194.952 565.415 194.794 565.224 194.564 cv
cp
f
572.074 177.087 mo
572.811 176.659 573.501 176.205 574.147 175.724 cv
574.792 175.245 575.251 174.927 575.522 174.774 cv
575.82 174.593 576.023 174.496 576.133 174.482 cv
576.242 174.468 576.384 174.53 576.558 174.668 cv
576.787 174.855 576.874 175.084 576.82 175.355 cv
576.767 175.626 576.577 175.888 576.251 176.14 cv
575.929 176.376 575.402 176.797 574.668 177.403 cv
573.08 178.691 li
572.811 178.897 572.659 179.117 572.625 179.35 cv
572.591 179.582 572.66 179.89 572.835 180.274 cv
573.077 180.778 li
576.669 178.755 li
576.964 179.168 li
577.189 179.496 577.211 179.797 577.028 180.072 cv
576.846 180.347 576.342 180.779 575.516 181.367 cv
574.529 182.06 573.98 182.405 573.867 182.399 cv
573.737 182.389 573.699 182.555 573.753 182.896 cv
573.847 183.477 574.088 184.113 574.477 184.803 cv
574.753 185.294 574.958 185.61 575.091 185.749 cv
575.224 185.887 575.394 185.98 575.6 186.029 cv
575.932 186.104 576.225 186.112 576.479 186.051 cv
576.836 185.974 577.403 185.531 578.18 184.722 cv
578.957 183.913 579.417 183.282 579.562 182.829 cv
579.67 182.533 579.844 182.339 580.081 182.247 cv
580.25 182.18 580.374 182.175 580.455 182.233 cv
580.536 182.291 580.655 182.46 580.814 182.743 cv
581.05 183.161 581.115 183.449 581.01 183.603 cv
580.945 183.708 580.768 183.999 580.477 184.472 cv
580.186 184.946 579.944 185.312 579.753 185.572 cv
579.561 185.831 579.26 186.145 578.848 186.514 cv
578.436 186.885 577.991 187.182 577.514 187.411 cv
577.03 187.628 576.696 187.744 576.511 187.757 cv
576.327 187.773 576.003 187.71 575.539 187.572 cv
575.311 187.509 575.153 187.462 575.069 187.434 cv
574.984 187.406 574.864 187.333 574.708 187.215 cv
574.551 187.095 574.444 187.003 574.387 186.939 cv
574.331 186.876 574.214 186.704 574.036 186.425 cv
573.858 186.146 573.712 185.898 573.597 185.68 cv
573.48 185.463 573.277 185.072 572.987 184.505 cv
572.53 183.646 572.161 182.747 571.879 181.803 cv
571.596 180.861 571.385 180.23 571.246 179.909 cv
570.984 179.299 570.836 178.803 570.802 178.423 cv
570.765 177.844 li
572.074 177.087 li
cp
f
583.441 169.876 mo
583.438 169.717 583.637 169.56 584.04 169.404 cv
584.309 169.301 584.486 169.259 584.57 169.277 cv
584.655 169.295 584.734 169.401 584.807 169.591 cv
585.139 170.35 585.811 172.072 586.821 174.755 cv
587.833 177.44 588.437 179.104 588.634 179.749 cv
588.902 180.609 589.025 181.203 589.002 181.526 cv
588.979 181.85 588.811 182.072 588.498 182.193 cv
588.33 182.259 588.188 182.257 588.073 182.193 cv
587.958 182.128 587.83 182.031 587.689 181.898 cv
587.548 181.766 587.404 181.677 587.257 181.63 cv
587.038 181.561 586.906 181.47 586.863 181.358 cv
586.824 181.257 586.62 181.028 586.25 180.668 cv
585.88 180.31 585.446 179.889 584.951 179.406 cv
584.455 178.92 584.086 178.533 583.845 178.241 cv
583.499 177.845 583.152 177.479 582.801 177.138 cv
582.451 176.797 582.248 176.637 582.192 176.66 cv
582.159 176.671 582.213 176.921 582.355 177.407 cv
582.497 177.892 582.668 178.509 582.866 179.254 cv
583.065 180.001 583.186 180.63 583.229 181.142 cv
583.255 181.376 583.288 181.644 583.326 181.943 cv
583.365 182.244 583.392 182.455 583.407 182.577 cv
583.422 182.7 583.431 182.838 583.432 182.992 cv
583.435 183.146 583.416 183.268 583.381 183.359 cv
583.345 183.45 583.29 183.549 583.216 183.655 cv
583.073 183.852 582.96 183.953 582.879 183.958 cv
582.797 183.965 582.632 183.894 582.382 183.745 cv
582.07 183.57 581.848 183.353 581.716 183.095 cv
581.584 182.837 581.553 182.566 581.624 182.282 cv
581.691 182.024 581.685 181.441 581.605 180.534 cv
581.557 179.909 581.464 179.363 581.328 178.894 cv
581.192 178.425 580.872 177.537 580.366 176.227 cv
579.237 173.304 li
579.598 172.992 li
579.752 172.855 579.884 172.782 579.996 172.771 cv
580.107 172.759 580.271 172.802 580.489 172.898 cv
580.837 173.034 581.05 173.203 581.128 173.405 cv
581.171 173.516 581.273 173.654 581.432 173.818 cv
581.592 173.981 581.809 174.193 582.083 174.454 cv
582.357 174.715 582.566 174.914 582.71 175.051 cv
584.972 177.362 li
585.627 178.06 586.044 178.49 586.224 178.653 cv
586.402 178.815 586.525 178.885 586.592 178.858 cv
586.682 178.824 586.706 178.654 586.665 178.347 cv
586.598 177.974 586.194 176.796 585.454 174.812 cv
584.713 172.828 584.209 171.572 583.94 171.044 cv
583.612 170.427 583.445 170.037 583.441 169.876 cv
cp
f
592.343 169.203 mo
592.728 169.049 593.124 168.89 593.531 168.724 cv
593.938 168.56 594.237 168.439 594.43 168.363 cv
594.622 168.286 594.844 168.205 595.097 168.122 cv
595.349 168.039 595.615 167.961 595.895 167.892 cv
596.329 167.801 596.607 167.764 596.727 167.782 cv
596.847 167.799 596.963 167.901 597.075 168.085 cv
597.253 168.355 597.377 168.74 597.445 169.241 cv
597.492 169.586 597.498 169.803 597.461 169.89 cv
597.424 169.978 597.303 170.055 597.095 170.123 cv
596.797 170.221 596.531 170.204 596.294 170.07 cv
596.152 169.977 595.991 169.939 595.811 169.958 cv
595.631 169.978 595.323 170.058 594.886 170.198 cv
594.818 170.224 594.721 170.257 594.594 170.295 cv
594.352 170.371 594.182 170.421 594.083 170.448 cv
593.985 170.476 593.87 170.527 593.739 170.603 cv
593.608 170.679 593.522 170.73 593.486 170.757 cv
593.448 170.783 593.406 170.859 593.359 170.985 cv
593.312 171.112 593.292 171.206 593.298 171.266 cv
593.305 171.325 593.323 171.458 593.354 171.667 cv
593.385 171.875 593.419 172.051 593.456 172.198 cv
593.491 172.343 593.55 172.579 593.631 172.905 cv
593.67 173.093 593.707 173.239 593.74 173.341 cv
593.94 174.184 594.161 174.96 594.403 175.677 cv
594.644 176.394 594.844 176.927 595.003 177.281 cv
595.163 177.633 595.301 177.954 595.416 178.243 cv
595.531 178.531 595.583 178.752 595.573 178.908 cv
595.563 179.064 595.487 179.217 595.348 179.369 cv
595.117 179.613 594.926 179.726 594.775 179.708 cv
594.624 179.692 594.433 179.536 594.199 179.241 cv
593.916 178.883 593.609 178.089 593.279 176.858 cv
593.072 176.105 592.747 175.07 592.3 173.753 cv
591.854 172.437 591.595 171.755 591.524 171.708 cv
591.507 171.687 591.245 171.796 590.738 172.038 cv
590.23 172.28 589.762 172.518 589.333 172.753 cv
588.971 172.953 588.727 173.064 588.604 173.091 cv
588.48 173.116 588.355 173.087 588.228 173.003 cv
588.014 172.864 587.817 172.598 587.638 172.207 cv
587.451 171.781 587.427 171.46 587.566 171.248 cv
587.706 171.035 588.04 170.873 588.568 170.762 cv
588.967 170.678 589.546 170.457 590.304 170.096 cv
591.063 169.736 591.743 169.437 592.343 169.203 cv
cp
f
603.692 170.093 mo
603.311 169.883 603.054 169.789 602.923 169.813 cv
602.792 169.837 602.56 170.019 602.228 170.36 cv
601.964 170.636 601.766 170.949 601.632 171.299 cv
601.498 171.646 601.398 172.146 601.333 172.799 cv
601.289 173.149 601.365 173.35 601.559 173.401 cv
601.766 173.451 602.345 173.387 603.298 173.21 cv
604.852 172.921 li
604.76 172.097 li
604.697 171.524 604.586 171.091 604.429 170.797 cv
604.271 170.504 604.026 170.27 603.692 170.093 cv
cp
601.891 168.555 mo
602.217 168.335 602.515 168.228 602.786 168.235 cv
603.056 168.24 603.479 168.367 604.056 168.617 cv
604.437 168.791 604.74 168.987 604.966 169.205 cv
605.193 169.422 605.405 169.776 605.602 170.266 cv
605.799 170.754 605.968 171.341 606.107 172.025 cv
606.248 172.71 606.413 173.671 606.604 174.912 cv
607.054 177.99 li
607.088 178.205 607.084 178.367 607.041 178.478 cv
606.998 178.587 606.901 178.7 606.75 178.815 cv
606.599 178.919 606.481 178.976 606.398 178.985 cv
606.314 178.995 606.216 178.96 606.104 178.881 cv
605.881 178.712 605.712 178.444 605.599 178.076 cv
605.485 177.71 605.386 177.114 605.298 176.289 cv
605.202 175.248 605.109 174.687 605.021 174.608 cv
604.972 174.562 604.768 174.578 604.411 174.654 cv
604.054 174.732 603.629 174.826 603.136 174.94 cv
602.643 175.052 602.264 175.116 602 175.127 cv
601.581 175.147 601.356 175.224 601.326 175.357 cv
601.306 175.43 601.256 176.037 601.177 177.175 cv
601.099 178.315 601.01 178.976 600.911 179.162 cv
600.812 179.37 600.661 179.476 600.456 179.48 cv
600.252 179.483 600.05 179.388 599.849 179.193 cv
599.735 179.079 599.66 178.961 599.625 178.843 cv
599.589 178.724 599.584 178.536 599.607 178.277 cv
599.632 178.018 599.668 177.724 599.719 177.397 cv
599.77 177.07 599.821 176.554 599.873 175.85 cv
599.923 175.144 599.959 174.371 599.979 173.529 cv
599.998 172.135 600.093 171.255 600.262 170.894 cv
600.431 170.531 600.513 170.296 600.507 170.188 cv
600.501 170.044 600.657 169.788 600.976 169.418 cv
601.295 169.049 601.6 168.761 601.891 168.555 cv
cp
f
618.702 178.03 mo
618.727 177.913 618.533 177.023 618.12 175.362 cv
617.706 173.701 617.514 172.805 617.543 172.677 cv
617.566 172.572 617.459 172.227 617.221 171.645 cv
616.732 170.428 616.651 169.611 616.979 169.192 cv
617.123 168.991 617.347 168.925 617.651 168.993 cv
617.839 169.035 617.989 169.105 618.102 169.205 cv
618.215 169.304 618.3 169.434 618.355 169.593 cv
618.412 169.754 618.454 169.909 618.482 170.056 cv
618.511 170.204 618.543 170.402 618.58 170.65 cv
618.616 170.898 618.654 171.1 618.692 171.257 cv
618.838 171.867 618.954 172.379 619.039 172.792 cv
619.125 173.205 619.178 173.476 619.198 173.603 cv
619.219 173.73 619.239 173.843 619.261 173.939 cv
619.282 174.036 619.32 174.153 619.376 174.288 cv
619.414 174.395 619.494 174.72 619.618 175.266 cv
619.741 175.81 619.863 176.292 619.984 176.712 cv
620.104 177.133 620.203 177.336 620.28 177.323 cv
620.357 177.31 620.486 177.093 620.667 176.672 cv
620.847 176.251 621.057 175.743 621.296 175.144 cv
621.535 174.546 621.721 174.115 621.854 173.85 cv
622.105 173.388 622.381 172.522 622.679 171.249 cv
622.89 170.423 623.041 169.888 623.132 169.644 cv
623.224 169.4 623.351 169.247 623.512 169.185 cv
623.843 169.026 624.076 169.026 624.213 169.186 cv
624.349 169.345 624.443 169.72 624.496 170.31 cv
624.533 170.799 624.484 171.102 624.346 171.217 cv
624.27 171.287 624.134 171.631 623.939 172.251 cv
623.745 172.872 623.521 173.575 623.271 174.361 cv
623.021 175.147 622.809 175.706 622.636 176.036 cv
622.416 176.467 622.176 177.15 621.917 178.087 cv
621.657 179.026 621.416 179.861 621.196 180.591 cv
620.977 181.324 620.78 181.75 620.605 181.871 cv
620.384 182.03 620.21 182.095 620.081 182.066 cv
619.894 182.024 619.727 181.796 619.58 181.381 cv
619.434 180.967 619.294 180.467 619.163 179.876 cv
619.03 179.287 618.929 178.904 618.857 178.728 cv
618.724 178.392 618.672 178.159 618.702 178.03 cv
cp
f
628.945 171.922 mo
629.745 172.215 630.536 172.456 631.318 172.644 cv
632.101 172.834 632.637 172.983 632.929 173.095 cv
633.258 173.208 633.463 173.302 633.543 173.377 cv
633.624 173.454 633.667 173.602 633.672 173.822 cv
633.674 174.119 633.555 174.333 633.312 174.465 cv
633.069 174.596 632.746 174.618 632.343 174.528 cv
631.956 174.434 631.295 174.295 630.361 174.12 cv
628.356 173.72 li
628.024 173.645 627.758 173.668 627.558 173.792 cv
627.356 173.915 627.165 174.166 626.981 174.544 cv
626.749 175.052 li
630.6 176.522 li
630.471 177.012 li
630.364 177.395 630.146 177.604 629.817 177.639 cv
629.489 177.675 628.835 177.563 627.854 177.305 cv
626.69 176.99 626.074 176.787 626.006 176.696 cv
625.931 176.591 625.78 176.668 625.553 176.927 cv
625.164 177.37 624.83 177.962 624.547 178.702 cv
624.347 179.229 624.235 179.587 624.214 179.779 cv
624.192 179.97 624.229 180.16 624.323 180.35 cv
624.478 180.654 624.66 180.883 624.87 181.041 cv
625.156 181.266 625.858 181.418 626.979 181.499 cv
628.097 181.578 628.876 181.529 629.317 181.35 cv
629.614 181.245 629.874 181.254 630.096 181.376 cv
630.256 181.465 630.339 181.556 630.347 181.656 cv
630.354 181.754 630.3 181.957 630.184 182.259 cv
630.013 182.707 629.834 182.941 629.647 182.96 cv
629.525 182.977 629.188 183.025 628.638 183.104 cv
628.088 183.184 627.652 183.232 627.33 183.25 cv
627.008 183.269 626.574 183.239 626.027 183.158 cv
625.479 183.078 624.965 182.927 624.485 182.705 cv
624.009 182.472 623.706 182.289 623.577 182.156 cv
623.448 182.023 623.288 181.734 623.098 181.29 cv
623.001 181.073 622.937 180.922 622.904 180.839 cv
622.871 180.757 622.851 180.617 622.842 180.421 cv
622.833 180.226 622.835 180.084 622.848 180 cv
622.862 179.916 622.919 179.715 623.019 179.4 cv
623.12 179.085 623.217 178.814 623.311 178.586 cv
623.404 178.359 623.575 177.953 623.824 177.366 cv
624.192 176.467 624.649 175.607 625.193 174.787 cv
625.737 173.967 626.088 173.401 626.246 173.088 cv
626.548 172.498 626.834 172.068 627.104 171.797 cv
627.526 171.4 li
628.945 171.922 li
cp
f
635.644 175.358 mo
635.921 175.308 636.124 175.318 636.255 175.392 cv
636.386 175.467 636.472 175.611 636.515 175.829 cv
636.545 175.969 636.428 176.299 636.163 176.818 cv
635.898 177.337 635.351 178.306 634.522 179.726 cv
632.459 183.274 li
632.779 183.476 li
633.003 183.616 633.292 183.813 633.644 184.067 cv
633.993 184.305 634.694 184.728 635.749 185.336 cv
636.804 185.946 637.466 186.305 637.734 186.416 cv
637.919 186.478 638.013 186.555 638.018 186.647 cv
638.02 186.739 637.942 186.946 637.781 187.268 cv
637.619 187.589 637.497 187.783 637.413 187.846 cv
637.329 187.91 637.172 187.923 636.943 187.892 cv
636.661 187.855 635.771 187.375 634.275 186.449 cv
632.779 185.522 631.808 185.016 631.361 184.928 cv
631.031 184.852 630.828 184.779 630.751 184.708 cv
630.674 184.637 630.584 184.449 630.481 184.144 cv
630.375 183.793 630.358 183.504 630.432 183.277 cv
630.505 183.051 630.697 182.796 631.006 182.516 cv
631.332 182.232 631.893 181.45 632.691 180.17 cv
633.488 178.892 634.08 177.837 634.466 177.007 cv
634.82 176.257 635.052 175.802 635.163 175.644 cv
635.272 175.485 635.433 175.39 635.644 175.358 cv
cp
f
648.466 187.093 mo
648.378 186.117 li
647.386 185.311 li
646.903 184.934 646.393 184.644 645.856 184.438 cv
645.318 184.233 644.811 184.126 644.332 184.116 cv
643.853 184.105 643.389 184.177 642.94 184.331 cv
642.491 184.483 642.12 184.726 641.825 185.06 cv
641.531 185.392 641.302 185.792 641.138 186.263 cv
640.94 186.923 640.938 187.644 641.13 188.425 cv
641.322 189.208 641.642 189.781 642.088 190.144 cv
642.535 190.507 643.036 190.776 643.591 190.949 cv
644.147 191.122 644.662 191.162 645.139 191.07 cv
646.322 190.872 647.198 190.432 647.768 189.75 cv
648.336 189.068 648.569 188.184 648.466 187.093 cv
cp
646.75 182.869 mo
647.064 182.938 647.459 183.117 647.937 183.405 cv
648.415 183.693 648.765 183.965 648.988 184.224 cv
649.326 184.607 649.566 185.091 649.708 185.679 cv
649.849 186.266 649.884 186.874 649.813 187.504 cv
649.741 188.135 649.591 188.766 649.363 189.4 cv
649.133 190.033 648.826 190.587 648.439 191.062 cv
648.054 191.537 647.611 191.919 647.112 192.21 cv
646.279 192.645 645.561 192.886 644.961 192.932 cv
644.359 192.976 643.589 192.834 642.651 192.504 cv
641.971 192.276 641.413 191.958 640.979 191.551 cv
640.544 191.144 640.178 190.602 639.877 189.925 cv
639.366 188.766 639.295 187.526 639.666 186.203 cv
640.037 184.881 640.76 183.806 641.834 182.978 cv
643.06 182.042 644.072 181.558 644.871 181.527 cv
645.203 181.518 645.459 181.549 645.642 181.62 cv
645.824 181.69 645.933 181.784 645.972 181.899 cv
646.009 182.016 646.051 182.138 646.1 182.27 cv
646.146 182.402 646.206 182.519 646.276 182.623 cv
646.347 182.726 646.505 182.808 646.75 182.869 cv
cp
f
657.584 191.088 mo
658.102 191.369 658.463 191.672 658.667 191.996 cv
658.871 192.32 659.018 192.833 659.107 193.536 cv
659.146 193.853 659.057 194.175 658.84 194.5 cv
658.624 194.827 658.355 195.035 658.035 195.124 cv
657.739 195.207 657.546 195.172 657.454 195.022 cv
657.361 194.871 657.359 194.591 657.446 194.18 cv
657.514 193.785 657.497 193.492 657.395 193.302 cv
657.292 193.113 657.008 192.871 656.543 192.577 cv
655.898 192.168 655.097 191.906 654.14 191.787 cv
653.182 191.669 652.301 191.724 651.495 191.952 cv
650.871 192.131 650.43 192.343 650.171 192.585 cv
649.913 192.828 649.719 193.212 649.591 193.74 cv
649.507 194.117 649.476 194.396 649.498 194.576 cv
649.52 194.755 649.616 194.978 649.787 195.246 cv
649.979 195.539 650.366 195.96 650.946 196.513 cv
651.527 197.066 652.096 197.552 652.655 197.972 cv
652.825 198.111 652.928 198.224 652.965 198.312 cv
653.001 198.398 652.993 198.521 652.94 198.679 cv
652.837 198.961 652.619 199.172 652.287 199.312 cv
651.954 199.453 651.691 199.439 651.499 199.273 cv
651.377 199.171 651.27 199.1 651.175 199.054 cv
651.08 199.01 650.999 198.977 650.933 198.956 cv
650.866 198.934 650.717 198.81 650.485 198.582 cv
650.254 198.354 649.94 198.016 649.545 197.564 cv
648.841 196.76 648.39 196.115 648.192 195.625 cv
647.994 195.135 647.94 194.542 648.029 193.841 cv
648.109 193.259 648.227 192.834 648.381 192.564 cv
648.535 192.292 648.86 191.94 649.356 191.505 cv
649.798 191.118 650.168 190.847 650.467 190.698 cv
650.766 190.547 651.281 190.36 652.009 190.136 cv
652.634 189.956 653.524 189.965 654.68 190.165 cv
655.836 190.363 656.805 190.672 657.584 191.088 cv
cp
f
660.22 195.333 mo
660.431 195.359 660.599 195.46 660.725 195.635 cv
660.851 195.811 660.898 196.012 660.87 196.24 cv
660.86 196.35 660.314 196.892 659.232 197.865 cv
658.15 198.838 657.436 199.442 657.086 199.677 cv
656.835 199.841 656.192 200.376 655.156 201.278 cv
654.473 201.871 654.02 202.242 653.797 202.394 cv
653.573 202.545 653.354 202.626 653.138 202.633 cv
652.861 202.638 652.688 202.613 652.616 202.553 cv
652.543 202.494 652.511 202.344 652.516 202.104 cv
652.525 201.684 653.274 200.905 654.762 199.768 cv
655.609 199.117 656.363 198.516 657.022 197.962 cv
657.682 197.41 658.165 196.987 658.472 196.693 cv
658.778 196.4 659.038 196.144 659.251 195.927 cv
659.463 195.708 659.608 195.56 659.687 195.482 cv
659.764 195.405 659.836 195.357 659.903 195.337 cv
659.971 195.32 660.077 195.317 660.22 195.333 cv
cp
f
664.99 202.63 mo
665.25 202.952 665.519 203.283 665.797 203.623 cv
666.074 203.962 666.278 204.213 666.409 204.374 cv
666.539 204.535 666.682 204.724 666.835 204.941 cv
666.99 205.157 667.142 205.388 667.292 205.633 cv
667.507 206.022 667.624 206.276 667.644 206.396 cv
667.661 206.518 667.599 206.657 667.455 206.82 cv
667.25 207.07 666.919 207.301 666.462 207.514 cv
666.146 207.662 665.94 207.731 665.847 207.722 cv
665.751 207.712 665.641 207.619 665.516 207.442 cv
665.333 207.186 665.271 206.925 665.33 206.66 cv
665.376 206.497 665.364 206.333 665.292 206.166 cv
665.221 206 665.054 205.729 664.791 205.353 cv
664.746 205.296 664.686 205.212 664.611 205.103 cv
664.468 204.894 664.368 204.747 664.314 204.661 cv
664.259 204.574 664.176 204.48 664.064 204.377 cv
663.952 204.274 663.878 204.208 663.843 204.182 cv
663.806 204.153 663.721 204.135 663.586 204.127 cv
663.452 204.12 663.357 204.127 663.302 204.152 cv
663.246 204.175 663.123 204.233 662.934 204.325 cv
662.745 204.416 662.585 204.5 662.458 204.578 cv
662.33 204.657 662.121 204.782 661.833 204.955 cv
661.665 205.049 661.537 205.126 661.448 205.189 cv
660.704 205.629 660.026 206.07 659.413 206.512 cv
658.801 206.955 658.35 207.304 658.06 207.561 cv
657.771 207.817 657.504 208.043 657.263 208.239 cv
657.021 208.434 656.825 208.551 656.673 208.585 cv
656.521 208.623 656.353 208.595 656.167 208.507 cv
655.865 208.359 655.7 208.21 655.672 208.061 cv
655.645 207.912 655.737 207.682 655.949 207.373 cv
656.207 206.996 656.875 206.468 657.953 205.789 cv
658.611 205.369 659.503 204.75 660.63 203.935 cv
661.754 203.119 662.329 202.669 662.353 202.588 cv
662.368 202.566 662.186 202.348 661.806 201.935 cv
661.425 201.521 661.059 201.144 660.706 200.805 cv
660.409 200.518 660.23 200.318 660.17 200.208 cv
660.108 200.097 660.099 199.968 660.14 199.822 cv
660.211 199.578 660.406 199.311 660.728 199.024 cv
661.08 198.719 661.378 198.602 661.623 198.671 cv
661.867 198.742 662.121 199.013 662.382 199.485 cv
662.58 199.841 662.963 200.33 663.532 200.947 cv
664.101 201.565 664.586 202.126 664.99 202.63 cv
cp
f
671.039 212.125 mo
671.1 211.938 671.166 211.909 671.236 212.037 cv
671.295 212.169 671.433 212.565 671.65 213.226 cv
672.113 214.724 li
671.569 214.913 li
671.308 215.003 671.119 215.016 671 214.949 cv
670.882 214.881 670.825 214.752 670.827 214.561 cv
670.831 214.369 670.854 214.17 670.896 213.965 cv
670.939 213.759 670.979 213.542 671.013 213.315 cv
671.049 213.086 671.049 212.921 671.013 212.819 cv
670.938 212.604 670.946 212.373 671.039 212.125 cv
cp
666.065 216.292 mo
666.34 216.133 666.61 215.923 666.874 215.66 cv
667.139 215.396 667.332 215.167 667.455 214.971 cv
667.578 214.777 667.633 214.662 667.621 214.628 cv
667.601 214.571 667.451 214.432 667.171 214.212 cv
666.957 214.033 666.599 213.9 666.099 213.813 cv
665.599 213.727 665.022 213.695 664.37 213.719 cv
664.059 213.738 663.858 213.764 663.768 213.795 cv
663.677 213.827 663.632 213.9 663.634 214.013 cv
663.631 214.115 663.671 214.229 663.752 214.353 cv
663.833 214.477 663.958 214.656 664.129 214.889 cv
664.299 215.123 664.444 215.357 664.565 215.595 cv
664.845 216.108 665.067 216.402 665.233 216.477 cv
665.4 216.553 665.677 216.491 666.065 216.292 cv
cp
665.657 211.995 mo
665.759 211.958 665.966 211.951 666.277 211.97 cv
666.589 211.988 666.938 212.044 667.327 212.138 cv
667.715 212.232 668.09 212.416 668.452 212.69 cv
668.814 212.965 669.072 213.303 669.226 213.708 cv
669.32 213.98 669.306 214.385 669.182 214.923 cv
669.058 215.462 668.879 215.873 668.648 216.157 cv
668.259 216.61 667.359 217.257 665.949 218.096 cv
664.539 218.936 663.105 219.672 661.649 220.306 cv
660.954 220.611 660.483 220.747 660.236 220.711 cv
659.989 220.677 659.875 220.465 659.892 220.078 cv
659.896 219.722 660.01 219.45 660.237 219.263 cv
660.464 219.076 661.015 218.792 661.886 218.414 cv
663.545 217.704 li
663.333 217.148 li
663.219 216.857 662.867 216.405 662.279 215.79 cv
661.69 215.175 661.375 214.715 661.333 214.413 cv
661.308 214.193 661.264 214.056 661.2 214.001 cv
661.137 213.948 660.972 213.921 660.707 213.925 cv
660.494 213.936 660.25 213.957 659.976 213.99 cv
659.701 214.021 659.49 214.043 659.342 214.058 cv
659.194 214.07 659.041 214.067 658.881 214.045 cv
658.721 214.025 658.595 213.955 658.502 213.834 cv
658.41 213.713 658.337 213.542 658.285 213.32 cv
658.208 212.99 658.283 212.691 658.507 212.422 cv
658.638 212.25 658.774 212.142 658.919 212.1 cv
659.062 212.055 659.223 212.043 659.402 212.063 cv
659.581 212.084 659.935 212.11 660.467 212.142 cv
660.999 212.172 661.583 212.172 662.221 212.142 cv
662.558 212.126 663.024 212.113 663.618 212.103 cv
664.211 212.093 664.677 212.082 665.015 212.066 cv
665.352 212.049 665.566 212.026 665.657 211.995 cv
cp
f
548.598 348.711 mo
548.094 349.26 547.705 349.74 547.434 350.153 cv
547.164 350.567 547.056 350.822 547.113 350.92 cv
547.154 350.996 547.363 351.18 547.738 351.472 cv
548.114 351.764 548.601 352.135 549.197 352.583 cv
549.795 353.032 550.182 353.324 550.356 353.456 cv
550.821 353.809 551.372 354.162 552.006 354.516 cv
552.64 354.869 553.001 355.015 553.088 354.951 cv
553.197 354.873 553.404 354.426 553.71 353.611 cv
554.016 352.796 554.152 352.332 554.116 352.219 cv
554.055 352.051 554.085 351.85 554.209 351.616 cv
554.354 351.34 554.371 350.881 554.26 350.24 cv
554.149 349.6 553.944 348.997 553.644 348.433 cv
553.515 348.162 553.293 347.94 552.977 347.767 cv
552.661 347.595 552.331 347.499 551.988 347.482 cv
551.543 347.479 551.227 347.473 551.042 347.463 cv
550.857 347.454 550.638 347.465 550.385 347.494 cv
550.133 347.524 549.967 347.557 549.889 347.59 cv
549.81 347.623 549.681 347.701 549.501 347.823 cv
549.321 347.945 549.184 348.061 549.088 348.165 cv
548.992 348.271 548.829 348.453 548.598 348.711 cv
cp
544.993 351.9 mo
544.9 351.663 544.883 351.457 544.94 351.284 cv
544.998 351.11 545.201 350.716 545.552 350.101 cv
546.202 348.991 546.908 348.078 547.671 347.36 cv
548.434 346.643 549.133 346.234 549.769 346.134 cv
550.248 346.047 550.839 346.035 551.544 346.101 cv
552.25 346.166 552.914 346.288 553.538 346.466 cv
554.114 346.633 554.532 346.833 554.79 347.063 cv
555.049 347.294 555.28 347.665 555.484 348.179 cv
555.755 348.904 555.903 349.649 555.928 350.414 cv
555.953 351.18 555.892 351.856 555.747 352.444 cv
555.601 353.031 555.446 353.577 555.283 354.081 cv
555.12 354.585 554.997 355.012 554.916 355.361 cv
554.833 355.712 554.853 355.953 554.974 356.084 cv
555.184 356.329 555.23 356.589 555.116 356.859 cv
555 357.131 554.787 357.253 554.476 357.226 cv
554.166 357.198 553.26 356.753 551.761 355.892 cv
550.261 355.029 549.179 354.329 548.514 353.79 cv
547.695 353.13 547.161 352.734 546.91 352.603 cv
546.661 352.472 546.438 352.477 546.242 352.618 cv
546.036 352.753 545.801 352.749 545.538 352.604 cv
545.275 352.459 545.093 352.225 544.993 351.9 cv
cp
f
550.201 342.824 mo
550.151 342.618 550.187 342.425 550.307 342.245 cv
550.427 342.065 550.598 341.95 550.821 341.896 cv
550.928 341.867 551.627 342.188 552.919 342.857 cv
554.211 343.526 555.028 343.982 555.37 344.226 cv
555.613 344.403 556.339 344.817 557.549 345.469 cv
558.344 345.899 558.853 346.192 559.074 346.347 cv
559.294 346.502 559.446 346.68 559.529 346.88 cv
559.632 347.136 559.668 347.309 559.638 347.396 cv
559.608 347.484 559.479 347.568 559.253 347.648 cv
558.857 347.787 557.864 347.361 556.274 346.369 cv
555.368 345.806 554.539 345.313 553.789 344.891 cv
553.04 344.468 552.473 344.165 552.091 343.98 cv
551.708 343.798 551.377 343.645 551.098 343.522 cv
550.819 343.4 550.629 343.316 550.53 343.271 cv
550.43 343.227 550.359 343.176 550.317 343.119 cv
550.275 343.063 550.237 342.964 550.201 342.824 cv
cp
f
559.537 346.199 mo
559.367 346.048 559.164 345.717 558.927 345.207 cv
558.69 344.697 558.528 344.403 558.438 344.323 cv
558.295 344.195 558.131 343.937 557.949 343.548 cv
557.737 343.101 557.231 342.414 556.432 341.49 cv
555.632 340.566 554.983 339.914 554.487 339.534 cv
553.902 339.107 553.577 338.752 553.51 338.467 cv
553.373 337.846 553.646 337.567 554.329 337.631 cv
554.842 337.687 555.502 337.947 556.311 338.412 cv
556.611 338.6 557.28 338.908 558.319 339.339 cv
559.359 339.77 559.944 340.02 560.076 340.089 cv
560.199 340.15 560.311 340.19 560.414 340.21 cv
560.517 340.229 560.584 340.222 560.617 340.187 cv
560.672 340.123 560.555 339.864 560.261 339.409 cv
559.967 338.953 559.338 338.061 558.372 336.729 cv
557.588 335.643 557.113 334.94 556.947 334.622 cv
556.781 334.305 556.741 334.016 556.828 333.755 cv
556.954 333.417 557.098 333.248 557.259 333.247 cv
557.471 333.244 558.1 333.54 559.145 334.137 cv
559.758 334.476 560.331 334.771 560.863 335.022 cv
561.396 335.273 561.789 335.451 562.041 335.556 cv
562.293 335.661 562.459 335.74 562.539 335.795 cv
562.619 335.868 562.813 335.932 563.117 335.986 cv
563.421 336.042 563.641 336.129 563.775 336.249 cv
563.909 336.369 564.202 336.482 564.654 336.589 cv
565.107 336.695 565.387 336.797 565.493 336.893 cv
565.646 337.028 565.893 337.113 566.234 337.145 cv
566.542 337.162 566.826 337.274 567.088 337.485 cv
567.351 337.696 567.53 337.938 567.626 338.208 cv
567.722 338.479 567.693 338.699 567.541 338.868 cv
567.381 339.048 566.884 339.002 566.049 338.729 cv
565.213 338.457 564.247 338.08 563.149 337.597 cv
562.051 337.114 561.416 336.844 561.242 336.785 cv
560.87 336.662 560.604 336.528 560.443 336.384 cv
560.281 336.24 560.182 336.19 560.141 336.235 cv
560.069 336.316 560.181 336.577 560.478 337.02 cv
560.609 337.233 560.795 337.528 561.038 337.906 cv
561.28 338.284 561.473 338.585 561.617 338.811 cv
561.762 339.037 561.937 339.29 562.144 339.571 cv
562.351 339.854 562.541 340.096 562.713 340.298 cv
563.774 341.488 564.189 342.311 563.96 342.766 cv
563.829 343.002 563.523 343.084 563.043 343.009 cv
562.717 342.958 562.027 342.672 560.975 342.148 cv
559.921 341.625 559.282 341.327 559.057 341.254 cv
558.694 341.139 558.447 341.022 558.317 340.907 cv
558.188 340.791 558.095 340.765 558.04 340.827 cv
557.999 340.872 558.27 341.335 558.85 342.216 cv
559.43 343.098 560 343.917 560.562 344.676 cv
560.883 345.109 561.083 345.457 561.161 345.72 cv
561.239 345.983 561.207 346.195 561.063 346.356 cv
560.919 346.518 560.685 346.582 560.36 346.549 cv
560.035 346.516 559.761 346.399 559.537 346.199 cv
cp
f
560.979 330.032 mo
560.982 329.82 561.063 329.642 561.224 329.497 cv
561.384 329.352 561.579 329.281 561.809 329.285 cv
561.918 329.282 562.518 329.764 563.606 330.729 cv
564.695 331.694 565.376 332.338 565.648 332.657 cv
565.84 332.888 566.443 333.468 567.458 334.395 cv
568.122 335.007 568.543 335.416 568.719 335.62 cv
568.896 335.825 569 336.034 569.031 336.248 cv
569.067 336.522 569.061 336.697 569.01 336.775 cv
568.959 336.854 568.814 336.904 568.575 336.925 cv
568.157 336.964 567.299 336.308 566.001 334.957 cv
565.259 334.188 564.576 333.507 563.953 332.914 cv
563.33 332.321 562.854 331.888 562.528 331.616 cv
562.203 331.346 561.92 331.116 561.679 330.929 cv
561.437 330.742 561.274 330.614 561.188 330.547 cv
561.103 330.479 561.046 330.412 561.02 330.347 cv
560.994 330.281 560.98 330.177 560.979 330.032 cv
cp
f
567.41 322.58 mo
567.363 322.428 567.514 322.223 567.86 321.964 cv
568.091 321.792 568.25 321.704 568.336 321.699 cv
568.423 321.695 568.527 321.774 568.648 321.938 cv
569.172 322.58 570.281 324.058 571.977 326.372 cv
573.672 328.686 574.701 330.126 575.063 330.692 cv
575.554 331.45 575.832 331.988 575.896 332.307 cv
575.961 332.625 575.859 332.885 575.59 333.085 cv
575.446 333.192 575.31 333.23 575.181 333.199 cv
575.053 333.168 574.902 333.106 574.731 333.018 cv
574.561 332.929 574.397 332.882 574.245 332.876 cv
574.014 332.868 573.863 332.815 573.791 332.72 cv
573.727 332.633 573.468 332.467 573.015 332.221 cv
572.562 331.975 572.032 331.686 571.424 331.353 cv
570.817 331.02 570.357 330.745 570.045 330.527 cv
569.607 330.24 569.174 329.98 568.746 329.747 cv
568.316 329.513 568.078 329.413 568.029 329.449 cv
568 329.47 568.12 329.696 568.388 330.126 cv
568.655 330.554 568.985 331.103 569.376 331.768 cv
569.769 332.434 570.054 333.007 570.232 333.487 cv
570.32 333.706 570.423 333.954 570.541 334.233 cv
570.66 334.512 570.743 334.709 570.79 334.823 cv
570.837 334.937 570.883 335.068 570.925 335.216 cv
570.968 335.363 570.985 335.486 570.975 335.582 cv
570.965 335.68 570.938 335.79 570.895 335.912 cv
570.81 336.14 570.729 336.268 570.653 336.295 cv
570.576 336.322 570.396 336.298 570.117 336.224 cv
569.769 336.139 569.496 335.989 569.3 335.776 cv
569.104 335.563 569.001 335.311 568.993 335.018 cv
568.988 334.751 568.826 334.191 568.504 333.339 cv
568.29 332.75 568.055 332.249 567.798 331.833 cv
567.541 331.419 566.993 330.648 566.153 329.522 cv
564.281 327.012 li
564.545 326.613 li
564.657 326.44 564.765 326.334 564.868 326.293 cv
564.973 326.253 565.143 326.25 565.378 326.284 cv
565.75 326.321 566.001 326.427 566.13 326.6 cv
566.202 326.696 566.336 326.802 566.533 326.916 cv
566.731 327.03 566.997 327.176 567.332 327.354 cv
567.666 327.531 567.92 327.667 568.095 327.761 cv
570.896 329.378 li
571.715 329.875 572.232 330.177 572.448 330.286 cv
572.664 330.395 572.801 330.428 572.858 330.385 cv
572.935 330.327 572.913 330.156 572.791 329.873 cv
572.626 329.532 571.921 328.505 570.674 326.793 cv
569.428 325.08 568.604 324.007 568.204 323.57 cv
567.722 323.063 567.457 322.732 567.41 322.58 cv
cp
f
576.762 319.102 mo
576.833 318.849 576.948 318.68 577.108 318.597 cv
577.256 318.519 577.489 318.558 577.806 318.709 cv
578.123 318.862 578.328 319.029 578.422 319.21 cv
578.478 319.316 578.599 319.497 578.786 319.751 cv
578.973 320.006 579.275 320.409 579.692 320.963 cv
580.109 321.517 580.522 322.08 580.929 322.652 cv
581.387 323.294 581.926 323.973 582.551 324.689 cv
583.175 325.406 583.637 325.883 583.936 326.119 cv
584.583 326.606 584.962 327.126 585.074 327.677 cv
585.167 328.088 585.023 328.278 584.642 328.248 cv
584.249 328.223 583.78 327.993 583.237 327.56 cv
582.692 327.126 582.229 326.712 581.846 326.315 cv
581.464 325.921 581.246 325.735 581.193 325.764 cv
581.16 325.78 581.148 325.861 581.156 326.006 cv
581.165 326.151 581.166 326.414 581.162 326.794 cv
581.159 327.177 581.117 327.59 581.039 328.036 cv
580.955 328.474 580.868 328.786 580.777 328.976 cv
580.686 329.164 580.539 329.334 580.331 329.482 cv
579.859 329.85 579.417 330.064 579.002 330.125 cv
578.587 330.187 578.109 330.114 577.569 329.908 cv
577.066 329.697 576.609 329.411 576.197 329.05 cv
575.786 328.689 575.455 328.328 575.205 327.965 cv
574.954 327.602 574.602 327.102 574.148 326.466 cv
573.694 325.829 573.259 325.268 572.843 324.781 cv
572.35 324.199 572.064 323.834 571.986 323.685 cv
571.909 323.536 571.895 323.354 571.944 323.138 cv
572.05 322.718 572.27 322.515 572.603 322.531 cv
572.936 322.547 573.31 322.784 573.726 323.244 cv
573.972 323.508 574.503 324.261 575.319 325.499 cv
576.135 326.738 576.649 327.472 576.863 327.698 cv
577.158 328.005 577.48 328.202 577.831 328.289 cv
578.182 328.377 578.5 328.347 578.788 328.196 cv
579.074 328.047 579.274 327.742 579.387 327.284 cv
579.5 326.827 579.554 326.085 579.546 325.06 cv
579.547 324.206 579.449 323.551 579.25 323.093 cv
579.052 322.634 578.627 322.04 577.976 321.311 cv
577.439 320.725 577.085 320.272 576.914 319.957 cv
576.742 319.641 576.691 319.355 576.762 319.102 cv
cp
f
581.376 317.082 mo
581.453 316.884 581.593 316.746 581.794 316.668 cv
581.996 316.59 582.203 316.593 582.416 316.678 cv
582.521 316.714 582.91 317.377 583.585 318.666 cv
584.26 319.955 584.667 320.798 584.809 321.193 cv
584.906 321.478 585.264 322.233 585.883 323.46 cv
586.287 324.269 586.535 324.8 586.627 325.054 cv
586.719 325.308 586.743 325.54 586.695 325.751 cv
586.633 326.021 586.563 326.183 586.489 326.237 cv
586.414 326.293 586.261 326.288 586.029 326.223 cv
585.625 326.109 585.056 325.191 584.321 323.469 cv
583.9 322.486 583.504 321.607 583.133 320.831 cv
582.76 320.056 582.47 319.482 582.261 319.112 cv
582.053 318.743 581.87 318.428 581.711 318.168 cv
581.553 317.908 581.445 317.731 581.389 317.637 cv
581.333 317.543 581.305 317.461 581.303 317.39 cv
581.301 317.32 581.326 317.218 581.376 317.082 cv
cp
f
586.356 316.995 mo
586.563 316.566 587.099 316.051 587.961 315.45 cv
588.824 314.85 589.783 314.388 590.839 314.064 cv
591.459 313.872 591.869 313.77 592.072 313.759 cv
592.273 313.747 592.569 313.819 592.96 313.975 cv
593.347 314.119 593.588 314.239 593.684 314.338 cv
593.778 314.437 593.856 314.645 593.918 314.964 cv
593.993 315.379 593.946 315.644 593.779 315.757 cv
593.611 315.871 593.26 315.863 592.729 315.734 cv
592.42 315.655 592.162 315.627 591.949 315.646 cv
591.737 315.667 591.412 315.762 590.973 315.931 cv
590.395 316.137 589.852 316.42 589.348 316.781 cv
588.842 317.142 588.469 317.451 588.229 317.709 cv
587.987 317.968 587.86 318.142 587.848 318.232 cv
587.844 318.357 588.185 318.477 588.867 318.59 cv
589.551 318.703 590.133 318.727 590.611 318.658 cv
591.5 318.541 592.216 318.674 592.761 319.054 cv
593.306 319.435 593.702 320.083 593.95 320.998 cv
594.101 321.554 594.172 321.92 594.164 322.097 cv
594.156 322.272 594.056 322.536 593.865 322.887 cv
593.25 324.011 592.256 324.771 590.884 325.167 cv
590.168 325.374 589.566 325.444 589.076 325.378 cv
588.585 325.312 588.045 325.085 587.456 324.698 cv
587.019 324.418 586.757 324.142 586.671 323.866 cv
586.584 323.591 586.661 323.278 586.901 322.928 cv
587.08 322.668 587.254 322.542 587.424 322.552 cv
587.595 322.563 587.735 322.701 587.845 322.97 cv
588.073 323.58 588.628 323.864 589.513 323.823 cv
590.077 323.795 590.563 323.647 590.969 323.382 cv
591.375 323.116 591.775 322.676 592.167 322.059 cv
592.501 321.547 592.489 321.146 592.131 320.857 cv
591.773 320.569 591.125 320.439 590.189 320.47 cv
589.377 320.503 588.605 320.42 587.874 320.221 cv
587.143 320.021 586.667 319.771 586.449 319.469 cv
586.161 319.05 586.012 318.661 586.002 318.304 cv
585.992 317.945 586.11 317.51 586.356 316.995 cv
cp
f
600.393 311.888 mo
600.921 311.628 601.376 311.508 601.758 311.527 cv
602.141 311.549 602.644 311.725 603.271 312.058 cv
603.551 312.209 603.763 312.468 603.903 312.834 cv
604.044 313.199 604.058 313.538 603.946 313.852 cv
603.844 314.14 603.704 314.278 603.528 314.266 cv
603.352 314.255 603.121 314.094 602.836 313.786 cv
602.552 313.502 602.304 313.348 602.091 313.321 cv
601.876 313.295 601.515 313.388 601.007 313.598 cv
600.3 313.888 599.623 314.391 598.973 315.104 cv
598.323 315.816 597.859 316.568 597.581 317.357 cv
597.366 317.971 597.284 318.453 597.332 318.804 cv
597.381 319.154 597.583 319.534 597.94 319.943 cv
598.199 320.23 598.409 320.417 598.568 320.502 cv
598.728 320.588 598.965 320.639 599.281 320.654 cv
599.632 320.666 600.201 320.595 600.987 320.44 cv
601.773 320.286 602.499 320.101 603.164 319.887 cv
603.375 319.828 603.528 319.811 603.62 319.831 cv
603.712 319.852 603.808 319.929 603.907 320.063 cv
604.078 320.311 604.124 320.61 604.046 320.963 cv
603.968 321.314 603.806 321.521 603.559 321.584 cv
603.406 321.624 603.284 321.67 603.193 321.722 cv
603.102 321.772 603.028 321.82 602.973 321.862 cv
602.916 321.903 602.729 321.954 602.409 322.011 cv
602.088 322.068 601.631 322.129 601.034 322.19 cv
599.972 322.302 599.184 322.297 598.671 322.175 cv
598.157 322.054 597.641 321.755 597.12 321.277 cv
596.692 320.877 596.412 320.534 596.28 320.253 cv
596.148 319.971 596.048 319.502 595.98 318.846 cv
595.919 318.261 595.913 317.802 595.962 317.471 cv
596.012 317.141 596.157 316.613 596.395 315.889 cv
596.608 315.274 597.131 314.554 597.96 313.725 cv
598.792 312.896 599.603 312.284 600.393 311.888 cv
cp
f
605.364 312.188 mo
605.508 312.031 605.687 311.952 605.903 311.951 cv
606.119 311.949 606.312 312.027 606.48 312.182 cv
606.564 312.253 606.692 313.011 606.862 314.456 cv
607.032 315.902 607.112 316.834 607.103 317.254 cv
607.092 317.555 607.157 318.388 607.297 319.755 cv
607.385 320.654 607.428 321.239 607.424 321.51 cv
607.419 321.779 607.357 322.005 607.238 322.186 cv
607.083 322.415 606.961 322.541 606.872 322.565 cv
606.782 322.591 606.64 322.531 606.448 322.389 cv
606.11 322.139 605.906 321.077 605.835 319.205 cv
605.793 318.138 605.737 317.175 605.667 316.317 cv
605.596 315.46 605.529 314.821 605.467 314.401 cv
605.404 313.981 605.346 313.622 605.29 313.322 cv
605.234 313.022 605.197 312.818 605.179 312.711 cv
605.16 312.603 605.163 312.517 605.186 312.45 cv
605.209 312.384 605.269 312.296 605.364 312.188 cv
cp
f
619.086 322.265 mo
619.112 322.147 618.915 321.259 618.496 319.6 cv
618.075 317.939 617.879 317.045 617.908 316.917 cv
617.931 316.811 617.822 316.468 617.582 315.886 cv
617.089 314.671 617.005 313.854 617.332 313.435 cv
617.474 313.232 617.698 313.165 618.003 313.231 cv
618.19 313.273 618.341 313.344 618.454 313.442 cv
618.567 313.542 618.652 313.671 618.709 313.83 cv
618.766 313.99 618.809 314.145 618.838 314.292 cv
618.867 314.44 618.9 314.638 618.938 314.886 cv
618.975 315.134 619.013 315.336 619.052 315.491 cv
619.2 316.103 619.317 316.613 619.404 317.025 cv
619.491 317.438 619.546 317.708 619.566 317.836 cv
619.588 317.964 619.609 318.075 619.631 318.173 cv
619.652 318.27 619.69 318.386 619.747 318.521 cv
619.785 318.628 619.867 318.953 619.992 319.496 cv
620.118 320.041 620.242 320.522 620.364 320.943 cv
620.486 321.363 620.586 321.566 620.663 321.553 cv
620.74 321.539 620.867 321.321 621.047 320.9 cv
621.225 320.479 621.434 319.969 621.67 319.369 cv
621.907 318.771 622.092 318.338 622.225 318.072 cv
622.474 317.612 622.745 316.743 623.039 315.469 cv
623.246 314.643 623.395 314.106 623.486 313.862 cv
623.577 313.619 623.703 313.465 623.864 313.401 cv
624.195 313.242 624.428 313.241 624.565 313.4 cv
624.702 313.56 624.797 313.934 624.851 314.523 cv
624.891 315.012 624.842 315.313 624.706 315.432 cv
624.629 315.501 624.494 315.846 624.303 316.467 cv
624.11 317.089 623.89 317.792 623.642 318.579 cv
623.395 319.366 623.185 319.926 623.014 320.256 cv
622.795 320.688 622.559 321.372 622.302 322.311 cv
622.045 323.25 621.809 324.086 621.591 324.817 cv
621.374 325.55 621.179 325.978 621.005 326.099 cv
620.785 326.259 620.61 326.324 620.481 326.296 cv
620.294 326.255 620.126 326.027 619.978 325.613 cv
619.829 325.2 619.688 324.699 619.554 324.109 cv
619.42 323.521 619.317 323.139 619.246 322.963 cv
619.111 322.626 619.058 322.394 619.086 322.265 cv
cp
f
629.305 316.12 mo
630.106 316.409 630.898 316.647 631.681 316.834 cv
632.463 317.021 633.001 317.168 633.292 317.278 cv
633.622 317.39 633.828 317.484 633.909 317.56 cv
633.989 317.635 634.033 317.783 634.039 318.003 cv
634.042 318.3 633.923 318.514 633.68 318.646 cv
633.438 318.78 633.115 318.802 632.712 318.714 cv
632.324 318.619 631.663 318.484 630.729 318.312 cv
628.722 317.92 li
628.391 317.846 628.125 317.871 627.924 317.993 cv
627.723 318.117 627.533 318.368 627.351 318.749 cv
627.12 319.259 li
630.977 320.714 li
630.849 321.205 li
630.743 321.588 630.525 321.798 630.198 321.834 cv
629.869 321.87 629.215 321.761 628.234 321.507 cv
627.068 321.195 626.452 320.994 626.383 320.904 cv
626.308 320.799 626.156 320.876 625.93 321.137 cv
625.543 321.581 625.211 322.174 624.932 322.915 cv
624.732 323.442 624.622 323.802 624.602 323.993 cv
624.58 324.184 624.618 324.374 624.713 324.564 cv
624.868 324.866 625.051 325.096 625.261 325.252 cv
625.549 325.476 626.252 325.626 627.372 325.702 cv
628.49 325.778 629.27 325.727 629.71 325.546 cv
630.006 325.439 630.266 325.448 630.489 325.571 cv
630.649 325.657 630.733 325.749 630.741 325.849 cv
630.749 325.948 630.695 326.148 630.58 326.452 cv
630.41 326.9 630.232 327.135 630.046 327.154 cv
629.923 327.172 629.587 327.222 629.037 327.303 cv
628.487 327.384 628.052 327.434 627.729 327.453 cv
627.408 327.473 626.974 327.443 626.425 327.365 cv
625.878 327.287 625.364 327.138 624.882 326.917 cv
624.405 326.687 624.102 326.504 623.972 326.372 cv
623.843 326.239 623.682 325.951 623.491 325.508 cv
623.393 325.291 623.328 325.141 623.295 325.059 cv
623.262 324.976 623.241 324.836 623.231 324.64 cv
623.222 324.443 623.224 324.303 623.236 324.218 cv
623.249 324.133 623.306 323.934 623.406 323.618 cv
623.505 323.304 623.602 323.031 623.693 322.804 cv
623.787 322.575 623.956 322.168 624.204 321.582 cv
624.569 320.681 625.022 319.819 625.563 318.998 cv
626.104 318.176 626.453 317.608 626.61 317.296 cv
626.911 316.704 627.195 316.272 627.464 316.002 cv
627.884 315.603 li
629.305 316.12 li
cp
f
636.013 319.531 mo
636.289 319.479 636.493 319.49 636.625 319.563 cv
636.755 319.637 636.842 319.782 636.886 319.999 cv
636.917 320.141 636.801 320.471 636.538 320.99 cv
636.274 321.51 635.73 322.481 634.907 323.903 cv
632.856 327.459 li
633.178 327.659 li
633.402 327.799 633.69 327.995 634.044 328.247 cv
634.394 328.484 635.096 328.905 636.153 329.51 cv
637.21 330.115 637.874 330.473 638.142 330.582 cv
638.327 330.644 638.422 330.721 638.426 330.813 cv
638.43 330.904 638.352 331.111 638.192 331.435 cv
638.031 331.757 637.909 331.95 637.826 332.014 cv
637.742 332.077 637.586 332.092 637.357 332.061 cv
637.073 332.025 636.182 331.548 634.683 330.626 cv
633.185 329.705 632.211 329.201 631.764 329.117 cv
631.434 329.042 631.231 328.97 631.154 328.899 cv
631.076 328.828 630.985 328.64 630.882 328.335 cv
630.774 327.985 630.757 327.697 630.829 327.47 cv
630.901 327.242 631.092 326.987 631.4 326.706 cv
631.725 326.421 632.284 325.638 633.077 324.354 cv
633.87 323.072 634.458 322.017 634.84 321.185 cv
635.192 320.434 635.422 319.978 635.533 319.819 cv
635.642 319.66 635.802 319.564 636.013 319.531 cv
cp
f
648.905 331.239 mo
648.813 330.264 li
647.818 329.461 li
647.334 329.087 646.824 328.798 646.286 328.595 cv
645.747 328.392 645.239 328.287 644.761 328.278 cv
644.281 328.27 643.818 328.343 643.37 328.498 cv
642.92 328.652 642.55 328.897 642.257 329.231 cv
641.965 329.566 641.737 329.968 641.574 330.438 cv
641.38 331.099 641.381 331.819 641.575 332.601 cv
641.77 333.382 642.091 333.953 642.54 334.314 cv
642.988 334.676 643.491 334.943 644.046 335.113 cv
644.602 335.284 645.118 335.323 645.595 335.229 cv
646.776 335.025 647.65 334.583 648.218 333.899 cv
648.784 333.215 649.013 332.328 648.905 331.239 cv
cp
647.173 327.021 mo
647.488 327.09 647.884 327.268 648.363 327.553 cv
648.842 327.839 649.193 328.11 649.417 328.368 cv
649.757 328.75 649.998 329.234 650.141 329.82 cv
650.286 330.407 650.322 331.015 650.253 331.646 cv
650.185 332.275 650.037 332.908 649.811 333.543 cv
649.584 334.178 649.279 334.732 648.895 335.208 cv
648.511 335.685 648.07 336.069 647.572 336.362 cv
646.74 336.801 646.023 337.044 645.423 337.091 cv
644.822 337.139 644.052 336.999 643.113 336.674 cv
642.431 336.447 641.873 336.132 641.437 335.727 cv
641 335.32 640.63 334.779 640.328 334.104 cv
639.812 332.947 639.736 331.707 640.103 330.384 cv
640.468 329.06 641.187 327.983 642.258 327.151 cv
643.48 326.209 644.491 325.722 645.289 325.688 cv
645.621 325.678 645.878 325.708 646.061 325.777 cv
646.243 325.848 646.354 325.94 646.391 326.055 cv
646.429 326.171 646.472 326.294 646.521 326.426 cv
646.569 326.558 646.628 326.675 646.699 326.778 cv
646.77 326.881 646.928 326.963 647.173 327.021 cv
cp
f
658.025 335.179 mo
658.543 335.456 658.905 335.758 659.11 336.081 cv
659.315 336.403 659.464 336.916 659.557 337.619 cv
659.597 337.937 659.51 338.258 659.293 338.585 cv
659.078 338.912 658.811 339.121 658.49 339.211 cv
658.196 339.295 658.002 339.262 657.909 339.111 cv
657.817 338.962 657.813 338.682 657.898 338.27 cv
657.965 337.874 657.946 337.581 657.844 337.393 cv
657.74 337.203 657.456 336.963 656.989 336.671 cv
656.343 336.265 655.54 336.005 654.583 335.891 cv
653.624 335.776 652.743 335.835 651.938 336.065 cv
651.314 336.248 650.875 336.461 650.617 336.704 cv
650.36 336.948 650.168 337.334 650.042 337.861 cv
649.959 338.238 649.929 338.518 649.953 338.697 cv
649.975 338.877 650.071 339.1 650.243 339.366 cv
650.437 339.658 650.825 340.079 651.408 340.63 cv
651.991 341.18 652.562 341.663 653.123 342.081 cv
653.292 342.219 653.396 342.332 653.433 342.419 cv
653.471 342.507 653.463 342.629 653.411 342.788 cv
653.308 343.07 653.092 343.282 652.759 343.423 cv
652.428 343.563 652.166 343.552 651.971 343.388 cv
651.85 343.286 651.741 343.214 651.647 343.17 cv
651.551 343.125 651.47 343.093 651.403 343.071 cv
651.337 343.05 651.188 342.927 650.956 342.699 cv
650.722 342.473 650.408 342.135 650.01 341.685 cv
649.303 340.885 648.85 340.24 648.65 339.752 cv
648.451 339.264 648.394 338.67 648.48 337.969 cv
648.558 337.387 648.673 336.961 648.827 336.689 cv
648.979 336.418 649.302 336.064 649.797 335.627 cv
650.238 335.238 650.607 334.967 650.906 334.815 cv
651.204 334.664 651.718 334.475 652.446 334.247 cv
653.068 334.064 653.959 334.071 655.116 334.266 cv
656.273 334.46 657.243 334.765 658.025 335.179 cv
cp
f
660.683 339.421 mo
660.893 339.447 661.062 339.548 661.188 339.723 cv
661.314 339.897 661.363 340.1 661.335 340.327 cv
661.325 340.437 660.781 340.98 659.703 341.957 cv
658.624 342.934 657.911 343.54 657.563 343.775 cv
657.313 343.941 656.671 344.477 655.638 345.384 cv
654.957 345.978 654.505 346.352 654.282 346.504 cv
654.059 346.657 653.84 346.737 653.624 346.745 cv
653.348 346.752 653.174 346.727 653.102 346.667 cv
653.029 346.608 652.996 346.459 653.001 346.219 cv
653.008 345.799 653.755 345.018 655.238 343.874 cv
656.084 343.221 656.836 342.617 657.493 342.062 cv
658.15 341.507 658.632 341.083 658.939 340.788 cv
659.244 340.494 659.503 340.237 659.715 340.019 cv
659.927 339.8 660.071 339.65 660.148 339.573 cv
660.226 339.495 660.298 339.446 660.366 339.428 cv
660.433 339.409 660.539 339.406 660.683 339.421 cv
cp
f
665.47 346.693 mo
665.731 347.014 666.002 347.345 666.28 347.684 cv
666.559 348.022 666.764 348.272 666.895 348.433 cv
667.026 348.593 667.169 348.782 667.324 348.998 cv
667.479 349.214 667.631 349.444 667.783 349.69 cv
667.999 350.077 668.117 350.331 668.136 350.451 cv
668.154 350.571 668.093 350.712 667.949 350.875 cv
667.746 351.126 667.416 351.358 666.958 351.572 cv
666.643 351.722 666.438 351.792 666.344 351.782 cv
666.249 351.773 666.139 351.681 666.012 351.503 cv
665.828 351.248 665.766 350.988 665.824 350.723 cv
665.869 350.56 665.857 350.395 665.785 350.229 cv
665.713 350.063 665.544 349.792 665.281 349.418 cv
665.234 349.36 665.175 349.277 665.1 349.168 cv
664.956 348.96 664.856 348.813 664.802 348.727 cv
664.746 348.641 664.663 348.546 664.551 348.443 cv
664.438 348.341 664.365 348.276 664.328 348.249 cv
664.292 348.22 664.206 348.202 664.072 348.195 cv
663.937 348.188 663.842 348.197 663.787 348.222 cv
663.731 348.245 663.609 348.303 663.42 348.395 cv
663.23 348.486 663.072 348.571 662.944 348.65 cv
662.816 348.729 662.608 348.854 662.321 349.029 cv
662.153 349.122 662.026 349.201 661.937 349.265 cv
661.194 349.707 660.518 350.15 659.907 350.595 cv
659.296 351.039 658.846 351.39 658.557 351.647 cv
658.267 351.904 658.003 352.132 657.763 352.328 cv
657.521 352.524 657.325 352.641 657.174 352.678 cv
657.022 352.714 656.853 352.688 656.667 352.601 cv
656.364 352.453 656.199 352.305 656.171 352.156 cv
656.143 352.007 656.234 351.776 656.445 351.466 cv
656.702 351.089 657.368 350.559 658.444 349.876 cv
659.102 349.454 659.992 348.832 661.114 348.013 cv
662.237 347.193 662.81 346.742 662.833 346.661 cv
662.848 346.639 662.665 346.422 662.283 346.009 cv
661.902 345.598 661.535 345.222 661.181 344.883 cv
660.883 344.596 660.703 344.397 660.641 344.287 cv
660.58 344.178 660.57 344.049 660.612 343.902 cv
660.681 343.657 660.875 343.391 661.195 343.102 cv
661.547 342.795 661.845 342.677 662.09 342.746 cv
662.334 342.815 662.589 343.086 662.852 343.558 cv
663.051 343.914 663.436 344.399 664.007 345.016 cv
664.577 345.631 665.065 346.19 665.47 346.693 cv
cp
f
671.546 356.15 mo
671.606 355.964 671.673 355.935 671.744 356.062 cv
671.803 356.194 671.941 356.59 672.162 357.25 cv
672.632 358.746 li
672.088 358.937 li
671.828 359.028 671.638 359.042 671.519 358.975 cv
671.4 358.908 671.342 358.779 671.345 358.588 cv
671.347 358.396 671.369 358.197 671.412 357.991 cv
671.454 357.786 671.492 357.569 671.526 357.341 cv
671.56 357.112 671.56 356.947 671.523 356.846 cv
671.448 356.631 671.455 356.399 671.546 356.15 cv
cp
666.589 360.339 mo
666.863 360.178 667.132 359.966 667.395 359.701 cv
667.659 359.438 667.851 359.207 667.973 359.012 cv
668.095 358.816 668.15 358.701 668.138 358.667 cv
668.118 358.61 667.968 358.473 667.688 358.254 cv
667.472 358.074 667.114 357.943 666.613 357.858 cv
666.112 357.774 665.536 357.744 664.884 357.771 cv
664.573 357.791 664.372 357.817 664.281 357.849 cv
664.191 357.881 664.146 357.954 664.148 358.068 cv
664.146 358.171 664.187 358.284 664.269 358.407 cv
664.35 358.531 664.476 358.709 664.647 358.942 cv
664.818 359.175 664.964 359.409 665.086 359.646 cv
665.368 360.157 665.591 360.45 665.758 360.525 cv
665.925 360.601 666.202 360.538 666.589 360.339 cv
cp
666.165 356.042 mo
666.266 356.006 666.473 355.996 666.784 356.014 cv
667.096 356.031 667.446 356.086 667.834 356.179 cv
668.223 356.271 668.6 356.453 668.963 356.727 cv
669.326 356.999 669.584 357.338 669.739 357.74 cv
669.835 358.012 669.822 358.418 669.7 358.957 cv
669.578 359.496 669.402 359.908 669.171 360.192 cv
668.784 360.646 667.887 361.296 666.48 362.142 cv
665.073 362.987 663.643 363.729 662.188 364.368 cv
661.495 364.677 661.024 364.813 660.777 364.779 cv
660.529 364.745 660.415 364.535 660.431 364.147 cv
660.433 363.791 660.546 363.518 660.773 363.33 cv
660.999 363.143 661.548 362.857 662.418 362.475 cv
664.074 361.758 li
663.86 361.204 li
663.745 360.913 663.392 360.462 662.801 359.85 cv
662.209 359.236 661.893 358.779 661.85 358.477 cv
661.823 358.257 661.779 358.12 661.715 358.065 cv
661.651 358.012 661.487 357.987 661.221 357.991 cv
661.008 358.002 660.766 358.025 660.491 358.058 cv
660.217 358.091 660.005 358.114 659.857 358.128 cv
659.709 358.142 659.556 358.14 659.396 358.119 cv
659.236 358.099 659.109 358.028 659.017 357.908 cv
658.924 357.789 658.85 357.617 658.798 357.396 cv
658.72 357.065 658.792 356.767 659.016 356.497 cv
659.146 356.324 659.283 356.216 659.427 356.172 cv
659.569 356.128 659.73 356.115 659.909 356.135 cv
660.088 356.154 660.443 356.179 660.976 356.209 cv
661.507 356.237 662.091 356.235 662.729 356.202 cv
663.065 356.185 663.531 356.17 664.125 356.158 cv
664.719 356.146 665.186 356.132 665.522 356.115 cv
665.859 356.098 666.074 356.073 666.165 356.042 cv
cp
f
285.913 178.122 mo
285.335 178.196 284.986 178.299 284.865 178.427 cv
284.743 178.556 284.636 178.935 284.547 179.563 cv
284.481 180.068 284.513 180.56 284.645 181.041 cv
284.775 181.521 285.062 182.138 285.504 182.892 cv
285.734 183.302 285.973 183.458 286.222 183.36 cv
286.484 183.251 287.058 182.727 287.944 181.786 cv
289.388 180.251 li
288.639 179.438 li
288.12 178.869 287.66 178.49 287.259 178.299 cv
286.859 178.109 286.41 178.049 285.913 178.122 cv
cp
282.763 177.886 mo
282.941 177.394 283.178 177.043 283.473 176.836 cv
283.768 176.628 284.324 176.432 285.141 176.247 cv
285.687 176.135 286.168 176.106 286.583 176.162 cv
286.999 176.217 287.504 176.432 288.102 176.802 cv
288.699 177.175 289.343 177.672 290.033 178.297 cv
290.722 178.923 291.658 179.828 292.839 181.013 cv
295.749 183.97 li
295.955 184.175 296.078 184.352 296.119 184.504 cv
296.159 184.658 296.143 184.854 296.072 185.097 cv
295.991 185.328 295.909 185.481 295.827 185.558 cv
295.745 185.635 295.612 185.673 295.43 185.677 cv
295.055 185.67 294.662 185.516 294.251 185.21 cv
293.84 184.904 293.263 184.343 292.52 183.522 cv
291.596 182.479 291.055 181.949 290.898 181.932 cv
290.808 181.923 290.602 182.1 290.278 182.463 cv
289.955 182.826 289.572 183.263 289.131 183.774 cv
288.689 184.285 288.332 184.65 288.058 184.871 cv
287.622 185.222 287.441 185.482 287.513 185.649 cv
287.549 185.744 287.973 186.435 288.785 187.721 cv
289.597 189.009 290.023 189.792 290.062 190.069 cv
290.12 190.371 290.041 190.605 289.825 190.768 cv
289.607 190.934 289.314 190.991 288.944 190.939 cv
288.732 190.906 288.559 190.838 288.428 190.739 cv
288.296 190.64 288.142 190.441 287.962 190.142 cv
287.784 189.845 287.593 189.5 287.391 189.109 cv
287.188 188.717 286.836 188.122 286.336 187.324 cv
285.835 186.525 285.264 185.665 284.624 184.742 cv
283.545 183.227 282.955 182.208 282.852 181.684 cv
282.749 181.162 282.651 180.844 282.561 180.732 cv
282.441 180.584 282.407 180.184 282.459 179.536 cv
282.511 178.886 282.613 178.336 282.763 177.886 cv
cp
f
290.941 169.585 mo
291.158 168.58 291.553 167.97 292.126 167.759 cv
292.7 167.546 293.625 167.659 294.902 168.1 cv
295.661 168.35 296.169 168.594 296.426 168.824 cv
296.683 169.055 296.764 169.341 296.667 169.679 cv
296.592 169.963 296.365 170.142 295.985 170.21 cv
295.604 170.278 295.148 170.226 294.617 170.047 cv
294.086 169.871 293.698 169.886 293.453 170.094 cv
293.208 170.303 293.025 170.77 292.905 171.495 cv
292.79 172.257 292.786 172.989 292.894 173.693 cv
293.002 174.396 293.261 175.297 293.67 176.395 cv
294.114 177.626 294.538 178.519 294.943 179.076 cv
295.348 179.633 295.806 179.957 296.318 180.051 cv
296.697 180.12 297.007 180.103 297.25 180.004 cv
297.492 179.904 297.984 179.588 298.724 179.056 cv
299.692 178.346 300.362 177.698 300.733 177.109 cv
301.104 176.521 301.234 175.908 301.12 175.266 cv
301.035 174.664 300.877 174.359 300.648 174.352 cv
300.419 174.345 300.077 174.644 299.622 175.251 cv
299.167 175.859 298.926 176.299 298.9 176.57 cv
298.846 177.054 298.553 177.292 298.02 177.28 cv
297.488 177.27 297.048 177.016 296.702 176.514 cv
296.529 176.266 296.558 175.9 296.789 175.418 cv
297.02 174.937 297.543 174.162 298.359 173.091 cv
298.736 172.595 299.069 172.205 299.357 171.918 cv
299.645 171.631 299.931 171.434 300.215 171.324 cv
300.5 171.215 300.757 171.207 300.987 171.301 cv
301.217 171.394 301.469 171.604 301.744 171.928 cv
302.018 172.254 302.288 172.672 302.551 173.18 cv
302.816 173.687 303.123 174.335 303.475 175.125 cv
303.78 175.847 304.044 176.228 304.267 176.268 cv
304.556 176.321 304.864 176.625 305.188 177.177 cv
305.514 177.732 305.646 178.175 305.585 178.509 cv
305.512 178.909 305.417 179.151 305.298 179.233 cv
305.18 179.315 304.874 179.274 304.38 179.109 cv
303.887 178.945 303.527 178.755 303.302 178.542 cv
303.063 178.337 302.828 178.301 302.598 178.432 cv
302.367 178.562 302.089 178.885 301.766 179.402 cv
301.459 179.886 300.808 180.463 299.813 181.135 cv
299.155 181.589 298.686 181.876 298.407 181.991 cv
298.126 182.107 297.751 182.163 297.281 182.158 cv
296.486 182.163 295.84 182.016 295.343 181.719 cv
294.844 181.421 294.25 180.831 293.56 179.946 cv
293.111 179.38 292.76 178.876 292.508 178.427 cv
292.256 177.979 292.105 177.64 292.054 177.412 cv
292.003 177.185 291.943 176.95 291.872 176.707 cv
291.801 176.463 291.698 176.244 291.561 176.046 cv
291.197 175.52 290.936 174.105 290.78 171.799 cv
290.715 171.144 290.768 170.406 290.941 169.585 cv
cp
f
301.711 162.556 mo
302.006 161.568 302.447 160.991 303.035 160.824 cv
303.623 160.657 304.536 160.841 305.776 161.376 cv
306.513 161.688 307.001 161.967 307.24 162.218 cv
307.478 162.468 307.537 162.759 307.415 163.088 cv
307.318 163.368 307.077 163.527 306.693 163.566 cv
306.308 163.605 305.858 163.516 305.341 163.299 cv
304.826 163.082 304.438 163.067 304.177 163.255 cv
303.917 163.445 303.699 163.896 303.523 164.61 cv
303.35 165.361 303.29 166.091 303.343 166.801 cv
303.396 167.51 303.584 168.428 303.909 169.555 cv
304.256 170.816 304.61 171.739 304.97 172.326 cv
305.331 172.912 305.763 173.271 306.267 173.403 cv
306.639 173.5 306.95 173.509 307.199 173.428 cv
307.448 173.347 307.962 173.071 308.742 172.596 cv
309.762 171.963 310.48 171.369 310.895 170.811 cv
311.311 170.254 311.487 169.651 311.423 169.002 cv
311.384 168.395 311.25 168.079 311.023 168.054 cv
310.795 168.031 310.431 168.302 309.93 168.873 cv
309.43 169.444 309.156 169.863 309.109 170.131 cv
309.018 170.61 308.708 170.824 308.177 170.772 cv
307.646 170.72 307.228 170.432 306.922 169.908 cv
306.769 169.645 306.826 169.283 307.093 168.82 cv
307.36 168.359 307.942 167.626 308.838 166.621 cv
309.252 166.157 309.614 165.792 309.923 165.529 cv
310.232 165.266 310.533 165.088 310.825 165.002 cv
311.116 164.915 311.374 164.927 311.596 165.038 cv
311.818 165.149 312.054 165.377 312.302 165.724 cv
312.55 166.069 312.787 166.507 313.011 167.033 cv
313.235 167.56 313.492 168.23 313.782 169.042 cv
314.03 169.786 314.265 170.187 314.484 170.245 cv
314.768 170.32 315.051 170.646 315.332 171.222 cv
315.613 171.799 315.71 172.251 315.625 172.58 cv
315.521 172.974 315.407 173.207 315.283 173.279 cv
315.158 173.352 314.857 173.289 314.377 173.085 cv
313.898 172.885 313.554 172.668 313.346 172.437 cv
313.124 172.215 312.892 172.161 312.652 172.272 cv
312.412 172.385 312.111 172.685 311.748 173.175 cv
311.405 173.635 310.711 174.161 309.667 174.752 cv
308.976 175.156 308.487 175.405 308.199 175.499 cv
307.911 175.593 307.533 175.618 307.064 175.578 cv
306.271 175.522 305.639 175.326 305.166 174.991 cv
304.692 174.655 304.145 174.022 303.525 173.085 cv
303.121 172.488 302.81 171.957 302.593 171.49 cv
302.376 171.024 302.251 170.675 302.218 170.444 cv
302.185 170.212 302.143 169.974 302.091 169.726 cv
302.039 169.478 301.953 169.251 301.832 169.044 cv
301.509 168.492 301.359 167.06 301.381 164.75 cv
301.367 164.091 301.477 163.36 301.711 162.556 cv
cp
f
309.934 158.976 mo
310.009 158.704 310.174 158.5 310.429 158.368 cv
310.685 158.235 310.96 158.21 311.254 158.291 cv
311.398 158.325 312.01 159.146 313.091 160.757 cv
314.172 162.369 314.833 163.427 315.078 163.93 cv
315.249 164.293 315.832 165.243 316.83 166.781 cv
317.481 167.792 317.887 168.461 318.046 168.785 cv
318.205 169.107 318.269 169.413 318.238 169.7 cv
318.193 170.066 318.125 170.29 318.034 170.374 cv
317.942 170.458 317.738 170.474 317.422 170.42 cv
316.87 170.329 315.983 169.195 314.761 167.016 cv
314.062 165.775 313.41 164.667 312.804 163.692 cv
312.199 162.718 311.731 162 311.402 161.541 cv
311.073 161.081 310.784 160.69 310.536 160.368 cv
310.288 160.046 310.12 159.827 310.032 159.71 cv
309.944 159.593 309.894 159.488 309.881 159.395 cv
309.87 159.303 309.887 159.164 309.934 158.976 cv
cp
f
320.984 153.582 mo
321.098 153.25 321.264 153.035 321.482 152.935 cv
321.687 152.843 321.994 152.912 322.404 153.137 cv
322.813 153.365 323.075 153.603 323.187 153.85 cv
323.252 153.997 323.4 154.246 323.63 154.598 cv
323.86 154.951 324.232 155.511 324.746 156.28 cv
325.26 157.049 325.767 157.83 326.266 158.622 cv
326.826 159.509 327.494 160.454 328.271 161.455 cv
329.049 162.456 329.627 163.125 330.008 163.461 cv
330.833 164.16 331.299 164.879 331.407 165.622 cv
331.5 166.177 331.293 166.419 330.787 166.348 cv
330.267 166.286 329.661 165.945 328.969 165.328 cv
328.277 164.71 327.691 164.123 327.211 163.567 cv
326.732 163.012 326.456 162.75 326.383 162.783 cv
326.339 162.802 326.317 162.91 326.317 163.103 cv
326.316 163.296 326.299 163.646 326.265 164.154 cv
326.231 164.661 326.145 165.208 326.007 165.799 cv
325.863 166.372 325.723 166.782 325.588 167.027 cv
325.454 167.273 325.244 167.486 324.957 167.668 cv
324.302 168.124 323.696 168.376 323.139 168.425 cv
322.583 168.476 321.952 168.343 321.248 168.029 cv
320.594 167.71 320.007 167.294 319.487 166.783 cv
318.966 166.273 318.553 165.766 318.246 165.263 cv
317.94 164.761 317.508 164.07 316.953 163.188 cv
316.396 162.308 315.859 161.527 315.341 160.848 cv
314.728 160.038 314.376 159.529 314.284 159.324 cv
314.191 159.121 314.186 158.877 314.269 158.594 cv
314.441 158.042 314.748 157.79 315.19 157.835 cv
315.632 157.881 316.113 158.226 316.632 158.869 cv
316.94 159.239 317.59 160.28 318.583 161.99 cv
319.576 163.7 320.206 164.715 320.473 165.034 cv
320.843 165.465 321.258 165.75 321.718 165.894 cv
322.178 166.037 322.605 166.02 322.998 165.841 cv
323.392 165.663 323.681 165.274 323.865 164.671 cv
324.05 164.071 324.176 163.087 324.244 161.722 cv
324.31 160.585 324.228 159.706 323.998 159.082 cv
323.768 158.456 323.247 157.633 322.435 156.614 cv
321.765 155.792 321.328 155.165 321.123 154.731 cv
320.917 154.297 320.872 153.915 320.984 153.582 cv
cp
f
333.787 146.133 mo
333.788 145.919 334.058 145.715 334.6 145.52 cv
334.961 145.39 335.197 145.337 335.31 145.366 cv
335.422 145.394 335.524 145.536 335.616 145.792 cv
336.036 146.813 336.881 149.128 338.15 152.735 cv
339.418 156.343 340.175 158.58 340.419 159.443 cv
340.751 160.6 340.898 161.394 340.858 161.824 cv
340.818 162.254 340.587 162.546 340.166 162.699 cv
339.94 162.78 339.752 162.777 339.6 162.685 cv
339.449 162.597 339.281 162.461 339.097 162.281 cv
338.913 162.102 338.723 161.977 338.53 161.912 cv
338.239 161.813 338.066 161.688 338.012 161.537 cv
337.962 161.402 337.697 161.091 337.214 160.602 cv
336.731 160.112 336.167 159.538 335.52 158.877 cv
334.874 158.218 334.393 157.69 334.08 157.293 cv
333.631 156.757 333.178 156.257 332.722 155.793 cv
332.264 155.328 331.999 155.11 331.923 155.137 cv
331.878 155.153 331.944 155.488 332.119 156.138 cv
332.294 156.789 332.503 157.615 332.747 158.616 cv
332.989 159.618 333.131 160.46 333.173 161.142 cv
333.201 161.455 333.237 161.811 333.28 162.213 cv
333.323 162.615 333.352 162.897 333.37 163.061 cv
333.386 163.226 333.393 163.41 333.391 163.615 cv
333.388 163.82 333.362 163.983 333.312 164.102 cv
333.261 164.222 333.185 164.352 333.083 164.492 cv
332.886 164.75 332.734 164.881 332.625 164.886 cv
332.516 164.892 332.297 164.792 331.968 164.588 cv
331.557 164.345 331.268 164.051 331.1 163.702 cv
330.932 163.354 330.899 162.993 331.001 162.615 cv
331.099 162.274 331.107 161.497 331.027 160.285 cv
330.98 159.451 330.874 158.718 330.707 158.091 cv
330.539 157.461 330.137 156.268 329.501 154.507 cv
328.083 150.578 li
328.574 150.171 li
328.781 149.995 328.96 149.9 329.109 149.888 cv
329.258 149.878 329.476 149.939 329.763 150.074 cv
330.223 150.266 330.502 150.496 330.6 150.768 cv
330.654 150.918 330.786 151.104 330.994 151.326 cv
331.202 151.549 331.484 151.838 331.842 152.193 cv
332.201 152.549 332.473 152.821 332.66 153.009 cv
335.608 156.154 li
336.461 157.104 337.005 157.691 337.239 157.913 cv
337.472 158.135 337.633 158.229 337.724 158.197 cv
337.844 158.153 337.881 157.927 337.835 157.518 cv
337.757 157.019 337.254 155.436 336.325 152.769 cv
335.396 150.102 334.76 148.414 334.418 147.703 cv
333.998 146.869 333.788 146.345 333.787 146.133 cv
cp
f
341.09 145.347 mo
341.625 144.467 342.197 144.019 342.808 144.004 cv
343.419 143.992 344.256 144.402 345.321 145.234 cv
345.956 145.721 346.356 146.114 346.525 146.417 cv
346.692 146.719 346.675 147.014 346.474 147.302 cv
346.309 147.547 346.037 147.642 345.655 147.583 cv
345.272 147.523 344.859 147.323 344.415 146.983 cv
343.97 146.642 343.599 146.53 343.299 146.647 cv
343 146.766 342.674 147.146 342.324 147.793 cv
341.967 148.474 341.724 149.166 341.596 149.866 cv
341.468 150.566 341.419 151.502 341.448 152.675 cv
341.466 153.981 341.575 154.965 341.776 155.623 cv
341.977 156.282 342.304 156.738 342.758 156.993 cv
343.093 157.18 343.392 157.268 343.653 157.252 cv
343.915 157.238 344.483 157.1 345.357 156.837 cv
346.503 156.483 347.348 156.088 347.891 155.654 cv
348.434 155.22 348.756 154.68 348.859 154.037 cv
348.974 153.441 348.924 153.1 348.71 153.019 cv
348.497 152.938 348.076 153.11 347.447 153.535 cv
346.818 153.96 346.447 154.297 346.334 154.544 cv
346.125 154.986 345.771 155.115 345.271 154.93 cv
344.771 154.746 344.439 154.362 344.275 153.777 cv
344.192 153.484 344.339 153.147 344.715 152.768 cv
345.09 152.388 345.838 151.826 346.958 151.081 cv
347.477 150.735 347.918 150.476 348.285 150.296 cv
348.65 150.12 348.985 150.027 349.29 150.016 cv
349.594 150.005 349.84 150.083 350.027 150.246 cv
350.214 150.409 350.384 150.69 350.538 151.087 cv
350.69 151.485 350.809 151.967 350.892 152.533 cv
350.976 153.1 351.055 153.812 351.13 154.671 cv
351.183 155.455 351.308 155.901 351.506 156.012 cv
351.762 156.156 351.954 156.542 352.08 157.172 cv
352.207 157.801 352.187 158.264 352.02 158.56 cv
351.821 158.916 351.652 159.112 351.513 159.151 cv
351.375 159.19 351.098 159.051 350.686 158.735 cv
350.273 158.418 349.995 158.123 349.851 157.846 cv
349.692 157.577 349.483 157.463 349.222 157.512 cv
348.961 157.561 348.593 157.776 348.119 158.158 cv
347.671 158.516 346.867 158.85 345.708 159.158 cv
344.937 159.373 344.4 159.49 344.098 159.509 cv
343.796 159.527 343.423 159.457 342.98 159.299 cv
342.227 159.043 341.665 158.695 341.291 158.25 cv
340.917 157.808 340.549 157.055 340.185 155.993 cv
339.945 155.313 339.778 154.719 339.687 154.215 cv
339.594 153.708 339.562 153.339 339.588 153.108 cv
339.615 152.876 339.634 152.635 339.647 152.381 cv
339.659 152.127 339.632 151.886 339.568 151.656 cv
339.395 151.04 339.611 149.616 340.216 147.387 cv
340.369 146.745 340.66 146.066 341.09 145.347 cv
cp
f
349.985 143.954 mo
350.126 143.708 350.337 143.553 350.618 143.489 cv
350.899 143.425 351.171 143.47 351.436 143.624 cv
351.566 143.693 351.951 144.644 352.588 146.474 cv
353.226 148.308 353.599 149.498 353.708 150.047 cv
353.78 150.442 354.105 151.509 354.681 153.247 cv
355.056 154.394 355.279 155.142 355.351 155.495 cv
355.423 155.847 355.408 156.159 355.305 156.428 cv
355.169 156.771 355.047 156.971 354.937 157.029 cv
354.827 157.087 354.625 157.051 354.334 156.92 cv
353.822 156.692 353.251 155.37 352.62 152.953 cv
352.258 151.575 351.907 150.338 351.568 149.242 cv
351.229 148.146 350.958 147.334 350.756 146.805 cv
350.554 146.277 350.374 145.826 350.214 145.451 cv
350.056 145.078 349.949 144.823 349.894 144.688 cv
349.838 144.552 349.816 144.439 349.828 144.345 cv
349.839 144.253 349.892 144.122 349.985 143.954 cv
cp
f
369.58 139.591 mo
371.772 138.642 372.895 138.881 372.95 140.31 cv
372.978 141.175 li
371.996 141.242 li
371.417 141.261 370.661 141.474 369.726 141.881 cv
368.791 142.289 368.228 142.503 368.038 142.526 cv
367.624 142.574 367.317 142.739 367.117 143.02 cv
366.916 143.301 366.834 143.672 366.873 144.135 cv
366.877 144.313 366.885 144.452 366.897 144.555 cv
366.91 144.659 366.93 144.769 366.96 144.886 cv
366.99 145.003 367.016 145.093 367.04 145.155 cv
367.063 145.217 367.111 145.281 367.183 145.344 cv
367.254 145.409 367.32 145.453 367.379 145.478 cv
367.438 145.503 367.538 145.528 367.678 145.552 cv
367.817 145.576 367.944 145.589 368.057 145.593 cv
368.17 145.595 368.339 145.591 368.563 145.582 cv
368.788 145.572 368.999 145.554 369.198 145.532 cv
369.396 145.509 369.664 145.485 370 145.462 cv
372.558 145.235 li
372.727 146.061 li
372.841 146.627 372.846 146.977 372.741 147.111 cv
372.636 147.244 371.703 147.501 369.944 147.885 cv
367.305 148.458 li
367.301 149.667 li
367.283 150.346 367.398 151.013 367.643 151.668 cv
367.889 152.326 368.017 152.902 368.027 153.4 cv
368.066 153.878 368.056 154.166 367.995 154.262 cv
367.933 154.358 367.744 154.425 367.426 154.461 cv
366.758 154.54 366.273 154.076 365.971 153.073 cv
365.668 152.068 365.488 150.354 365.43 147.928 cv
365.397 146.402 365.085 144.699 364.496 142.819 cv
364.385 142.428 364.399 142.093 364.535 141.811 cv
364.671 141.529 364.934 141.292 365.322 141.102 cv
365.71 140.913 366.11 140.75 366.521 140.613 cv
366.932 140.476 367.445 140.315 368.06 140.13 cv
368.674 139.946 369.181 139.768 369.58 139.591 cv
cp
f
385.075 143.81 mo
384.127 142.91 li
382.424 142.976 li
381.609 143.024 380.843 143.182 380.125 143.451 cv
379.407 143.719 378.804 144.058 378.316 144.47 cv
377.828 144.883 377.426 145.362 377.111 145.91 cv
376.796 146.46 376.638 147.03 376.638 147.623 cv
376.637 148.215 376.76 148.818 377.008 149.434 cv
377.393 150.268 378.026 150.991 378.907 151.604 cv
379.788 152.218 380.612 152.51 381.379 152.48 cv
382.147 152.45 382.884 152.277 383.592 151.962 cv
384.3 151.645 384.853 151.232 385.249 150.719 cv
386.257 149.479 386.746 148.268 386.716 147.084 cv
386.685 145.899 386.138 144.808 385.075 143.81 cv
cp
379.636 141.091 mo
380.012 140.885 380.566 140.715 381.297 140.582 cv
382.029 140.45 382.62 140.415 383.071 140.477 cv
383.747 140.562 384.414 140.836 385.073 141.299 cv
385.731 141.762 386.302 142.339 386.786 143.034 cv
387.269 143.727 387.675 144.492 388.004 145.328 cv
388.333 146.164 388.514 146.989 388.546 147.805 cv
388.578 148.62 388.472 149.392 388.228 150.123 cv
387.778 151.293 387.271 152.165 386.709 152.74 cv
386.147 153.314 385.251 153.85 384.022 154.346 cv
383.14 154.717 382.302 154.892 381.508 154.865 cv
380.715 154.841 379.87 154.622 378.973 154.208 cv
377.44 153.499 376.277 152.32 375.484 150.669 cv
374.69 149.019 374.467 147.308 374.814 145.532 cv
375.216 143.516 375.802 142.139 376.574 141.404 cv
376.899 141.103 377.183 140.908 377.428 140.819 cv
377.672 140.729 377.865 140.726 378.004 140.808 cv
378.143 140.89 378.294 140.976 378.458 141.066 cv
378.622 141.155 378.785 141.221 378.947 141.263 cv
379.108 141.304 379.338 141.248 379.636 141.091 cv
cp
f
396.924 139.713 mo
397.472 139.647 398.037 139.578 398.618 139.504 cv
399.199 139.434 399.626 139.379 399.9 139.346 cv
400.174 139.313 400.488 139.286 400.842 139.266 cv
401.195 139.245 401.564 139.236 401.949 139.242 cv
402.54 139.273 402.91 139.322 403.059 139.385 cv
403.208 139.45 403.323 139.621 403.404 139.897 cv
403.542 140.304 403.569 140.843 403.484 141.511 cv
403.427 141.974 403.36 142.253 403.282 142.353 cv
403.205 142.454 403.021 142.512 402.732 142.528 cv
402.313 142.553 401.976 142.44 401.717 142.185 cv
401.566 142.016 401.371 141.914 401.133 141.877 cv
400.895 141.839 400.47 141.836 399.859 141.867 cv
399.763 141.878 399.626 141.887 399.45 141.894 cv
399.113 141.908 398.875 141.915 398.739 141.915 cv
398.603 141.916 398.437 141.942 398.242 141.996 cv
398.047 142.049 397.921 142.087 397.864 142.108 cv
397.806 142.128 397.726 142.212 397.622 142.359 cv
397.518 142.507 397.459 142.619 397.447 142.698 cv
397.434 142.778 397.413 142.957 397.382 143.235 cv
397.35 143.514 397.333 143.753 397.331 143.954 cv
397.328 144.154 397.322 144.478 397.314 144.925 cv
397.3 145.182 397.297 145.381 397.305 145.526 cv
397.275 146.678 397.292 147.757 397.358 148.761 cv
397.424 149.768 397.499 150.524 397.583 151.034 cv
397.667 151.542 397.735 152.002 397.785 152.415 cv
397.834 152.826 397.826 153.129 397.759 153.326 cv
397.692 153.523 397.542 153.696 397.311 153.843 cv
396.929 154.079 396.645 154.16 396.456 154.084 cv
396.268 154.011 396.074 153.745 395.875 153.285 cv
395.632 152.726 395.509 151.598 395.506 149.9 cv
395.498 148.857 395.433 147.413 395.308 145.562 cv
395.184 143.713 395.084 142.747 395.009 142.662 cv
394.995 142.628 394.62 142.682 393.883 142.817 cv
393.147 142.954 392.462 143.1 391.829 143.259 cv
391.292 143.389 390.941 143.451 390.773 143.441 cv
390.605 143.432 390.454 143.352 390.317 143.201 cv
390.091 142.948 389.928 142.538 389.831 141.971 cv
389.736 141.358 389.815 140.937 390.068 140.71 cv
390.32 140.484 390.806 140.39 391.525 140.43 cv
392.068 140.458 392.89 140.371 393.992 140.168 cv
395.091 139.962 396.069 139.811 396.924 139.713 cv
cp
f
415.006 146.102 mo
414.241 145.042 li
412.555 144.792 li
411.746 144.688 410.963 144.702 410.208 144.833 cv
409.453 144.963 408.797 145.186 408.241 145.5 cv
407.685 145.814 407.202 146.211 406.791 146.692 cv
406.379 147.173 406.119 147.706 406.008 148.287 cv
405.898 148.869 405.908 149.484 406.038 150.135 cv
406.262 151.026 406.75 151.853 407.501 152.621 cv
408.253 153.387 409.009 153.826 409.769 153.938 cv
410.529 154.051 411.286 154.018 412.041 153.838 cv
412.794 153.659 413.414 153.355 413.898 152.925 cv
415.119 151.892 415.823 150.792 416.012 149.623 cv
416.202 148.455 415.866 147.28 415.006 146.102 cv
cp
410.165 142.425 mo
410.572 142.291 411.148 142.227 411.891 142.231 cv
412.634 142.236 413.222 142.31 413.653 142.455 cv
414.302 142.665 414.907 143.058 415.468 143.635 cv
416.03 144.211 416.484 144.885 416.831 145.656 cv
417.177 146.427 417.435 147.253 417.604 148.135 cv
417.772 149.018 417.796 149.863 417.677 150.669 cv
417.558 151.477 417.311 152.217 416.936 152.889 cv
416.276 153.956 415.617 154.719 414.959 155.18 cv
414.3 155.64 413.321 156.001 412.021 156.261 cv
411.085 156.462 410.23 156.477 409.455 156.306 cv
408.679 156.133 407.889 155.763 407.084 155.19 cv
405.709 154.21 404.785 152.836 404.311 151.068 cv
403.836 149.299 403.934 147.576 404.604 145.894 cv
405.372 143.988 406.203 142.744 407.097 142.164 cv
407.472 141.928 407.787 141.789 408.044 141.746 cv
408.301 141.703 408.491 141.736 408.613 141.843 cv
408.734 141.95 408.868 142.062 409.011 142.182 cv
409.156 142.299 409.303 142.394 409.455 142.465 cv
409.606 142.536 409.842 142.522 410.165 142.425 cv
cp
f
424.344 142.718 mo
425.238 142.207 425.955 142.093 426.497 142.376 cv
427.038 142.661 427.572 143.425 428.101 144.667 cv
428.42 145.401 428.581 145.94 428.582 146.285 cv
428.582 146.63 428.424 146.881 428.108 147.036 cv
427.846 147.172 427.562 147.121 427.256 146.885 cv
426.95 146.647 426.686 146.273 426.461 145.759 cv
426.238 145.247 425.966 144.968 425.647 144.927 cv
425.329 144.883 424.859 145.06 424.24 145.457 cv
423.597 145.879 423.05 146.367 422.6 146.918 cv
422.148 147.469 421.652 148.264 421.111 149.303 cv
420.493 150.457 420.112 151.369 419.97 152.043 cv
419.827 152.715 419.892 153.274 420.167 153.717 cv
420.368 154.043 420.587 154.264 420.824 154.377 cv
421.06 154.491 421.624 154.645 422.515 154.839 cv
423.69 155.084 424.621 155.148 425.306 155.03 cv
425.991 154.913 426.534 154.597 426.935 154.084 cv
427.325 153.617 427.446 153.295 427.298 153.122 cv
427.151 152.947 426.699 152.894 425.943 152.961 cv
425.187 153.028 424.7 153.144 424.48 153.305 cv
424.084 153.591 423.712 153.531 423.363 153.128 cv
423.015 152.726 422.911 152.228 423.05 151.636 cv
423.12 151.341 423.411 151.118 423.923 150.967 cv
424.436 150.817 425.362 150.687 426.704 150.577 cv
427.324 150.526 427.837 150.51 428.243 150.534 cv
428.649 150.556 428.988 150.635 429.259 150.774 cv
429.531 150.912 429.708 151.097 429.793 151.331 cv
429.877 151.564 429.89 151.894 429.833 152.315 cv
429.773 152.737 429.644 153.215 429.443 153.752 cv
429.243 154.288 428.966 154.951 428.616 155.738 cv
428.283 156.449 428.176 156.901 428.295 157.093 cv
428.45 157.343 428.431 157.775 428.236 158.386 cv
428.042 158.999 427.801 159.394 427.512 159.572 cv
427.166 159.786 426.922 159.876 426.783 159.843 cv
426.642 159.81 426.468 159.555 426.26 159.078 cv
426.052 158.602 425.952 158.208 425.96 157.897 cv
425.952 157.584 425.822 157.385 425.571 157.301 cv
425.319 157.215 424.894 157.226 424.293 157.331 cv
423.728 157.428 422.864 157.331 421.699 157.038 cv
420.92 156.854 420.395 156.697 420.122 156.566 cv
419.848 156.437 419.556 156.195 419.245 155.841 cv
418.709 155.255 418.385 154.677 418.273 154.108 cv
418.162 153.538 418.203 152.702 418.399 151.597 cv
418.518 150.886 418.659 150.287 418.824 149.799 cv
418.988 149.312 419.138 148.972 419.273 148.783 cv
419.409 148.593 419.542 148.39 419.676 148.177 cv
419.809 147.96 419.903 147.735 419.958 147.502 cv
420.105 146.879 420.983 145.739 422.592 144.08 cv
423.036 143.593 423.62 143.14 424.344 142.718 cv
cp
f
439.17 150.161 mo
438.944 149.768 438.739 149.491 438.555 149.331 cv
438.372 149.17 438.112 149.037 437.777 148.928 cv
437.472 148.83 437.234 148.761 437.062 148.722 cv
436.889 148.684 436.717 148.67 436.546 148.682 cv
436.374 148.693 436.241 148.727 436.148 148.78 cv
436.055 148.834 435.956 148.945 435.851 149.113 cv
435.747 149.281 435.657 149.467 435.583 149.669 cv
435.509 149.874 435.413 150.158 435.295 150.523 cv
435.143 150.995 435.036 151.364 434.975 151.629 cv
434.915 151.896 434.885 152.114 434.89 152.283 cv
434.894 152.453 434.947 152.551 435.048 152.574 cv
435.15 152.6 435.294 152.607 435.481 152.6 cv
436.876 152.42 li
437.559 152.338 438.172 152.195 438.716 151.994 cv
439.261 151.792 439.563 151.598 439.622 151.416 cv
439.681 151.233 439.53 150.815 439.17 150.161 cv
cp
437.106 146.088 mo
439.305 146.413 440.744 147.71 441.422 149.98 cv
441.589 150.505 441.667 150.913 441.658 151.204 cv
441.648 151.495 441.549 151.929 441.362 152.507 cv
441.161 153.131 440.998 153.52 440.873 153.673 cv
440.748 153.827 440.468 153.976 440.034 154.121 cv
439.54 154.297 439.19 154.392 438.986 154.401 cv
438.781 154.411 438.417 154.524 437.892 154.741 cv
436.993 155.106 li
437.774 156.746 li
438.3 157.824 438.776 158.642 439.201 159.199 cv
439.462 159.536 439.659 159.747 439.792 159.832 cv
439.923 159.917 440.098 159.935 440.315 159.887 cv
440.644 159.808 440.915 159.853 441.129 160.024 cv
441.261 160.133 441.325 160.263 441.318 160.413 cv
441.312 160.562 441.222 160.828 441.049 161.208 cv
440.781 161.778 440.545 162.118 440.341 162.228 cv
440.137 162.339 439.756 162.346 439.199 162.25 cv
438.769 162.179 438.452 162.026 438.25 161.792 cv
438.047 161.56 437.612 160.864 436.944 159.706 cv
435.56 157.275 434.649 155.93 434.212 155.67 cv
433.943 155.518 433.721 155.63 433.547 156.011 cv
433.498 156.113 433.446 156.247 433.392 156.416 cv
433.234 156.902 433.121 157.383 433.052 157.856 cv
432.983 158.33 432.947 158.675 432.944 158.894 cv
432.941 159.111 432.89 159.308 432.791 159.487 cv
432.69 159.665 432.515 159.806 432.263 159.909 cv
431.9 160.043 431.576 160.07 431.292 159.986 cv
431.008 159.903 430.873 159.737 430.885 159.489 cv
430.884 159.336 430.869 159.16 430.842 158.958 cv
430.815 158.757 430.811 158.574 430.83 158.412 cv
430.848 158.25 430.929 157.88 431.074 157.305 cv
431.217 156.73 431.447 155.956 431.762 154.98 cv
432.386 153.046 432.747 151.789 432.842 151.206 cv
432.938 150.622 432.838 150.217 432.543 149.987 cv
432.303 149.792 432.144 149.53 432.065 149.202 cv
431.986 148.874 432.005 148.526 432.124 148.161 cv
432.266 147.72 432.959 147.238 434.205 146.715 cv
435.45 146.192 436.417 145.983 437.106 146.088 cv
cp
f
450.642 155.049 mo
450.297 154.58 450.04 154.323 449.868 154.279 cv
449.696 154.233 449.313 154.324 448.72 154.547 cv
448.246 154.734 447.831 155 447.473 155.346 cv
447.115 155.693 446.713 156.241 446.267 156.993 cv
446.017 157.392 445.996 157.677 446.203 157.848 cv
446.424 158.025 447.16 158.275 448.412 158.596 cv
450.454 159.121 li
450.805 158.072 li
451.051 157.343 451.162 156.757 451.135 156.314 cv
451.109 155.872 450.945 155.449 450.642 155.049 cv
cp
449.328 152.177 mo
449.845 152.095 450.266 152.133 450.59 152.292 cv
450.914 152.451 451.354 152.843 451.911 153.468 cv
452.273 153.894 452.53 154.301 452.681 154.69 cv
452.833 155.081 452.89 155.627 452.853 156.33 cv
452.816 157.032 452.69 157.836 452.475 158.742 cv
452.26 159.65 451.918 160.905 451.451 162.512 cv
450.265 166.486 li
450.186 166.766 450.089 166.958 449.975 167.069 cv
449.861 167.177 449.681 167.259 449.434 167.314 cv
449.193 167.353 449.019 167.356 448.913 167.32 cv
448.806 167.285 448.708 167.189 448.616 167.03 cv
448.441 166.699 448.387 166.28 448.457 165.772 cv
448.526 165.266 448.741 164.488 449.1 163.442 cv
449.568 162.129 449.771 161.401 449.71 161.254 cv
449.674 161.171 449.419 161.075 448.946 160.968 cv
448.471 160.859 447.903 160.735 447.244 160.594 cv
446.583 160.454 446.091 160.318 445.765 160.184 cv
445.247 159.972 444.932 159.938 444.821 160.083 cv
444.754 160.16 444.354 160.865 443.619 162.197 cv
442.883 163.53 442.403 164.28 442.179 164.448 cv
441.943 164.645 441.7 164.688 441.452 164.578 cv
441.203 164.467 441.011 164.238 440.877 163.889 cv
440.805 163.686 440.78 163.503 440.804 163.341 cv
440.827 163.177 440.926 162.946 441.101 162.644 cv
441.276 162.345 441.486 162.01 441.731 161.645 cv
441.976 161.278 442.328 160.684 442.786 159.859 cv
443.244 159.036 443.722 158.121 444.221 157.114 cv
445.027 155.44 445.634 154.43 446.043 154.087 cv
446.451 153.744 446.683 153.507 446.738 153.374 cv
446.81 153.196 447.143 152.974 447.737 152.706 cv
448.33 152.439 448.86 152.263 449.328 152.177 cv
cp
f
450.82 166.299 mo
450.958 166.028 451.316 165.654 451.893 165.177 cv
452.47 164.699 452.795 164.389 452.869 164.248 cv
452.985 164.02 453.263 163.72 453.704 163.354 cv
454.208 162.928 454.922 162.045 455.844 160.702 cv
456.766 159.358 457.388 158.302 457.711 157.533 cv
458.063 156.635 458.412 156.094 458.757 155.912 cv
459.512 155.526 459.964 155.784 460.113 156.687 cv
460.213 157.368 460.1 158.308 459.774 159.505 cv
459.633 159.956 459.461 160.923 459.257 162.41 cv
459.052 163.896 458.928 164.736 458.883 164.929 cv
458.846 165.108 458.832 165.268 458.841 165.407 cv
458.851 165.545 458.884 165.63 458.94 165.659 cv
459.04 165.71 459.334 165.47 459.823 164.939 cv
460.311 164.406 461.25 163.292 462.641 161.595 cv
463.778 160.219 464.523 159.37 464.877 159.046 cv
465.23 158.726 465.59 158.576 465.955 158.602 cv
466.433 158.649 466.701 158.778 466.756 158.985 cv
466.832 159.257 466.662 160.168 466.246 161.717 cv
466.015 162.624 465.828 163.461 465.685 164.234 cv
465.541 165.005 465.444 165.571 465.394 165.932 cv
465.344 166.293 465.297 166.534 465.253 166.656 cv
465.188 166.784 465.17 167.054 465.202 167.465 cv
465.234 167.877 465.195 168.19 465.085 168.403 cv
464.976 168.617 464.928 169.033 464.944 169.653 cv
464.959 170.272 464.923 170.667 464.836 170.838 cv
464.712 171.08 464.687 171.427 464.761 171.878 cv
464.843 172.279 464.792 172.685 464.61 173.094 cv
464.427 173.504 464.177 173.816 463.86 174.031 cv
463.543 174.247 463.249 174.286 462.979 174.146 cv
462.694 174 462.585 173.343 462.655 172.173 cv
462.723 171.004 462.883 169.63 463.135 168.051 cv
463.387 166.474 463.521 165.562 463.538 165.318 cv
463.571 164.795 463.654 164.406 463.786 164.151 cv
463.917 163.894 463.947 163.748 463.875 163.711 cv
463.748 163.646 463.448 163.878 462.978 164.411 cv
462.747 164.652 462.428 164.993 462.023 165.432 cv
461.618 165.872 461.295 166.224 461.052 166.486 cv
460.81 166.748 460.542 167.06 460.249 167.421 cv
459.956 167.784 459.707 168.111 459.504 168.402 cv
458.328 170.171 457.407 170.987 456.743 170.843 cv
456.393 170.754 456.185 170.387 456.121 169.742 cv
456.075 169.305 456.211 168.32 456.531 166.784 cv
456.849 165.249 457.018 164.324 457.036 164.009 cv
457.062 163.501 457.128 163.144 457.234 162.937 cv
457.339 162.731 457.343 162.603 457.243 162.551 cv
457.171 162.516 456.666 163.02 455.725 164.066 cv
454.785 165.113 453.919 166.126 453.13 167.104 cv
452.681 167.666 452.3 168.042 451.987 168.232 cv
451.673 168.42 451.389 168.451 451.132 168.32 cv
450.876 168.188 450.714 167.909 450.647 167.478 cv
450.58 167.049 450.637 166.655 450.82 166.299 cv
cp
f
464.858 173.516 mo
465.023 173.26 465.417 172.925 466.041 172.509 cv
466.663 172.093 467.019 171.819 467.106 171.684 cv
467.245 171.469 467.553 171.203 468.029 170.881 cv
468.574 170.511 469.375 169.705 470.43 168.465 cv
471.484 167.222 472.211 166.234 472.611 165.502 cv
473.054 164.645 473.456 164.144 473.819 163.997 cv
474.609 163.69 475.032 163.994 475.087 164.908 cv
475.117 165.594 474.909 166.518 474.461 167.677 cv
474.275 168.11 474.004 169.054 473.649 170.512 cv
473.293 171.97 473.083 172.792 473.019 172.979 cv
472.963 173.154 472.933 173.31 472.928 173.451 cv
472.923 173.589 472.947 173.677 473.001 173.711 cv
473.095 173.773 473.412 173.564 473.952 173.085 cv
474.493 172.605 475.541 171.594 477.098 170.049 cv
478.371 168.795 479.199 168.028 479.584 167.743 cv
479.969 167.458 480.342 167.348 480.702 167.41 cv
481.173 167.507 481.426 167.662 481.46 167.874 cv
481.507 168.153 481.245 169.041 480.672 170.539 cv
480.35 171.417 480.078 172.232 479.855 172.985 cv
479.633 173.738 479.479 174.292 479.393 174.645 cv
479.306 174.999 479.234 175.233 479.178 175.35 cv
479.1 175.47 479.055 175.737 479.044 176.15 cv
479.034 176.563 478.963 176.87 478.832 177.071 cv
478.702 177.273 478.612 177.682 478.564 178.299 cv
478.515 178.917 478.439 179.305 478.334 179.467 cv
478.186 179.695 478.125 180.039 478.154 180.495 cv
478.194 180.902 478.102 181.301 477.878 181.689 cv
477.654 182.078 477.374 182.363 477.036 182.544 cv
476.699 182.726 476.403 182.734 476.148 182.568 cv
475.879 182.394 475.839 181.728 476.028 180.574 cv
476.216 179.417 476.516 178.066 476.929 176.522 cv
477.34 174.976 477.568 174.085 477.609 173.843 cv
477.696 173.328 477.818 172.95 477.975 172.708 cv
478.132 172.467 478.177 172.324 478.11 172.28 cv
477.989 172.202 477.667 172.403 477.145 172.885 cv
476.89 173.102 476.539 173.406 476.091 173.802 cv
475.643 174.198 475.285 174.513 475.017 174.75 cv
474.749 174.986 474.451 175.269 474.122 175.6 cv
473.792 175.929 473.512 176.228 473.28 176.499 cv
471.928 178.137 470.929 178.853 470.283 178.642 cv
469.944 178.518 469.775 178.133 469.777 177.484 cv
469.776 177.045 470.013 176.079 470.489 174.584 cv
470.963 173.088 471.226 172.186 471.275 171.875 cv
471.354 171.373 471.456 171.024 471.583 170.83 cv
471.709 170.635 471.725 170.507 471.631 170.447 cv
471.564 170.402 471.009 170.853 469.966 171.797 cv
468.923 172.741 467.958 173.661 467.073 174.554 cv
466.569 175.066 466.151 175.4 465.82 175.558 cv
465.489 175.713 465.203 175.713 464.961 175.558 cv
464.72 175.401 464.587 175.105 464.565 174.67 cv
464.542 174.236 464.639 173.85 464.858 173.516 cv
cp
f
489.145 177.658 mo
488.94 177.114 488.761 176.796 488.608 176.708 cv
488.454 176.618 488.062 176.602 487.43 176.657 cv
486.923 176.708 486.451 176.852 486.013 177.091 cv
485.575 177.327 485.041 177.747 484.409 178.35 cv
484.06 178.667 483.962 178.935 484.115 179.156 cv
484.281 179.385 484.922 179.825 486.041 180.474 cv
487.865 181.528 li
488.486 180.614 li
488.92 179.977 489.185 179.444 489.279 179.009 cv
489.374 178.577 489.329 178.126 489.145 177.658 cv
cp
488.655 174.539 mo
489.175 174.598 489.57 174.75 489.839 174.99 cv
490.109 175.229 490.427 175.726 490.794 176.478 cv
491.028 176.985 491.165 177.448 491.206 177.864 cv
491.246 178.281 491.153 178.822 490.929 179.489 cv
490.704 180.155 490.366 180.895 489.914 181.71 cv
489.461 182.525 488.793 183.642 487.911 185.063 cv
485.696 188.57 li
485.544 188.816 485.399 188.977 485.26 189.052 cv
485.121 189.126 484.925 189.157 484.672 189.142 cv
484.429 189.115 484.261 189.071 484.168 189.007 cv
484.075 188.946 484.006 188.825 483.961 188.649 cv
483.881 188.282 483.943 187.864 484.147 187.394 cv
484.351 186.925 484.767 186.234 485.395 185.324 cv
486.2 184.186 486.592 183.54 486.573 183.381 cv
486.562 183.292 486.342 183.13 485.915 182.899 cv
485.486 182.667 484.974 182.395 484.376 182.082 cv
483.779 181.768 483.341 181.503 483.064 181.287 cv
482.622 180.943 482.328 180.826 482.181 180.934 cv
482.097 180.992 481.521 181.561 480.454 182.645 cv
479.385 183.73 478.721 184.323 478.46 184.425 cv
478.179 184.551 477.934 184.527 477.724 184.353 cv
477.514 184.179 477.392 183.908 477.357 183.535 cv
477.342 183.322 477.368 183.137 477.435 182.987 cv
477.501 182.836 477.66 182.64 477.909 182.397 cv
478.158 182.156 478.45 181.892 478.785 181.605 cv
479.12 181.318 479.619 180.839 480.282 180.169 cv
480.946 179.5 481.654 178.75 482.405 177.914 cv
483.633 176.519 484.491 175.711 484.977 175.491 cv
485.462 175.271 485.75 175.104 485.838 174.991 cv
485.956 174.839 486.336 174.715 486.98 174.619 cv
487.624 174.521 488.181 174.494 488.655 174.539 cv
cp
f
141.655 124.736 mo
141.575 124.599 141.674 124.363 141.953 124.033 cv
142.138 123.813 142.272 123.691 142.355 123.666 cv
142.439 123.643 142.558 123.695 142.714 123.828 cv
143.371 124.333 144.789 125.518 146.968 127.383 cv
149.147 129.247 150.479 130.414 150.961 130.884 cv
151.612 131.508 152.005 131.969 152.141 132.264 cv
152.278 132.559 152.237 132.835 152.021 133.092 cv
151.905 133.229 151.781 133.298 151.649 133.296 cv
151.517 133.295 151.357 133.271 151.17 133.223 cv
150.983 133.175 150.814 133.166 150.664 133.196 cv
150.437 133.241 150.278 133.225 150.186 133.147 cv
150.103 133.078 149.813 132.975 149.316 132.84 cv
148.82 132.704 148.237 132.543 147.57 132.358 cv
146.901 132.172 146.392 132.011 146.039 131.869 cv
145.547 131.691 145.065 131.537 144.594 131.407 cv
144.123 131.277 143.868 131.236 143.83 131.281 cv
143.806 131.309 143.974 131.501 144.332 131.857 cv
144.691 132.215 145.137 132.672 145.67 133.23 cv
146.205 133.79 146.613 134.282 146.897 134.708 cv
147.033 134.901 147.19 135.12 147.369 135.364 cv
147.547 135.608 147.673 135.781 147.746 135.881 cv
147.818 135.981 147.892 136.098 147.968 136.232 cv
148.042 136.366 148.086 136.481 148.099 136.579 cv
148.112 136.676 148.111 136.788 148.096 136.918 cv
148.066 137.159 148.017 137.302 147.948 137.346 cv
147.88 137.39 147.7 137.407 147.41 137.398 cv
147.052 137.396 146.753 137.313 146.513 137.149 cv
146.274 136.988 146.116 136.765 146.041 136.481 cv
145.976 136.224 145.689 135.715 145.181 134.959 cv
144.838 134.436 144.494 134.001 144.149 133.655 cv
143.804 133.311 143.094 132.686 142.02 131.782 cv
139.624 129.766 li
139.789 129.317 li
139.857 129.124 139.938 128.996 140.031 128.933 cv
140.123 128.869 140.288 128.827 140.524 128.807 cv
140.895 128.758 141.163 128.803 141.328 128.942 cv
141.42 129.02 141.575 129.091 141.793 129.156 cv
142.013 129.224 142.304 129.305 142.67 129.4 cv
143.037 129.497 143.315 129.57 143.508 129.623 cv
146.603 130.557 li
147.514 130.853 148.087 131.029 148.322 131.085 cv
148.557 131.142 148.697 131.143 148.744 131.088 cv
148.805 131.014 148.745 130.854 148.561 130.604 cv
148.323 130.311 147.402 129.473 145.796 128.09 cv
144.191 126.709 143.144 125.852 142.655 125.519 cv
142.069 125.135 141.736 124.874 141.655 124.736 cv
cp
f
149.964 119.205 mo
149.975 118.942 150.048 118.752 150.184 118.635 cv
150.312 118.523 150.546 118.508 150.89 118.584 cv
151.233 118.659 151.471 118.774 151.604 118.93 cv
151.683 119.021 151.842 119.168 152.083 119.372 cv
152.323 119.578 152.709 119.901 153.243 120.344 cv
153.776 120.787 154.307 121.242 154.834 121.705 cv
155.426 122.226 156.107 122.762 156.879 123.316 cv
157.652 123.871 158.21 124.229 158.556 124.389 cv
159.298 124.717 159.786 125.135 160.021 125.646 cv
160.206 126.024 160.109 126.243 159.73 126.301 cv
159.343 126.365 158.834 126.25 158.206 125.953 cv
157.576 125.655 157.03 125.358 156.567 125.061 cv
156.104 124.764 155.849 124.634 155.804 124.673 cv
155.777 124.697 155.783 124.778 155.825 124.918 cv
155.866 125.057 155.927 125.313 156.011 125.684 cv
156.094 126.056 156.149 126.468 156.175 126.921 cv
156.194 127.365 156.181 127.689 156.136 127.895 cv
156.091 128.101 155.985 128.298 155.818 128.49 cv
155.444 128.956 155.062 129.266 154.671 129.421 cv
154.282 129.576 153.8 129.614 153.227 129.538 cv
152.689 129.448 152.179 129.274 151.696 129.018 cv
151.212 128.761 150.808 128.485 150.48 128.188 cv
150.153 127.893 149.695 127.486 149.108 126.972 cv
148.52 126.456 147.968 126.01 147.452 125.632 cv
146.838 125.179 146.477 124.889 146.366 124.761 cv
146.256 124.634 146.201 124.459 146.201 124.238 cv
146.207 123.805 146.374 123.558 146.702 123.497 cv
147.03 123.436 147.448 123.581 147.959 123.933 cv
148.259 124.134 148.948 124.744 150.026 125.763 cv
151.104 126.781 151.773 127.378 152.033 127.549 cv
152.39 127.78 152.75 127.897 153.111 127.902 cv
153.473 127.908 153.776 127.805 154.021 127.593 cv
154.266 127.381 154.391 127.04 154.395 126.566 cv
154.401 126.096 154.282 125.361 154.04 124.365 cv
153.845 123.534 153.599 122.919 153.3 122.518 cv
153.002 122.117 152.453 121.637 151.651 121.076 cv
150.995 120.629 150.547 120.271 150.307 120.002 cv
150.067 119.733 149.953 119.468 149.964 119.205 cv
cp
f
162.669 114.479 mo
161.722 114.223 li
160.623 114.874 li
160.102 115.196 159.652 115.573 159.274 116.007 cv
158.896 116.438 158.619 116.879 158.443 117.324 cv
158.267 117.769 158.173 118.229 158.161 118.703 cv
158.149 119.178 158.249 119.611 158.458 120.002 cv
158.669 120.393 158.965 120.747 159.349 121.064 cv
159.9 121.479 160.575 121.73 161.375 121.822 cv
162.175 121.913 162.823 121.812 163.319 121.519 cv
163.814 121.227 164.241 120.849 164.594 120.388 cv
164.949 119.927 165.167 119.457 165.246 118.979 cv
165.47 117.801 165.36 116.826 164.918 116.056 cv
164.477 115.285 163.727 114.76 162.669 114.479 cv
cp
158.111 114.623 mo
158.286 114.353 158.591 114.044 159.027 113.695 cv
159.461 113.348 159.839 113.113 160.16 112.994 cv
160.635 112.811 161.174 112.753 161.773 112.824 cv
162.373 112.895 162.955 113.072 163.522 113.358 cv
164.088 113.644 164.628 114.004 165.143 114.438 cv
165.658 114.872 166.072 115.354 166.382 115.88 cv
166.694 116.406 166.9 116.954 166.999 117.522 cv
167.119 118.456 167.095 119.212 166.929 119.791 cv
166.763 120.371 166.363 121.043 165.728 121.81 cv
165.278 122.368 164.787 122.781 164.254 123.047 cv
163.721 123.313 163.085 123.469 162.346 123.516 cv
161.082 123.595 159.894 123.23 158.783 122.424 cv
157.671 121.617 156.914 120.566 156.511 119.271 cv
156.057 117.797 155.954 116.681 156.202 115.92 cv
156.309 115.606 156.426 115.376 156.556 115.229 cv
156.686 115.083 156.811 115.013 156.933 115.018 cv
157.054 115.022 157.185 115.024 157.325 115.025 cv
157.464 115.026 157.595 115.013 157.717 114.982 cv
157.838 114.952 157.97 114.832 158.111 114.623 cv
cp
f
171.574 116.544 mo
171.531 116.433 170.874 115.801 169.604 114.653 cv
168.335 113.505 167.677 112.869 167.629 112.746 cv
167.589 112.645 167.309 112.419 166.787 112.068 cv
165.702 111.33 165.18 110.697 165.219 110.167 cv
165.226 109.92 165.375 109.739 165.666 109.627 cv
165.844 109.558 166.009 109.532 166.158 109.552 cv
166.307 109.571 166.45 109.632 166.585 109.733 cv
166.721 109.835 166.842 109.939 166.948 110.046 cv
167.054 110.153 167.191 110.299 167.36 110.485 cv
167.529 110.671 167.672 110.817 167.792 110.926 cv
168.252 111.352 168.634 111.712 168.935 112.008 cv
169.236 112.303 169.431 112.497 169.52 112.592 cv
169.607 112.687 169.687 112.769 169.759 112.837 cv
169.831 112.905 169.927 112.98 170.049 113.062 cv
170.14 113.13 170.388 113.355 170.794 113.738 cv
171.2 114.121 171.57 114.454 171.905 114.736 cv
172.24 115.018 172.435 115.131 172.491 115.077 cv
172.548 115.023 172.533 114.771 172.45 114.321 cv
172.364 113.871 172.255 113.332 172.12 112.702 cv
171.985 112.072 171.9 111.61 171.862 111.315 cv
171.814 110.794 171.559 109.921 171.097 108.697 cv
170.812 107.895 170.639 107.365 170.579 107.112 cv
170.519 106.858 170.539 106.66 170.638 106.52 cv
170.825 106.203 171.019 106.073 171.221 106.129 cv
171.423 106.186 171.71 106.444 172.082 106.906 cv
172.386 107.29 172.513 107.568 172.464 107.742 cv
172.438 107.842 172.518 108.204 172.702 108.827 cv
172.886 109.451 173.094 110.159 173.323 110.951 cv
173.553 111.744 173.688 112.324 173.73 112.696 cv
173.788 113.176 173.969 113.877 174.276 114.801 cv
174.583 115.724 174.849 116.551 175.074 117.28 cv
175.3 118.011 175.374 118.475 175.295 118.672 cv
175.202 118.928 175.093 119.079 174.97 119.126 cv
174.791 119.195 174.525 119.1 174.172 118.838 cv
173.82 118.575 173.424 118.236 172.986 117.82 cv
172.548 117.405 172.251 117.145 172.093 117.037 cv
171.794 116.832 171.622 116.667 171.574 116.544 cv
cp
f
178.697 107.497 mo
178.284 107.361 178.013 107.316 177.889 107.363 cv
177.765 107.412 177.571 107.633 177.306 108.028 cv
177.097 108.348 176.959 108.691 176.892 109.059 cv
176.824 109.426 176.817 109.937 176.872 110.589 cv
176.893 110.942 177.003 111.125 177.205 111.14 cv
177.417 111.151 177.976 110.983 178.88 110.636 cv
180.355 110.066 li
180.113 109.272 li
179.946 108.721 179.758 108.314 179.549 108.055 cv
179.341 107.796 179.057 107.61 178.697 107.497 cv
cp
176.645 106.315 mo
176.925 106.04 177.199 105.881 177.466 105.836 cv
177.733 105.792 178.172 105.84 178.784 105.979 cv
179.19 106.081 179.525 106.219 179.788 106.392 cv
180.049 106.563 180.322 106.873 180.606 107.317 cv
180.889 107.763 181.163 108.309 181.425 108.955 cv
181.688 109.603 182.026 110.519 182.44 111.703 cv
183.446 114.646 li
183.52 114.852 183.545 115.013 183.522 115.129 cv
183.5 115.244 183.426 115.373 183.299 115.514 cv
183.169 115.643 183.064 115.721 182.983 115.745 cv
182.903 115.77 182.801 115.755 182.676 115.697 cv
182.425 115.571 182.209 115.338 182.031 114.998 cv
181.853 114.658 181.646 114.09 181.409 113.295 cv
181.124 112.289 180.93 111.756 180.83 111.693 cv
180.772 111.658 180.575 111.71 180.238 111.851 cv
179.901 111.991 179.5 112.163 179.036 112.363 cv
178.573 112.565 178.211 112.696 177.955 112.757 cv
177.546 112.854 177.339 112.97 177.334 113.106 cv
177.327 113.182 177.389 113.787 177.52 114.921 cv
177.65 116.055 177.685 116.723 177.62 116.922 cv
177.562 117.146 177.432 117.277 177.233 117.318 cv
177.033 117.358 176.816 117.302 176.583 117.147 cv
176.45 117.056 176.355 116.954 176.299 116.845 cv
176.242 116.734 176.202 116.55 176.178 116.29 cv
176.154 116.031 176.136 115.735 176.126 115.404 cv
176.117 115.075 176.073 114.558 175.994 113.855 cv
175.915 113.152 175.809 112.386 175.675 111.555 cv
175.438 110.181 175.371 109.3 175.471 108.912 cv
175.571 108.525 175.608 108.278 175.583 108.174 cv
175.551 108.033 175.657 107.753 175.903 107.331 cv
176.149 106.91 176.397 106.572 176.645 106.315 cv
cp
f
193.066 105.402 mo
193.396 105.059 194.064 104.735 195.071 104.433 cv
196.079 104.131 197.134 103.99 198.238 104.011 cv
198.887 104.021 199.309 104.052 199.504 104.104 cv
199.7 104.156 199.959 104.316 200.281 104.586 cv
200.605 104.843 200.796 105.032 200.855 105.155 cv
200.915 105.279 200.925 105.502 200.884 105.824 cv
200.826 106.241 200.7 106.479 200.505 106.535 cv
200.31 106.591 199.979 106.475 199.514 106.187 cv
199.246 106.017 199.008 105.908 198.801 105.861 cv
198.592 105.814 198.253 105.803 197.784 105.826 cv
197.17 105.842 196.568 105.943 195.975 106.129 cv
195.382 106.314 194.932 106.492 194.623 106.663 cv
194.313 106.834 194.138 106.959 194.099 107.041 cv
194.056 107.159 194.342 107.379 194.957 107.699 cv
195.571 108.02 196.116 108.222 196.592 108.307 cv
197.473 108.472 198.112 108.82 198.511 109.352 cv
198.911 109.883 199.086 110.621 199.037 111.568 cv
199.007 112.144 198.96 112.514 198.898 112.679 cv
198.835 112.844 198.659 113.063 198.369 113.337 cv
197.434 114.214 196.253 114.627 194.826 114.577 cv
194.082 114.551 193.488 114.43 193.042 114.215 cv
192.597 113.999 192.154 113.616 191.714 113.064 cv
191.386 112.663 191.223 112.317 191.227 112.029 cv
191.229 111.741 191.4 111.469 191.737 111.208 cv
191.988 111.018 192.192 110.953 192.352 111.016 cv
192.511 111.078 192.601 111.254 192.621 111.543 cv
192.648 112.193 193.087 112.637 193.94 112.873 cv
194.485 113.021 194.993 113.033 195.462 112.907 cv
195.931 112.781 196.448 112.486 197.012 112.022 cv
197.489 111.639 197.603 111.254 197.352 110.869 cv
197.102 110.483 196.526 110.159 195.626 109.896 cv
194.845 109.676 194.137 109.356 193.504 108.939 cv
192.871 108.521 192.498 108.137 192.384 107.782 cv
192.241 107.294 192.22 106.878 192.322 106.535 cv
192.424 106.192 192.671 105.813 193.066 105.402 cv
cp
f
208.185 105.461 mo
208.599 105.483 209.024 105.504 209.463 105.525 cv
209.901 105.547 210.224 105.563 210.431 105.573 cv
210.638 105.585 210.874 105.605 211.137 105.635 cv
211.401 105.665 211.675 105.707 211.958 105.76 cv
212.391 105.859 212.658 105.943 212.759 106.01 cv
212.862 106.076 212.924 106.217 212.949 106.432 cv
212.998 106.751 212.949 107.152 212.8 107.635 cv
212.698 107.969 212.612 108.168 212.542 108.231 cv
212.472 108.296 212.329 108.315 212.113 108.29 cv
211.801 108.255 211.566 108.126 211.408 107.904 cv
211.318 107.761 211.187 107.66 211.016 107.603 cv
210.844 107.544 210.531 107.487 210.076 107.431 cv
210.003 107.427 209.901 107.415 209.77 107.397 cv
209.519 107.364 209.343 107.339 209.243 107.322 cv
209.142 107.305 209.016 107.304 208.865 107.318 cv
208.713 107.332 208.615 107.344 208.571 107.352 cv
208.525 107.359 208.455 107.412 208.359 107.506 cv
208.264 107.602 208.206 107.678 208.187 107.733 cv
208.167 107.791 208.128 107.921 208.069 108.123 cv
208.01 108.324 207.966 108.5 207.939 108.646 cv
207.911 108.795 207.865 109.033 207.802 109.363 cv
207.758 109.551 207.73 109.697 207.717 109.806 cv
207.547 110.653 207.42 111.452 207.339 112.203 cv
207.258 112.953 207.216 113.522 207.213 113.91 cv
207.21 114.298 207.2 114.646 207.184 114.956 cv
207.168 115.268 207.122 115.49 207.048 115.627 cv
206.973 115.764 206.84 115.871 206.649 115.951 cv
206.337 116.076 206.117 116.099 205.987 116.02 cv
205.858 115.94 205.749 115.718 205.661 115.354 cv
205.554 114.91 205.608 114.061 205.825 112.805 cv
205.953 112.033 206.091 110.957 206.238 109.575 cv
206.384 108.192 206.435 107.465 206.39 107.393 cv
206.384 107.367 206.1 107.357 205.538 107.362 cv
204.977 107.369 204.452 107.389 203.963 107.424 cv
203.55 107.452 203.283 107.451 203.159 107.423 cv
203.037 107.395 202.935 107.315 202.854 107.187 cv
202.719 106.97 202.652 106.647 202.653 106.217 cv
202.662 105.75 202.775 105.45 202.99 105.314 cv
203.207 105.181 203.577 105.173 204.104 105.295 cv
204.501 105.387 205.12 105.428 205.959 105.419 cv
206.799 105.409 207.541 105.424 208.185 105.461 cv
cp
f
221.025 113.414 mo
220.679 112.497 li
219.508 111.986 li
218.942 111.752 218.373 111.608 217.801 111.555 cv
217.229 111.502 216.709 111.534 216.247 111.653 cv
215.782 111.771 215.354 111.964 214.963 112.232 cv
214.571 112.5 214.278 112.834 214.084 113.232 cv
213.89 113.633 213.776 114.081 213.744 114.577 cv
213.731 115.266 213.922 115.961 214.316 116.663 cv
214.709 117.364 215.171 117.831 215.699 118.062 cv
216.227 118.292 216.782 118.416 217.363 118.434 cv
217.944 118.452 218.453 118.354 218.887 118.137 cv
219.973 117.629 220.698 116.969 221.065 116.161 cv
221.431 115.352 221.418 114.437 221.025 113.414 cv
cp
218.241 109.803 mo
218.563 109.786 218.992 109.853 219.529 110.002 cv
220.066 110.151 220.476 110.32 220.761 110.51 cv
221.189 110.788 221.55 111.191 221.844 111.718 cv
222.137 112.246 222.334 112.822 222.434 113.448 cv
222.534 114.075 222.559 114.724 222.508 115.396 cv
222.457 116.067 222.309 116.684 222.065 117.245 cv
221.82 117.806 221.496 118.293 221.093 118.706 cv
220.407 119.35 219.78 119.773 219.213 119.978 cv
218.646 120.182 217.866 120.251 216.874 120.185 cv
216.157 120.146 215.535 119.99 215.007 119.714 cv
214.48 119.438 213.98 119.014 213.51 118.441 cv
212.707 117.464 212.306 116.286 212.31 114.914 cv
212.313 113.541 212.721 112.312 213.536 111.227 cv
214.465 109.995 215.311 109.258 216.072 109.014 cv
216.389 108.917 216.645 108.878 216.839 108.896 cv
217.034 108.917 217.165 108.977 217.232 109.078 cv
217.299 109.18 217.373 109.287 217.454 109.401 cv
217.536 109.515 217.624 109.612 217.719 109.693 cv
217.815 109.774 217.989 109.811 218.241 109.803 cv
cp
f
229.955 116.993 mo
229.872 116.664 229.781 116.422 229.681 116.269 cv
229.582 116.115 229.422 115.966 229.203 115.818 cv
229.003 115.686 228.845 115.587 228.729 115.524 cv
228.612 115.461 228.491 115.415 228.364 115.389 cv
228.238 115.361 228.136 115.358 228.057 115.378 cv
227.979 115.397 227.885 115.458 227.775 115.558 cv
227.666 115.657 227.563 115.772 227.467 115.904 cv
227.373 116.035 227.246 116.221 227.085 116.46 cv
226.878 116.77 226.726 117.014 226.627 117.193 cv
226.529 117.373 226.463 117.524 226.432 117.647 cv
226.4 117.771 226.418 117.852 226.486 117.89 cv
226.555 117.928 226.657 117.964 226.793 117.997 cv
227.836 118.153 li
228.346 118.234 228.817 118.257 229.251 118.223 cv
229.686 118.188 229.943 118.111 230.023 117.991 cv
230.103 117.872 230.081 117.539 229.955 116.993 cv
cp
229.301 113.632 mo
230.82 114.316 231.593 115.548 231.617 117.324 cv
231.63 117.737 231.602 118.048 231.536 118.256 cv
231.468 118.464 231.309 118.757 231.056 119.137 cv
230.782 119.546 230.584 119.792 230.463 119.877 cv
230.341 119.962 230.109 120.012 229.766 120.028 cv
229.373 120.054 229.102 120.05 228.953 120.015 cv
228.803 119.979 228.516 119.986 228.094 120.036 cv
227.37 120.114 li
227.598 121.458 li
227.756 122.344 227.931 123.031 228.124 123.521 cv
228.243 123.816 228.342 124.01 228.42 124.098 cv
228.498 124.186 228.621 124.235 228.788 124.245 cv
229.04 124.256 229.227 124.344 229.346 124.511 cv
229.419 124.617 229.438 124.724 229.403 124.83 cv
229.368 124.937 229.249 125.109 229.045 125.349 cv
228.735 125.704 228.495 125.901 228.326 125.939 cv
228.155 125.977 227.879 125.905 227.497 125.722 cv
227.201 125.581 227.004 125.406 226.906 125.196 cv
226.808 124.986 226.637 124.396 226.392 123.424 cv
225.892 121.386 225.51 120.229 225.248 119.952 cv
225.085 119.785 224.902 119.822 224.699 120.062 cv
224.642 120.125 224.578 120.211 224.503 120.32 cv
224.291 120.641 224.11 120.963 223.963 121.291 cv
223.816 121.618 223.72 121.861 223.673 122.018 cv
223.626 122.173 223.548 122.306 223.44 122.413 cv
223.332 122.521 223.176 122.587 222.973 122.61 cv
222.684 122.634 222.445 122.585 222.257 122.467 cv
222.069 122.349 222.005 122.201 222.065 122.025 cv
222.095 121.915 222.121 121.784 222.143 121.633 cv
222.166 121.482 222.199 121.35 222.246 121.236 cv
222.293 121.123 222.427 120.874 222.649 120.488 cv
222.871 120.102 223.195 119.59 223.622 118.951 cv
224.469 117.685 224.987 116.852 225.175 116.45 cv
225.364 116.049 225.375 115.736 225.209 115.509 cv
225.076 115.319 225.015 115.098 225.026 114.846 cv
225.036 114.592 225.121 114.346 225.281 114.106 cv
225.474 113.817 226.074 113.611 227.079 113.489 cv
228.084 113.368 228.825 113.415 229.301 113.632 cv
cp
f
235.311 118.842 mo
235.521 118.814 235.71 118.871 235.875 119.009 cv
236.041 119.148 236.138 119.331 236.167 119.559 cv
236.185 119.667 235.792 120.328 234.989 121.541 cv
234.185 122.755 233.644 123.519 233.365 123.832 cv
233.163 124.055 232.674 124.732 231.897 125.867 cv
231.385 126.611 231.04 127.085 230.862 127.288 cv
230.683 127.491 230.491 127.624 230.284 127.686 cv
230.017 127.76 229.842 127.777 229.758 127.737 cv
229.673 127.699 229.604 127.563 229.549 127.328 cv
229.453 126.92 229.983 125.979 231.138 124.504 cv
231.795 123.661 232.374 122.891 232.875 122.189 cv
233.375 121.489 233.736 120.959 233.959 120.599 cv
234.182 120.237 234.37 119.925 234.521 119.66 cv
234.672 119.396 234.775 119.216 234.831 119.121 cv
234.887 119.027 234.945 118.962 235.005 118.927 cv
235.066 118.892 235.168 118.864 235.311 118.842 cv
cp
f
239.454 125.557 mo
239.352 125.132 239.249 124.88 239.143 124.799 cv
239.037 124.718 238.747 124.669 238.271 124.65 cv
237.889 124.642 237.524 124.705 237.176 124.84 cv
236.828 124.975 236.39 125.237 235.864 125.627 cv
235.575 125.83 235.477 126.021 235.57 126.199 cv
235.672 126.386 236.108 126.772 236.879 127.359 cv
238.138 128.316 li
238.687 127.693 li
239.069 127.262 239.315 126.889 239.426 126.574 cv
239.537 126.262 239.546 125.922 239.454 125.557 cv
cp
239.381 123.189 mo
239.763 123.283 240.042 123.433 240.221 123.636 cv
240.398 123.84 240.588 124.239 240.792 124.833 cv
240.917 125.232 240.977 125.59 240.967 125.902 cv
240.958 126.217 240.839 126.61 240.609 127.086 cv
240.379 127.561 240.058 128.08 239.646 128.643 cv
239.233 129.207 238.631 129.976 237.841 130.951 cv
235.864 133.353 li
235.727 133.521 235.604 133.628 235.494 133.671 cv
235.384 133.713 235.235 133.717 235.048 133.682 cv
234.871 133.64 234.75 133.591 234.686 133.535 cv
234.622 133.479 234.583 133.385 234.566 133.248 cv
234.541 132.969 234.626 132.664 234.822 132.333 cv
235.018 132.002 235.392 131.527 235.944 130.909 cv
236.65 130.139 237.002 129.692 237.002 129.574 cv
237.002 129.507 236.854 129.366 236.558 129.153 cv
236.261 128.941 235.905 128.689 235.49 128.401 cv
235.075 128.111 234.774 127.874 234.588 127.688 cv
234.292 127.39 234.084 127.274 233.964 127.342 cv
233.896 127.375 233.415 127.746 232.518 128.453 cv
231.622 129.16 231.072 129.539 230.868 129.59 cv
230.647 129.657 230.467 129.616 230.328 129.468 cv
230.187 129.318 230.122 129.104 230.131 128.824 cv
230.14 128.664 230.176 128.529 230.24 128.424 cv
230.304 128.318 230.439 128.187 230.648 128.03 cv
230.856 127.873 231.098 127.704 231.375 127.522 cv
231.65 127.34 232.067 127.031 232.623 126.596 cv
233.18 126.158 233.776 125.666 234.414 125.115 cv
235.459 124.192 236.172 123.671 236.554 123.553 cv
236.937 123.436 237.167 123.338 237.243 123.262 cv
237.345 123.16 237.64 123.104 238.128 123.092 cv
238.615 123.079 239.034 123.112 239.381 123.189 cv
cp
f
128.502 462.151 mo
128.131 461.695 127.912 461.279 127.845 460.902 cv
127.78 460.525 127.838 459.994 128.02 459.31 cv
128.105 459.001 128.309 458.737 128.633 458.518 cv
128.958 458.299 129.285 458.208 129.615 458.247 cv
129.919 458.282 130.085 458.386 130.114 458.56 cv
130.142 458.734 130.038 458.996 129.802 459.343 cv
129.589 459.684 129.495 459.96 129.518 460.175 cv
129.541 460.389 129.712 460.72 130.031 461.168 cv
130.474 461.79 131.116 462.336 131.957 462.809 cv
132.798 463.28 133.634 463.563 134.466 463.658 cv
135.113 463.727 135.602 463.699 135.933 463.572 cv
136.263 463.445 136.587 463.162 136.906 462.723 cv
137.126 462.405 137.261 462.16 137.308 461.984 cv
137.356 461.81 137.352 461.566 137.294 461.256 cv
137.227 460.911 137.03 460.374 136.702 459.642 cv
136.374 458.911 136.031 458.246 135.671 457.646 cv
135.568 457.453 135.514 457.31 135.513 457.215 cv
135.513 457.12 135.567 457.009 135.675 456.883 cv
135.878 456.661 136.159 456.549 136.521 456.545 cv
136.881 456.541 137.12 456.652 137.236 456.879 cv
137.308 457.019 137.38 457.127 137.452 457.204 cv
137.522 457.281 137.584 457.343 137.639 457.387 cv
137.693 457.433 137.783 457.604 137.911 457.902 cv
138.039 458.201 138.202 458.634 138.396 459.201 cv
138.744 460.211 138.917 460.98 138.915 461.507 cv
138.913 462.035 138.738 462.606 138.39 463.22 cv
138.096 463.728 137.826 464.078 137.582 464.27 cv
137.336 464.462 136.903 464.666 136.279 464.881 cv
135.722 465.072 135.277 465.181 134.944 465.207 cv
134.61 465.233 134.063 465.212 133.303 465.144 cv
132.658 465.074 131.837 464.729 130.842 464.106 cv
129.848 463.484 129.069 462.832 128.502 462.151 cv
cp
f
128.81 452.204 mo
128.654 452.612 128.598 452.879 128.64 453.005 cv
128.682 453.132 128.895 453.336 129.278 453.618 cv
129.588 453.84 129.925 453.993 130.29 454.077 cv
130.654 454.162 131.163 454.19 131.817 454.165 cv
132.17 454.159 132.358 454.057 132.382 453.857 cv
132.404 453.645 132.259 453.08 131.952 452.161 cv
131.45 450.662 li
130.646 450.869 li
130.086 451.011 129.673 451.181 129.405 451.378 cv
129.137 451.574 128.938 451.851 128.81 452.204 cv
cp
127.537 454.202 mo
127.275 453.91 127.127 453.629 127.095 453.361 cv
127.063 453.092 127.13 452.655 127.296 452.05 cv
127.417 451.648 127.569 451.32 127.752 451.066 cv
127.937 450.812 128.257 450.553 128.713 450.29 cv
129.171 450.026 129.729 449.777 130.387 449.544 cv
131.045 449.31 131.975 449.013 133.177 448.651 cv
136.163 447.777 li
136.37 447.713 136.532 447.695 136.647 447.722 cv
136.762 447.75 136.887 447.83 137.023 447.963 cv
137.145 448.099 137.217 448.207 137.239 448.289 cv
137.26 448.37 137.24 448.472 137.177 448.593 cv
137.041 448.839 136.798 449.043 136.451 449.206 cv
136.103 449.37 135.526 449.552 134.721 449.752 cv
133.705 449.993 133.162 450.162 133.095 450.26 cv
133.057 450.316 133.101 450.516 133.227 450.858 cv
133.352 451.201 133.506 451.608 133.687 452.082 cv
133.867 452.554 133.982 452.92 134.032 453.18 cv
134.109 453.593 134.215 453.804 134.352 453.815 cv
134.427 453.825 135.034 453.791 136.173 453.71 cv
137.312 453.63 137.98 453.626 138.176 453.698 cv
138.397 453.767 138.523 453.901 138.554 454.104 cv
138.586 454.305 138.521 454.519 138.355 454.745 cv
138.257 454.874 138.152 454.964 138.041 455.016 cv
137.928 455.067 137.741 455.1 137.482 455.111 cv
137.221 455.124 136.926 455.128 136.595 455.123 cv
136.265 455.118 135.747 455.14 135.042 455.188 cv
134.335 455.235 133.565 455.307 132.728 455.403 cv
131.345 455.579 130.461 455.608 130.079 455.491 cv
129.697 455.374 129.453 455.325 129.346 455.345 cv
129.206 455.372 128.929 455.252 128.519 454.988 cv
128.109 454.724 127.782 454.461 127.537 454.202 cv
cp
f
123.855 441.701 mo
123.703 441.654 123.616 441.415 123.594 440.984 cv
123.58 440.696 123.596 440.515 123.639 440.441 cv
123.684 440.366 123.807 440.324 124.012 440.314 cv
124.836 440.237 126.682 440.14 129.548 440.021 cv
132.413 439.903 134.183 439.852 134.856 439.866 cv
135.758 439.881 136.359 439.951 136.66 440.074 cv
136.96 440.197 137.12 440.427 137.135 440.763 cv
137.145 440.942 137.1 441.077 137.002 441.165 cv
136.905 441.254 136.772 441.345 136.602 441.438 cv
136.431 441.53 136.302 441.639 136.212 441.764 cv
136.077 441.95 135.95 442.047 135.83 442.053 cv
135.722 442.058 135.439 442.18 134.983 442.419 cv
134.526 442.658 133.99 442.937 133.375 443.256 cv
132.76 443.574 132.277 443.803 131.922 443.94 cv
131.441 444.145 130.983 444.36 130.548 444.585 cv
130.116 444.812 129.9 444.954 129.903 445.014 cv
129.906 445.05 130.16 445.076 130.665 445.094 cv
131.169 445.11 131.809 445.142 132.58 445.188 cv
133.35 445.233 133.985 445.316 134.484 445.436 cv
134.714 445.484 134.979 445.537 135.276 445.594 cv
135.573 445.652 135.783 445.692 135.904 445.717 cv
136.025 445.74 136.159 445.776 136.305 445.823 cv
136.452 445.869 136.563 445.924 136.637 445.986 cv
136.713 446.049 136.79 446.132 136.868 446.236 cv
137.008 446.434 137.07 446.572 137.05 446.651 cv
137.03 446.73 136.911 446.865 136.692 447.056 cv
136.427 447.298 136.151 447.44 135.865 447.484 cv
135.579 447.529 135.312 447.473 135.064 447.317 cv
134.84 447.172 134.285 446.995 133.398 446.787 cv
132.791 446.637 132.242 446.553 131.753 446.535 cv
131.267 446.518 130.322 446.543 128.919 446.613 cv
125.792 446.768 li
125.608 446.326 li
125.526 446.139 125.498 445.989 125.523 445.88 cv
125.546 445.771 125.638 445.628 125.798 445.452 cv
126.037 445.164 126.262 445.015 126.478 445.004 cv
126.599 444.998 126.761 444.945 126.966 444.844 cv
127.171 444.744 127.441 444.604 127.775 444.426 cv
128.108 444.247 128.363 444.111 128.539 444.019 cv
131.441 442.595 li
132.31 442.191 132.85 441.93 133.06 441.812 cv
133.271 441.693 133.375 441.598 133.372 441.526 cv
133.367 441.43 133.211 441.354 132.91 441.296 cv
132.534 441.243 131.288 441.257 129.171 441.338 cv
127.054 441.419 125.704 441.504 125.12 441.593 cv
124.428 441.711 124.007 441.747 123.855 441.701 cv
cp
f
125.476 433.303 mo
125.326 432.734 125.299 432.264 125.396 431.894 cv
125.494 431.523 125.767 431.065 126.218 430.518 cv
126.423 430.273 126.718 430.118 127.105 430.053 cv
127.491 429.989 127.827 430.043 128.111 430.215 cv
128.374 430.374 128.48 430.538 128.434 430.708 cv
128.386 430.879 128.184 431.072 127.825 431.291 cv
127.489 431.511 127.289 431.724 127.219 431.928 cv
127.151 432.132 127.169 432.504 127.273 433.045 cv
127.417 433.795 127.773 434.56 128.341 435.338 cv
128.911 436.117 129.553 436.723 130.27 437.155 cv
130.829 437.488 131.285 437.665 131.638 437.687 cv
131.991 437.71 132.404 437.588 132.876 437.32 cv
133.209 437.124 133.433 436.956 133.55 436.816 cv
133.666 436.678 133.764 436.455 133.841 436.149 cv
133.923 435.808 133.966 435.236 133.973 434.435 cv
133.979 433.634 133.945 432.885 133.868 432.19 cv
133.853 431.972 133.865 431.819 133.903 431.733 cv
133.942 431.646 134.038 431.568 134.188 431.499 cv
134.465 431.381 134.769 431.396 135.097 431.542 cv
135.427 431.689 135.597 431.89 135.608 432.145 cv
135.618 432.302 135.637 432.431 135.67 432.53 cv
135.703 432.63 135.734 432.711 135.764 432.774 cv
135.793 432.838 135.805 433.031 135.797 433.356 cv
135.79 433.681 135.756 434.142 135.698 434.739 cv
135.593 435.802 135.431 436.573 135.208 437.052 cv
134.987 437.53 134.59 437.977 134.019 438.391 cv
133.541 438.73 133.15 438.936 132.846 439.009 cv
132.543 439.081 132.064 439.086 131.408 439.021 cv
130.822 438.964 130.373 438.878 130.058 438.762 cv
129.744 438.647 129.255 438.4 128.593 438.022 cv
128.036 437.69 127.433 437.034 126.789 436.054 cv
126.142 435.075 125.706 434.157 125.476 433.303 cv
cp
f
127.441 425.366 mo
127.639 424.537 127.788 423.724 127.884 422.925 cv
127.981 422.127 128.069 421.576 128.146 421.273 cv
128.219 420.934 128.29 420.719 128.356 420.63 cv
128.421 420.542 128.564 420.482 128.782 420.451 cv
129.076 420.414 129.303 420.509 129.462 420.735 cv
129.621 420.961 129.68 421.279 129.636 421.689 cv
129.586 422.085 129.527 422.757 129.46 423.706 cv
129.295 425.744 li
129.259 426.082 129.313 426.343 129.458 426.528 cv
129.604 426.713 129.875 426.875 130.273 427.014 cv
130.804 427.186 li
131.819 423.19 li
132.321 423.262 li
132.714 423.324 132.947 423.517 133.019 423.839 cv
133.092 424.161 133.057 424.823 132.915 425.827 cv
132.735 427.02 132.605 427.655 132.522 427.733 cv
132.427 427.82 132.521 427.961 132.805 428.157 cv
133.29 428.491 133.916 428.755 134.683 428.95 cv
135.231 429.089 135.6 429.158 135.792 429.157 cv
135.985 429.157 136.169 429.098 136.347 428.982 cv
136.63 428.794 136.837 428.587 136.969 428.36 cv
137.16 428.05 137.229 427.334 137.18 426.213 cv
137.13 425.093 136.992 424.324 136.762 423.906 cv
136.625 423.624 136.604 423.364 136.7 423.129 cv
136.768 422.961 136.85 422.867 136.948 422.849 cv
137.044 422.83 137.25 422.861 137.566 422.94 cv
138.03 423.059 138.283 423.21 138.324 423.393 cv
138.355 423.512 138.441 423.841 138.584 424.378 cv
138.725 424.916 138.825 425.343 138.88 425.661 cv
138.936 425.978 138.956 426.413 138.938 426.966 cv
138.923 427.519 138.831 428.047 138.667 428.55 cv
138.49 429.05 138.343 429.372 138.227 429.516 cv
138.11 429.659 137.841 429.852 137.422 430.091 cv
137.218 430.212 137.076 430.294 136.997 430.336 cv
136.918 430.378 136.782 430.415 136.588 430.446 cv
136.395 430.478 136.255 430.491 136.169 430.488 cv
136.083 430.485 135.878 430.451 135.554 430.387 cv
135.23 430.324 134.949 430.259 134.711 430.192 cv
134.475 430.126 134.051 430.003 133.441 429.823 cv
132.503 429.561 131.598 429.207 130.72 428.762 cv
129.843 428.315 129.241 428.033 128.912 427.912 cv
128.291 427.68 127.83 427.445 127.531 427.208 cv
127.085 426.836 li
127.441 425.366 li
cp
f
130.083 418.308 mo
130 418.039 129.988 417.836 130.046 417.697 cv
130.104 417.56 130.239 417.456 130.449 417.388 cv
130.586 417.342 130.927 417.42 131.472 417.623 cv
132.018 417.826 133.045 418.257 134.551 418.916 cv
138.314 420.555 li
138.478 420.213 li
138.59 419.976 138.753 419.666 138.965 419.286 cv
139.161 418.912 139.5 418.167 139.983 417.048 cv
140.465 415.93 140.746 415.231 140.824 414.951 cv
140.865 414.761 140.931 414.658 141.021 414.644 cv
141.112 414.63 141.327 414.685 141.666 414.808 cv
142.004 414.93 142.209 415.029 142.282 415.105 cv
142.354 415.182 142.388 415.335 142.38 415.566 cv
142.378 415.852 142.004 416.791 141.256 418.384 cv
140.509 419.977 140.119 421 140.084 421.455 cv
140.047 421.79 139.998 422.001 139.937 422.085 cv
139.875 422.17 139.698 422.281 139.406 422.419 cv
139.071 422.565 138.787 422.615 138.552 422.568 cv
138.318 422.521 138.043 422.361 137.73 422.086 cv
137.41 421.795 136.568 421.328 135.205 420.684 cv
133.842 420.04 132.727 419.574 131.858 419.288 cv
131.071 419.022 130.592 418.844 130.421 418.753 cv
130.252 418.662 130.139 418.514 130.083 418.308 cv
cp
f
134.2 409.1 mo
134.159 408.821 134.177 408.618 134.256 408.49 cv
134.334 408.362 134.483 408.28 134.702 408.245 cv
134.844 408.22 135.169 408.349 135.677 408.631 cv
136.188 408.915 137.137 409.496 138.527 410.374 cv
142 412.561 li
142.212 412.248 li
142.36 412.029 142.568 411.748 142.833 411.404 cv
143.083 411.065 143.532 410.379 144.177 409.346 cv
144.823 408.313 145.206 407.664 145.325 407.4 cv
145.394 407.217 145.474 407.126 145.567 407.126 cv
145.658 407.126 145.863 407.211 146.179 407.384 cv
146.495 407.557 146.684 407.686 146.744 407.771 cv
146.803 407.858 146.813 408.015 146.772 408.242 cv
146.726 408.524 146.213 409.396 145.235 410.858 cv
144.256 412.32 143.716 413.273 143.614 413.717 cv
143.526 414.044 143.447 414.244 143.372 414.318 cv
143.299 414.394 143.107 414.477 142.797 414.568 cv
142.445 414.662 142.156 414.668 141.931 414.587 cv
141.707 414.506 141.459 414.306 141.191 413.986 cv
140.917 413.651 140.157 413.062 138.907 412.22 cv
137.655 411.378 136.624 410.75 135.808 410.335 cv
135.07 409.955 134.624 409.706 134.468 409.591 cv
134.315 409.476 134.225 409.312 134.2 409.1 cv
cp
f
143.226 398.744 mo
142.813 398.886 142.571 399.013 142.501 399.126 cv
142.431 399.239 142.409 399.533 142.437 400.007 cv
142.464 400.389 142.562 400.746 142.729 401.079 cv
142.898 401.413 143.2 401.823 143.638 402.311 cv
143.869 402.579 144.068 402.658 144.236 402.549 cv
144.413 402.43 144.756 401.958 145.266 401.135 cv
146.098 399.79 li
145.426 399.304 li
144.959 398.964 144.566 398.754 144.242 398.674 cv
143.919 398.594 143.58 398.617 143.226 398.744 cv
cp
140.875 399.042 mo
140.933 398.653 141.055 398.361 141.241 398.164 cv
141.426 397.968 141.805 397.74 142.378 397.481 cv
142.762 397.318 143.113 397.226 143.425 397.204 cv
143.739 397.184 144.143 397.265 144.637 397.448 cv
145.132 397.632 145.679 397.901 146.28 398.259 cv
146.881 398.615 147.703 399.141 148.749 399.834 cv
151.33 401.573 li
151.511 401.692 151.627 401.805 151.68 401.911 cv
151.733 402.017 151.751 402.164 151.735 402.353 cv
151.709 402.535 151.672 402.66 151.624 402.728 cv
151.574 402.797 151.483 402.846 151.349 402.875 cv
151.073 402.927 150.761 402.871 150.413 402.708 cv
150.066 402.545 149.557 402.218 148.888 401.726 cv
148.055 401.098 147.578 400.789 147.458 400.8 cv
147.392 400.807 147.266 400.967 147.083 401.282 cv
146.9 401.599 146.683 401.977 146.436 402.418 cv
146.187 402.859 145.979 403.181 145.811 403.385 cv
145.542 403.708 145.449 403.925 145.528 404.037 cv
145.566 404.102 145.982 404.546 146.771 405.371 cv
147.56 406.196 147.99 406.707 148.06 406.905 cv
148.149 407.118 148.125 407.302 147.992 407.455 cv
147.855 407.609 147.649 407.694 147.37 407.712 cv
147.208 407.719 147.071 407.695 146.96 407.642 cv
146.848 407.589 146.706 407.466 146.528 407.273 cv
146.353 407.081 146.161 406.856 145.954 406.599 cv
145.747 406.342 145.399 405.957 144.912 405.444 cv
144.424 404.932 143.876 404.385 143.268 403.803 cv
142.249 402.851 141.663 402.19 141.508 401.821 cv
141.355 401.452 141.235 401.233 141.153 401.164 cv
141.042 401.072 140.957 400.784 140.899 400.3 cv
140.84 399.815 140.832 399.396 140.875 399.042 cv
cp
f
156.48 384.208 mo
156.522 383.948 156.617 383.768 156.765 383.667 cv
156.905 383.573 157.141 383.584 157.472 383.7 cv
157.804 383.816 158.028 383.959 158.141 384.128 cv
158.208 384.228 158.349 384.394 158.564 384.625 cv
158.778 384.857 159.124 385.225 159.6 385.728 cv
160.078 386.23 160.551 386.744 161.02 387.267 cv
161.546 387.853 162.16 388.467 162.861 389.108 cv
163.562 389.75 164.074 390.171 164.398 390.372 cv
165.096 390.784 165.531 391.258 165.705 391.792 cv
165.843 392.191 165.722 392.396 165.338 392.409 cv
164.946 392.428 164.456 392.253 163.866 391.883 cv
163.276 391.514 162.769 391.154 162.344 390.804 cv
161.919 390.453 161.682 390.295 161.632 390.328 cv
161.603 390.349 161.6 390.43 161.624 390.573 cv
161.648 390.716 161.679 390.978 161.718 391.356 cv
161.757 391.735 161.762 392.151 161.735 392.604 cv
161.702 393.047 161.649 393.368 161.582 393.566 cv
161.513 393.765 161.383 393.949 161.195 394.12 cv
160.768 394.539 160.352 394.802 159.947 394.909 cv
159.542 395.016 159.059 394.998 158.498 394.854 cv
157.975 394.702 157.489 394.469 157.04 394.157 cv
156.59 393.845 156.22 393.522 155.93 393.19 cv
155.641 392.857 155.234 392.4 154.711 391.819 cv
154.189 391.238 153.694 390.729 153.225 390.292 cv
152.668 389.77 152.345 389.439 152.25 389.3 cv
152.156 389.161 152.123 388.981 152.148 388.761 cv
152.205 388.331 152.4 388.105 152.732 388.084 cv
153.066 388.062 153.464 388.256 153.929 388.666 cv
154.204 388.9 154.816 389.588 155.765 390.727 cv
156.716 391.866 157.31 392.537 157.547 392.738 cv
157.875 393.01 158.218 393.169 158.576 393.217 cv
158.935 393.265 159.247 393.198 159.516 393.017 cv
159.785 392.835 159.949 392.511 160.009 392.043 cv
160.07 391.575 160.039 390.832 159.917 389.814 cv
159.823 388.966 159.65 388.326 159.402 387.893 cv
159.152 387.46 158.664 386.918 157.934 386.266 cv
157.335 385.744 156.932 385.335 156.726 385.04 cv
156.52 384.745 156.437 384.468 156.48 384.208 cv
cp
f
161.958 381.697 mo
162.078 381.444 162.207 381.286 162.343 381.224 cv
162.479 381.161 162.649 381.177 162.849 381.27 cv
162.982 381.327 163.179 381.616 163.444 382.135 cv
163.708 382.655 164.17 383.667 164.833 385.172 cv
166.492 388.927 li
166.841 388.785 li
167.087 388.687 167.417 388.569 167.829 388.433 cv
168.225 388.291 168.981 387.972 170.093 387.477 cv
171.206 386.98 171.886 386.656 172.132 386.504 cv
172.292 386.392 172.41 386.36 172.486 386.411 cv
172.562 386.462 172.683 386.647 172.849 386.967 cv
173.015 387.287 173.099 387.5 173.101 387.604 cv
173.103 387.71 173.024 387.845 172.862 388.011 cv
172.667 388.219 171.754 388.656 170.125 389.322 cv
168.498 389.988 167.517 390.476 167.183 390.787 cv
166.929 391.009 166.75 391.13 166.647 391.151 cv
166.543 391.171 166.339 391.133 166.032 391.037 cv
165.686 390.918 165.443 390.762 165.302 390.568 cv
165.162 390.376 165.069 390.072 165.024 389.657 cv
164.985 389.226 164.682 388.313 164.117 386.915 cv
163.55 385.518 163.043 384.42 162.598 383.62 cv
162.2 382.893 161.969 382.438 161.905 382.255 cv
161.841 382.073 161.858 381.888 161.958 381.697 cv
cp
f
175.613 375.729 mo
175.989 375.554 176.375 375.374 176.772 375.187 cv
177.169 375 177.462 374.863 177.65 374.776 cv
177.838 374.689 178.056 374.597 178.303 374.5 cv
178.55 374.403 178.811 374.312 179.086 374.226 cv
179.515 374.111 179.791 374.06 179.912 374.071 cv
180.032 374.083 180.154 374.177 180.276 374.355 cv
180.47 374.615 180.614 374.992 180.708 375.489 cv
180.775 375.832 180.792 376.047 180.759 376.136 cv
180.728 376.226 180.611 376.31 180.409 376.389 cv
180.116 376.503 179.847 376.5 179.604 376.379 cv
179.458 376.294 179.294 376.266 179.118 376.295 cv
178.938 376.324 178.634 376.42 178.207 376.584 cv
178.139 376.614 178.044 376.652 177.919 376.698 cv
177.682 376.786 177.515 376.846 177.418 376.878 cv
177.322 376.91 177.209 376.968 177.083 377.051 cv
176.956 377.135 176.875 377.19 176.838 377.219 cv
176.802 377.247 176.765 377.325 176.724 377.454 cv
176.683 377.583 176.669 377.677 176.679 377.736 cv
176.689 377.796 176.713 377.929 176.756 378.135 cv
176.799 378.341 176.842 378.516 176.886 378.659 cv
176.931 378.802 177.002 379.035 177.1 379.356 cv
177.15 379.542 177.195 379.685 177.234 379.786 cv
177.479 380.615 177.743 381.38 178.022 382.082 cv
178.302 382.783 178.532 383.306 178.71 383.649 cv
178.888 383.993 179.043 384.306 179.174 384.587 cv
179.306 384.869 179.37 385.088 179.368 385.244 cv
179.366 385.399 179.299 385.558 179.168 385.716 cv
178.951 385.973 178.766 386.097 178.615 386.087 cv
178.463 386.078 178.263 385.933 178.014 385.651 cv
177.711 385.31 177.362 384.533 176.965 383.322 cv
176.717 382.582 176.336 381.565 175.818 380.275 cv
175.299 378.985 175.005 378.319 174.931 378.276 cv
174.914 378.257 174.658 378.38 174.165 378.648 cv
173.671 378.917 173.216 379.18 172.8 379.44 cv
172.45 379.658 172.212 379.783 172.091 379.815 cv
171.969 379.848 171.842 379.826 171.709 379.749 cv
171.49 379.622 171.279 379.368 171.078 378.986 cv
170.869 378.57 170.828 378.252 170.954 378.032 cv
171.083 377.812 171.407 377.632 171.928 377.493 cv
172.324 377.388 172.888 377.135 173.625 376.733 cv
174.364 376.332 175.026 375.997 175.613 375.729 cv
cp
f
182.108 374.436 mo
182.227 374.261 182.393 374.157 182.607 374.125 cv
182.82 374.094 183.023 374.144 183.211 374.272 cv
183.304 374.332 183.538 375.064 183.909 376.471 cv
184.281 377.878 184.493 378.79 184.542 379.207 cv
184.574 379.506 184.754 380.322 185.085 381.656 cv
185.301 382.534 185.424 383.106 185.458 383.375 cv
185.491 383.643 185.463 383.874 185.371 384.07 cv
185.25 384.318 185.146 384.461 185.06 384.498 cv
184.975 384.535 184.827 384.496 184.616 384.382 cv
184.246 384.182 183.895 383.16 183.562 381.317 cv
183.371 380.266 183.178 379.321 182.988 378.481 cv
182.797 377.643 182.642 377.02 182.52 376.613 cv
182.399 376.206 182.292 375.858 182.194 375.569 cv
182.095 375.281 182.031 375.084 181.998 374.979 cv
181.963 374.876 181.954 374.789 181.967 374.721 cv
181.982 374.652 182.028 374.557 182.108 374.436 cv
cp
f
185.838 383.712 mo
185.833 383.484 185.935 383.109 186.145 382.588 cv
186.355 382.067 186.458 381.747 186.457 381.627 cv
186.452 381.436 186.528 381.139 186.687 380.739 cv
186.869 380.279 187.023 379.441 187.151 378.226 cv
187.278 377.011 187.31 376.092 187.249 375.469 cv
187.159 374.75 187.196 374.27 187.358 374.025 cv
187.717 373.501 188.109 373.51 188.529 374.053 cv
188.838 374.466 189.101 375.126 189.314 376.033 cv
189.381 376.379 189.614 377.079 190.011 378.132 cv
190.408 379.185 190.625 379.783 190.666 379.926 cv
190.705 380.058 190.751 380.167 190.808 380.256 cv
190.864 380.345 190.917 380.388 190.963 380.387 cv
191.048 380.385 191.155 380.122 191.288 379.596 cv
191.419 379.071 191.64 378.001 191.951 376.385 cv
192.208 375.07 192.396 374.244 192.513 373.905 cv
192.632 373.566 192.816 373.34 193.065 373.226 cv
193.398 373.086 193.62 373.075 193.73 373.192 cv
193.877 373.345 194.091 374.007 194.371 375.176 cv
194.542 375.856 194.719 376.477 194.901 377.036 cv
195.082 377.596 195.22 378.004 195.316 378.26 cv
195.413 378.516 195.467 378.691 195.482 378.787 cv
195.484 378.895 195.57 379.079 195.738 379.339 cv
195.906 379.6 195.993 379.819 195.996 379.999 cv
196 380.179 196.119 380.471 196.35 380.873 cv
196.582 381.276 196.698 381.549 196.702 381.693 cv
196.707 381.897 196.814 382.135 197.025 382.406 cv
197.221 382.642 197.334 382.927 197.36 383.262 cv
197.386 383.598 197.333 383.894 197.2 384.148 cv
197.069 384.403 196.889 384.534 196.661 384.539 cv
196.421 384.544 196.114 384.15 195.743 383.354 cv
195.369 382.559 194.983 381.596 194.584 380.464 cv
194.186 379.334 193.95 378.685 193.874 378.519 cv
193.709 378.162 193.624 377.876 193.619 377.66 cv
193.614 377.444 193.581 377.337 193.521 377.339 cv
193.414 377.341 193.298 377.602 193.18 378.121 cv
193.113 378.362 193.024 378.7 192.916 379.135 cv
192.806 379.57 192.717 379.917 192.652 380.177 cv
192.585 380.437 192.521 380.738 192.457 381.081 cv
192.392 381.425 192.346 381.729 192.316 381.994 cv
192.173 383.582 191.857 384.447 191.368 384.591 cv
191.106 384.657 190.837 384.489 190.565 384.087 cv
190.378 383.816 190.116 383.117 189.778 381.99 cv
189.439 380.864 189.218 380.194 189.118 379.98 cv
188.953 379.636 188.871 379.377 188.867 379.203 cv
188.863 379.029 188.818 378.943 188.733 378.945 cv
188.673 378.946 188.52 379.46 188.275 380.486 cv
188.029 381.512 187.82 382.489 187.65 383.418 cv
187.554 383.948 187.437 384.332 187.298 384.569 cv
187.161 384.807 186.983 384.928 186.768 384.933 cv
186.551 384.938 186.344 384.811 186.147 384.551 cv
185.948 384.292 185.846 384.012 185.838 383.712 cv
cp
f
206.593 378.172 mo
206.041 377.363 li
204.782 377.144 li
204.176 377.051 203.589 377.045 203.021 377.129 cv
202.453 377.212 201.956 377.366 201.533 377.591 cv
201.11 377.815 200.74 378.104 200.423 378.457 cv
200.105 378.81 199.899 379.203 199.805 379.637 cv
199.711 380.072 199.708 380.534 199.792 381.024 cv
199.943 381.696 200.292 382.326 200.841 382.915 cv
201.39 383.504 201.948 383.849 202.515 383.947 cv
203.083 384.047 203.651 384.036 204.221 383.916 cv
204.791 383.796 205.26 383.58 205.631 383.268 cv
206.566 382.517 207.116 381.705 207.281 380.832 cv
207.445 379.96 207.216 379.073 206.593 378.172 cv
cp
203.034 375.322 mo
203.343 375.23 203.776 375.193 204.333 375.211 cv
204.891 375.229 205.33 375.296 205.65 375.413 cv
206.131 375.583 206.578 375.889 206.987 376.332 cv
207.398 376.775 207.725 377.289 207.969 377.874 cv
208.215 378.459 208.392 379.084 208.502 379.748 cv
208.612 380.413 208.613 381.046 208.508 381.649 cv
208.402 382.252 208.204 382.803 207.909 383.299 cv
207.394 384.086 206.886 384.646 206.382 384.979 cv
205.879 385.312 205.139 385.563 204.16 385.732 cv
203.454 385.865 202.813 385.86 202.235 385.717 cv
201.656 385.573 201.071 385.279 200.478 384.834 cv
199.467 384.073 198.799 383.025 198.478 381.69 cv
198.158 380.355 198.263 379.064 198.798 377.817 cv
199.412 376.401 200.058 375.485 200.74 375.068 cv
201.026 374.898 201.264 374.801 201.458 374.773 cv
201.652 374.746 201.793 374.774 201.881 374.856 cv
201.971 374.939 202.07 375.026 202.175 375.117 cv
202.281 375.209 202.39 375.283 202.501 375.339 cv
202.614 375.395 202.792 375.39 203.034 375.322 cv
cp
f
223.588 380.156 mo
225.356 380.451 225.966 381.059 225.419 381.979 cv
225.084 382.537 li
224.438 382.179 li
224.067 381.956 223.503 381.782 222.75 381.658 cv
221.994 381.535 221.552 381.44 221.423 381.377 cv
221.142 381.239 220.882 381.218 220.641 381.313 cv
220.4 381.409 220.198 381.61 220.034 381.917 cv
219.964 382.03 219.914 382.122 219.878 382.191 cv
219.844 382.262 219.813 382.34 219.784 382.426 cv
219.754 382.512 219.734 382.579 219.724 382.627 cv
219.713 382.676 219.717 382.734 219.737 382.804 cv
219.756 382.874 219.78 382.929 219.807 382.969 cv
219.833 383.009 219.887 383.065 219.965 383.137 cv
220.042 383.209 220.118 383.269 220.187 383.317 cv
220.257 383.365 220.365 383.431 220.511 383.516 cv
220.656 383.602 220.796 383.677 220.931 383.743 cv
221.065 383.81 221.243 383.903 221.464 384.025 cv
223.167 384.925 li
222.937 385.513 li
222.78 385.917 222.64 386.139 222.52 386.18 cv
222.399 386.221 221.706 386.004 220.442 385.529 cv
218.547 384.816 li
218.052 385.576 li
217.765 385.996 217.566 386.463 217.454 386.977 cv
217.34 387.49 217.186 387.905 216.99 388.224 cv
216.82 388.541 216.697 388.718 216.619 388.753 cv
216.542 388.788 216.395 388.753 216.18 388.647 cv
215.727 388.425 215.611 387.935 215.829 387.18 cv
216.046 386.425 216.631 385.271 217.582 383.72 cv
218.181 382.745 218.678 381.544 219.072 380.12 cv
219.162 379.83 219.307 379.623 219.507 379.501 cv
219.708 379.379 219.969 379.337 220.291 379.376 cv
220.614 379.414 220.932 379.474 221.247 379.555 cv
221.561 379.636 221.949 379.743 222.412 379.877 cv
222.874 380.012 223.267 380.104 223.588 380.156 cv
cp
f
231.746 389.829 mo
231.587 388.861 li
230.539 388.13 li
230.031 387.789 229.5 387.537 228.95 387.372 cv
228.399 387.207 227.884 387.137 227.406 387.161 cv
226.928 387.186 226.471 387.291 226.035 387.476 cv
225.597 387.662 225.244 387.932 224.975 388.285 cv
224.707 388.639 224.507 389.056 224.376 389.536 cv
224.229 390.208 224.279 390.927 224.528 391.693 cv
224.776 392.459 225.136 393.007 225.609 393.337 cv
226.081 393.667 226.599 393.897 227.167 394.029 cv
227.733 394.162 228.25 394.164 228.719 394.038 cv
229.884 393.753 230.725 393.25 231.244 392.529 cv
231.761 391.808 231.929 390.907 231.746 389.829 cv
cp
229.726 385.74 mo
230.045 385.787 230.453 385.937 230.951 386.188 cv
231.447 386.44 231.817 386.688 232.057 386.929 cv
232.423 387.286 232.697 387.752 232.882 388.327 cv
233.065 388.902 233.145 389.507 233.12 390.14 cv
233.094 390.774 232.991 391.415 232.809 392.063 cv
232.626 392.712 232.361 393.287 232.01 393.789 cv
231.661 394.291 231.247 394.705 230.769 395.031 cv
229.97 395.526 229.273 395.818 228.676 395.907 cv
228.08 395.996 227.302 395.91 226.342 395.649 cv
225.646 395.472 225.068 395.195 224.606 394.821 cv
224.142 394.446 223.735 393.933 223.388 393.279 cv
222.792 392.161 222.63 390.929 222.905 389.584 cv
223.179 388.238 223.821 387.113 224.833 386.21 cv
225.987 385.186 226.96 384.629 227.754 384.54 cv
228.084 384.507 228.343 384.519 228.53 384.576 cv
228.716 384.634 228.833 384.719 228.879 384.831 cv
228.924 384.943 228.977 385.063 229.035 385.191 cv
229.09 385.319 229.159 385.432 229.236 385.53 cv
229.315 385.628 229.477 385.698 229.726 385.74 cv
cp
f
240.978 393.699 mo
241.315 393.939 241.664 394.186 242.022 394.439 cv
242.38 394.692 242.644 394.878 242.814 394.999 cv
242.982 395.119 243.169 395.263 243.376 395.43 cv
243.583 395.597 243.792 395.779 244.001 395.976 cv
244.314 396.292 244.494 396.505 244.544 396.616 cv
244.595 396.727 244.572 396.88 244.477 397.074 cv
244.347 397.37 244.091 397.682 243.707 398.01 cv
243.441 398.237 243.262 398.358 243.168 398.375 cv
243.076 398.392 242.944 398.331 242.776 398.193 cv
242.531 397.996 242.402 397.762 242.387 397.49 cv
242.388 397.321 242.333 397.166 242.218 397.024 cv
242.106 396.883 241.871 396.668 241.517 396.376 cv
241.458 396.333 241.377 396.269 241.277 396.184 cv
241.083 396.021 240.949 395.904 240.872 395.836 cv
240.795 395.768 240.691 395.699 240.556 395.63 cv
240.42 395.562 240.332 395.518 240.289 395.501 cv
240.247 395.483 240.16 395.489 240.029 395.518 cv
239.896 395.547 239.808 395.58 239.76 395.618 cv
239.712 395.655 239.611 395.744 239.453 395.883 cv
239.294 396.021 239.165 396.146 239.061 396.255 cv
238.958 396.364 238.792 396.541 238.561 396.785 cv
238.424 396.92 238.322 397.03 238.253 397.114 cv
237.654 397.737 237.119 398.344 236.648 398.935 cv
236.175 399.525 235.834 399.982 235.625 400.308 cv
235.415 400.633 235.219 400.921 235.039 401.175 cv
234.859 401.428 234.7 401.592 234.564 401.668 cv
234.427 401.743 234.258 401.763 234.054 401.727 cv
233.724 401.665 233.525 401.566 233.459 401.43 cv
233.392 401.293 233.418 401.047 233.541 400.692 cv
233.688 400.26 234.19 399.573 235.046 398.629 cv
235.568 398.048 236.262 397.213 237.127 396.125 cv
237.993 395.037 238.426 394.451 238.427 394.366 cv
238.437 394.341 238.203 394.18 237.725 393.883 cv
237.248 393.587 236.793 393.322 236.363 393.09 cv
235.999 392.892 235.773 392.748 235.686 392.658 cv
235.596 392.568 235.553 392.447 235.554 392.294 cv
235.556 392.04 235.672 391.731 235.905 391.368 cv
236.163 390.979 236.418 390.786 236.673 390.789 cv
236.928 390.79 237.245 390.984 237.624 391.368 cv
237.91 391.659 238.41 392.026 239.123 392.469 cv
239.836 392.911 240.455 393.321 240.978 393.699 cv
cp
f
247.542 407.295 mo
247.743 406.336 li
247.028 405.276 li
246.676 404.775 246.273 404.349 245.819 403.996 cv
245.365 403.644 244.91 403.394 244.455 403.244 cv
244 403.095 243.535 403.028 243.06 403.044 cv
242.585 403.06 242.16 403.184 241.781 403.418 cv
241.403 403.651 241.067 403.968 240.772 404.369 cv
240.392 404.943 240.18 405.632 240.136 406.437 cv
240.093 407.24 240.231 407.881 240.553 408.358 cv
240.875 408.836 241.277 409.239 241.757 409.566 cv
242.238 409.893 242.72 410.082 243.203 410.133 cv
244.392 410.286 245.357 410.12 246.101 409.634 cv
246.844 409.147 247.325 408.368 247.542 407.295 cv
cp
247.13 402.754 mo
247.41 402.913 247.736 403.199 248.111 403.613 cv
248.483 404.027 248.739 404.39 248.877 404.702 cv
249.089 405.167 249.178 405.701 249.142 406.304 cv
249.107 406.906 248.963 407.499 248.712 408.081 cv
248.459 408.663 248.132 409.224 247.729 409.763 cv
247.325 410.303 246.871 410.743 246.363 411.085 cv
245.856 411.427 245.321 411.665 244.759 411.797 cv
243.834 411.972 243.079 411.993 242.49 411.861 cv
241.903 411.729 241.207 411.369 240.407 410.78 cv
239.821 410.364 239.379 409.898 239.083 409.382 cv
238.786 408.866 238.592 408.24 238.502 407.505 cv
238.349 406.248 238.643 405.041 239.382 403.884 cv
240.122 402.727 241.126 401.909 242.395 401.43 cv
243.84 400.89 244.95 400.722 245.723 400.924 cv
246.042 401.012 246.28 401.116 246.433 401.237 cv
246.587 401.358 246.665 401.479 246.667 401.601 cv
246.669 401.722 246.675 401.853 246.682 401.992 cv
246.689 402.133 246.711 402.262 246.75 402.382 cv
246.786 402.501 246.913 402.625 247.13 402.754 cv
cp
f
254.258 411.661 mo
254.97 411.959 255.366 412.334 255.445 412.785 cv
255.523 413.237 255.312 413.903 254.814 414.786 cv
254.524 415.311 254.277 415.652 254.071 415.811 cv
253.867 415.968 253.644 415.989 253.409 415.872 cv
253.208 415.777 253.108 415.585 253.109 415.295 cv
253.111 415.006 253.212 414.677 253.416 414.31 cv
253.619 413.941 253.66 413.653 253.54 413.444 cv
253.419 413.235 253.101 413.036 252.582 412.849 cv
252.037 412.66 251.497 412.558 250.963 412.54 cv
250.429 412.523 249.729 412.591 248.864 412.744 cv
247.895 412.903 247.178 413.094 246.713 413.315 cv
246.248 413.538 245.945 413.832 245.807 414.197 cv
245.705 414.467 245.673 414.698 245.714 414.89 cv
245.754 415.082 245.919 415.488 246.211 416.107 cv
246.602 416.918 246.989 417.5 247.373 417.854 cv
247.754 418.209 248.191 418.388 248.68 418.392 cv
249.135 418.411 249.381 418.336 249.417 418.168 cv
249.455 418.001 249.28 417.708 248.894 417.289 cv
248.508 416.87 248.216 416.633 248.021 416.576 cv
247.671 416.471 247.536 416.222 247.616 415.831 cv
247.698 415.439 247.946 415.15 248.362 414.963 cv
248.57 414.869 248.834 414.94 249.159 415.177 cv
249.482 415.413 249.982 415.905 250.661 416.653 cv
250.974 416.999 251.216 417.297 251.389 417.549 cv
251.561 417.801 251.668 418.038 251.71 418.263 cv
251.751 418.487 251.723 418.679 251.622 418.835 cv
251.521 418.992 251.333 419.15 251.055 419.308 cv
250.776 419.465 250.432 419.607 250.022 419.732 cv
249.612 419.857 249.09 419.996 248.461 420.147 cv
247.887 420.274 247.57 420.417 247.51 420.575 cv
247.432 420.781 247.167 420.967 246.713 421.131 cv
246.26 421.295 245.916 421.332 245.677 421.241 cv
245.392 421.133 245.228 421.029 245.183 420.931 cv
245.139 420.832 245.21 420.612 245.4 420.271 cv
245.588 419.93 245.777 419.69 245.964 419.553 cv
246.149 419.405 246.208 419.237 246.143 419.049 cv
246.078 418.861 245.877 418.612 245.541 418.303 cv
245.226 418.011 244.888 417.452 244.531 416.626 cv
244.284 416.079 244.138 415.694 244.09 415.472 cv
244.042 415.25 244.054 414.965 244.122 414.619 cv
244.226 414.032 244.421 413.576 244.709 413.25 cv
244.997 412.923 245.514 412.565 246.261 412.177 cv
246.738 411.923 247.16 411.734 247.525 411.609 cv
247.889 411.484 248.16 411.419 248.334 411.413 cv
248.509 411.406 248.691 411.394 248.88 411.375 cv
249.069 411.355 249.245 411.31 249.409 411.235 cv
249.846 411.039 250.927 411.04 252.648 411.24 cv
253.141 411.282 253.676 411.422 254.258 411.661 cv
cp
f
256.378 424.659 mo
256.534 424.356 256.624 424.115 256.651 423.934 cv
256.677 423.753 256.656 423.535 256.588 423.28 cv
256.527 423.048 256.473 422.87 256.428 422.746 cv
256.382 422.621 256.32 422.507 256.244 422.403 cv
256.167 422.3 256.091 422.229 256.02 422.193 cv
255.949 422.156 255.837 422.139 255.69 422.142 cv
255.542 422.144 255.387 422.162 255.23 422.198 cv
255.072 422.234 254.854 422.289 254.575 422.363 cv
254.215 422.458 253.94 422.541 253.748 422.611 cv
253.555 422.681 253.406 422.751 253.3 422.823 cv
253.196 422.895 253.156 422.967 253.182 423.041 cv
253.208 423.115 253.26 423.209 253.34 423.325 cv
254.021 424.131 li
254.35 424.527 254.689 424.856 255.038 425.118 cv
255.387 425.379 255.631 425.491 255.769 425.454 cv
255.909 425.417 256.111 425.151 256.378 424.659 cv
cp
258.106 421.703 mo
258.795 423.221 258.563 424.655 257.407 426.006 cv
257.144 426.324 256.917 426.539 256.731 426.651 cv
256.543 426.763 256.229 426.877 255.789 426.995 cv
255.313 427.121 255.001 427.176 254.855 427.159 cv
254.708 427.143 254.5 427.027 254.232 426.813 cv
253.919 426.573 253.718 426.391 253.629 426.266 cv
253.541 426.14 253.321 425.956 252.971 425.714 cv
252.375 425.295 li
251.658 426.454 li
251.193 427.224 250.871 427.856 250.693 428.351 cv
250.585 428.651 250.534 428.861 250.534 428.979 cv
250.534 429.098 250.593 429.215 250.71 429.333 cv
250.894 429.507 250.975 429.697 250.956 429.901 cv
250.939 430.029 250.883 430.122 250.787 430.178 cv
250.691 430.235 250.487 430.286 250.175 430.332 cv
249.708 430.394 249.398 430.383 249.245 430.3 cv
249.093 430.217 248.933 429.979 248.767 429.589 cv
248.638 429.288 248.606 429.026 248.67 428.804 cv
248.736 428.582 248.997 428.025 249.456 427.133 cv
250.426 425.273 250.904 424.153 250.89 423.771 cv
250.877 423.539 250.714 423.445 250.405 423.491 cv
250.32 423.501 250.214 423.523 250.086 423.557 cv
249.716 423.655 249.367 423.779 249.041 423.928 cv
248.713 424.077 248.481 424.195 248.343 424.282 cv
248.206 424.368 248.059 424.416 247.906 424.426 cv
247.753 424.435 247.592 424.381 247.425 424.265 cv
247.193 424.091 247.045 423.897 246.983 423.684 cv
246.919 423.471 246.969 423.318 247.131 423.226 cv
247.227 423.163 247.332 423.082 247.448 422.983 cv
247.565 422.884 247.677 422.807 247.788 422.753 cv
247.897 422.699 248.163 422.6 248.584 422.457 cv
249.005 422.314 249.587 422.144 250.33 421.946 cv
251.802 421.555 252.742 421.271 253.148 421.094 cv
253.554 420.918 253.769 420.689 253.794 420.41 cv
253.821 420.18 253.92 419.973 254.095 419.79 cv
254.27 419.606 254.497 419.478 254.776 419.404 cv
255.111 419.314 255.698 419.556 256.532 420.129 cv
257.368 420.701 257.892 421.226 258.106 421.703 cv
cp
f
257.646 434.428 mo
257.832 434.033 257.909 433.771 257.875 433.642 cv
257.843 433.512 257.646 433.293 257.286 432.983 cv
256.993 432.738 256.667 432.561 256.312 432.449 cv
255.955 432.338 255.449 432.271 254.793 432.248 cv
254.442 432.228 254.247 432.315 254.208 432.513 cv
254.172 432.723 254.271 433.297 254.51 434.236 cv
254.899 435.769 li
255.716 435.623 li
256.284 435.522 256.709 435.385 256.992 435.208 cv
257.274 435.031 257.492 434.771 257.646 434.428 cv
cp
259.064 432.53 mo
259.305 432.841 259.43 433.133 259.443 433.403 cv
259.455 433.673 259.355 434.104 259.143 434.695 cv
258.995 435.086 258.818 435.401 258.616 435.642 cv
258.414 435.882 258.074 436.116 257.598 436.344 cv
257.124 436.572 256.548 436.779 255.875 436.963 cv
255.202 437.147 254.251 437.375 253.026 437.645 cv
249.984 438.293 li
249.771 438.342 249.609 438.348 249.497 438.312 cv
249.383 438.276 249.266 438.187 249.141 438.044 cv
249.029 437.899 248.963 437.786 248.949 437.703 cv
248.933 437.62 248.961 437.521 249.032 437.404 cv
249.188 437.169 249.444 436.983 249.803 436.847 cv
250.162 436.71 250.75 436.571 251.568 436.432 cv
252.6 436.268 253.154 436.139 253.228 436.046 cv
253.27 435.993 253.241 435.792 253.142 435.44 cv
253.042 435.089 252.919 434.671 252.775 434.186 cv
252.629 433.701 252.542 433.328 252.512 433.065 cv
252.465 432.647 252.375 432.429 252.24 432.408 cv
252.167 432.392 251.558 432.382 250.417 432.377 cv
249.275 432.372 248.608 432.326 248.417 432.238 cv
248.203 432.154 248.086 432.01 248.07 431.807 cv
248.053 431.603 248.135 431.395 248.317 431.181 cv
248.424 431.061 248.536 430.979 248.652 430.936 cv
248.767 430.892 248.957 430.874 249.217 430.881 cv
249.477 430.888 249.771 430.906 250.101 430.936 cv
250.43 430.965 250.949 430.982 251.655 430.988 cv
252.363 430.993 253.137 430.979 253.978 430.945 cv
255.371 430.873 256.253 430.91 256.625 431.056 cv
256.999 431.201 257.239 431.268 257.346 431.256 cv
257.489 431.24 257.754 431.379 258.145 431.673 cv
258.534 431.968 258.84 432.253 259.064 432.53 cv
cp
f
250.373 438.612 mo
250.601 438.626 250.964 438.759 251.466 439.012 cv
251.967 439.266 252.278 439.396 252.399 439.402 cv
252.59 439.414 252.878 439.516 253.263 439.708 cv
253.707 439.927 254.528 440.151 255.729 440.381 cv
256.928 440.61 257.841 440.72 258.467 440.71 cv
259.191 440.683 259.667 440.759 259.897 440.942 cv
260.389 441.345 260.347 441.732 259.772 442.106 cv
259.333 442.38 258.654 442.585 257.733 442.722 cv
257.38 442.76 256.665 442.933 255.582 443.239 cv
254.5 443.546 253.884 443.713 253.739 443.74 cv
253.605 443.768 253.492 443.807 253.398 443.854 cv
253.305 443.903 253.257 443.951 253.254 443.999 cv
253.249 444.083 253.502 444.213 254.014 444.388 cv
254.527 444.564 255.575 444.874 257.159 445.319 cv
258.447 445.687 259.255 445.943 259.583 446.089 cv
259.91 446.235 260.121 446.438 260.213 446.696 cv
260.324 447.039 260.317 447.261 260.19 447.361 cv
260.026 447.496 259.349 447.653 258.16 447.833 cv
257.467 447.947 256.834 448.071 256.262 448.204 cv
255.688 448.337 255.269 448.441 255.007 448.516 cv
254.745 448.589 254.565 448.629 254.468 448.636 cv
254.361 448.629 254.169 448.699 253.897 448.844 cv
253.623 448.99 253.396 449.058 253.216 449.046 cv
253.037 449.035 252.738 449.128 252.317 449.325 cv
251.896 449.521 251.613 449.615 251.469 449.607 cv
251.266 449.594 251.02 449.682 250.732 449.868 cv
250.481 450.045 250.187 450.133 249.85 450.13 cv
249.514 450.128 249.224 450.05 248.981 449.897 cv
248.738 449.744 248.624 449.553 248.638 449.326 cv
248.651 449.086 249.071 448.814 249.895 448.51 cv
250.718 448.206 251.711 447.902 252.872 447.601 cv
254.033 447.299 254.699 447.117 254.872 447.055 cv
255.24 446.921 255.532 446.861 255.749 446.874 cv
255.963 446.888 256.073 446.864 256.077 446.804 cv
256.083 446.696 255.833 446.561 255.326 446.397 cv
255.09 446.311 254.761 446.195 254.337 446.049 cv
253.914 445.903 253.575 445.786 253.322 445.698 cv
253.068 445.611 252.774 445.521 252.436 445.428 cv
252.099 445.335 251.799 445.263 251.539 445.211 cv
249.969 444.935 249.132 444.547 249.031 444.049 cv
248.988 443.781 249.178 443.527 249.6 443.289 cv
249.886 443.127 250.606 442.924 251.756 442.682 cv
252.908 442.439 253.593 442.276 253.815 442.194 cv
254.171 442.06 254.437 441.998 254.611 442.008 cv
254.785 442.019 254.874 441.982 254.878 441.898 cv
254.882 441.838 254.384 441.643 253.381 441.311 cv
252.381 440.979 251.424 440.689 250.513 440.442 cv
249.993 440.302 249.621 440.153 249.395 439.995 cv
249.171 439.837 249.065 439.65 249.078 439.435 cv
249.091 439.219 249.236 439.023 249.511 438.848 cv
249.787 438.672 250.074 438.593 250.373 438.612 cv
cp
f
249.628 450.377 mo
249.848 450.438 250.178 450.643 250.617 450.994 cv
251.055 451.344 251.333 451.535 251.449 451.567 cv
251.634 451.618 251.896 451.776 252.233 452.043 cv
252.622 452.349 253.38 452.737 254.507 453.208 cv
255.635 453.679 256.506 453.974 257.121 454.092 cv
257.834 454.213 258.285 454.386 258.471 454.611 cv
258.872 455.106 258.75 455.478 258.111 455.726 cv
257.626 455.904 256.918 455.965 255.988 455.909 cv
255.637 455.875 254.9 455.897 253.778 455.976 cv
252.655 456.053 252.02 456.091 251.872 456.087 cv
251.734 456.087 251.616 456.102 251.514 456.13 cv
251.414 456.158 251.356 456.195 251.343 456.241 cv
251.321 456.322 251.543 456.501 252.008 456.778 cv
252.473 457.055 253.435 457.573 254.895 458.334 cv
256.08 458.958 256.818 459.375 257.109 459.585 cv
257.4 459.795 257.564 460.036 257.602 460.308 cv
257.64 460.667 257.586 460.883 257.443 460.955 cv
257.254 461.053 256.56 461.067 255.359 461 cv
254.658 460.969 254.013 460.961 253.425 460.974 cv
252.835 460.986 252.406 461.003 252.133 461.021 cv
251.861 461.04 251.677 461.042 251.582 461.028 cv
251.477 461 251.276 461.028 250.978 461.115 cv
250.68 461.201 250.446 461.221 250.271 461.173 cv
250.098 461.126 249.786 461.155 249.333 461.262 cv
248.88 461.368 248.585 461.402 248.447 461.364 cv
248.25 461.31 247.992 461.345 247.671 461.468 cv
247.389 461.591 247.083 461.615 246.755 461.544 cv
246.426 461.473 246.158 461.337 245.952 461.137 cv
245.745 460.938 245.671 460.728 245.733 460.508 cv
245.796 460.276 246.262 460.096 247.13 459.967 cv
248 459.838 249.033 459.745 250.232 459.688 cv
251.428 459.63 252.119 459.589 252.299 459.564 cv
252.687 459.509 252.986 459.51 253.195 459.567 cv
253.403 459.624 253.515 459.624 253.531 459.565 cv
253.559 459.461 253.342 459.277 252.879 459.014 cv
252.667 458.881 252.369 458.699 251.984 458.47 cv
251.599 458.24 251.291 458.056 251.061 457.918 cv
250.831 457.781 250.561 457.632 250.25 457.472 cv
249.939 457.313 249.662 457.18 249.417 457.076 cv
247.936 456.483 247.198 455.933 247.2 455.423 cv
247.212 455.152 247.451 454.944 247.913 454.797 cv
248.227 454.697 248.971 454.646 250.148 454.645 cv
251.325 454.644 252.029 454.625 252.263 454.59 cv
252.639 454.531 252.912 454.525 253.08 454.571 cv
253.248 454.617 253.343 454.6 253.365 454.519 cv
253.38 454.46 252.933 454.166 252.021 453.637 cv
251.108 453.106 250.232 452.627 249.391 452.197 cv
248.911 451.954 248.577 451.731 248.388 451.53 cv
248.202 451.33 248.136 451.125 248.193 450.917 cv
248.25 450.709 248.431 450.547 248.737 450.432 cv
249.042 450.316 249.34 450.298 249.628 450.377 cv
cp
f
251.513 469.062 mo
251.877 468.822 252.08 468.638 252.12 468.511 cv
252.16 468.384 252.107 468.094 251.96 467.642 cv
251.839 467.279 251.655 466.958 251.41 466.677 cv
251.164 466.396 250.767 466.074 250.222 465.712 cv
249.932 465.51 249.719 465.483 249.583 465.632 cv
249.442 465.791 249.228 466.333 248.94 467.259 cv
248.47 468.768 li
249.244 469.07 li
249.78 469.282 250.214 469.387 250.547 469.384 cv
250.879 469.381 251.203 469.273 251.513 469.062 cv
cp
253.713 468.185 mo
253.756 468.576 253.712 468.89 253.581 469.126 cv
253.45 469.363 253.14 469.678 252.65 470.072 cv
252.318 470.327 252.003 470.504 251.707 470.603 cv
251.407 470.701 250.996 470.724 250.472 470.67 cv
249.947 470.616 249.349 470.492 248.679 470.296 cv
248.008 470.102 247.079 469.799 245.893 469.389 cv
242.96 468.351 li
242.754 468.281 242.614 468.201 242.535 468.112 cv
242.458 468.022 242.404 467.884 242.373 467.697 cv
242.352 467.516 242.356 467.385 242.387 467.306 cv
242.416 467.228 242.493 467.157 242.614 467.095 cv
242.869 466.977 243.186 466.952 243.563 467.023 cv
243.941 467.094 244.514 467.283 245.284 467.592 cv
246.25 467.991 246.79 468.171 246.901 468.131 cv
246.964 468.107 247.045 467.92 247.145 467.569 cv
247.242 467.218 247.357 466.797 247.486 466.309 cv
247.617 465.819 247.738 465.455 247.85 465.217 cv
248.028 464.836 248.065 464.602 247.96 464.513 cv
247.907 464.46 247.393 464.134 246.422 463.533 cv
245.451 462.932 244.909 462.544 244.791 462.37 cv
244.653 462.186 244.628 462.002 244.72 461.82 cv
244.813 461.638 244.992 461.503 245.258 461.416 cv
245.413 461.369 245.549 461.357 245.672 461.382 cv
245.792 461.405 245.962 461.488 246.181 461.631 cv
246.401 461.772 246.641 461.942 246.907 462.14 cv
247.172 462.337 247.604 462.623 248.205 462.997 cv
248.804 463.371 249.472 463.764 250.207 464.175 cv
251.432 464.841 252.165 465.334 252.406 465.653 cv
252.648 465.972 252.818 466.154 252.915 466.2 cv
253.045 466.261 253.2 466.519 253.377 466.974 cv
253.555 467.428 253.667 467.832 253.713 468.185 cv
cp
f
.292051 lw
1192.43 171.022 mo
1192.43 211.281 1159.79 243.917 1119.54 243.917 cv
1079.28 243.917 1046.64 211.281 1046.64 171.022 cv
1046.64 130.764 1079.28 98.1274 1119.54 98.1274 cv
1159.79 98.1274 1192.43 130.764 1192.43 171.022 cv
cp
@
1192.43 439.334 mo
1192.43 479.593 1159.79 512.229 1119.54 512.229 cv
1079.28 512.229 1046.64 479.593 1046.64 439.334 cv
1046.64 399.076 1079.28 366.439 1119.54 366.439 cv
1159.79 366.439 1192.43 399.076 1192.43 439.334 cv
cp
@
.579605 lw
1459.37 305.096 mo
1459.37 384.993 1394.6 449.762 1314.7 449.762 cv
1234.81 449.762 1170.04 384.993 1170.04 305.096 cv
1170.04 225.198 1234.81 160.429 1314.7 160.429 cv
1394.6 160.429 1459.37 225.198 1459.37 305.096 cv
cp
@
1 lw
0 lc
0 lj
1600.22 265.848 mo
1594.12 276.538 li
1596.44 273.169 1598.48 269.594 1600.22 265.848 cv
cp
@
1594.46 338.578 mo
1599.87 348.011 li
1598.3 344.724 1596.49 341.57 1594.46 338.578 cv
cp
@
1600.22 265.848 mo
1604.54 256.531 1606.97 246.158 1606.97 235.212 cv
1606.97 194.953 1574.33 162.317 1534.08 162.317 cv
1493.82 162.317 1461.18 194.953 1461.18 235.212 cv
1461.18 250.57 1465.95 264.808 1474.06 276.557 cv
1474.06 276.557 li
1478.38 285.873 1480.62 296.228 1480.62 307.174 cv
1480.62 318.419 1478.16 329.2 1473.61 338.71 cv
1473.61 338.71 li
1465.77 350.334 1461.18 364.337 1461.18 379.416 cv
1461.18 419.674 1493.82 452.31 1534.08 452.31 cv
1574.33 452.31 1606.97 419.674 1606.97 379.416 cv
1606.97 368.17 1604.42 357.522 1599.87 348.011 cv
@
1594.12 276.538 mo
1589.79 285.854 1587.37 296.228 1587.37 307.174 cv
1587.37 318.419 1589.92 329.067 1594.46 338.578 cv
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/SARMTK+MyriadPro-Regular*1 uf/SARMTK+MyriadPro-Regular uf/MyriadPro-Regular ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (Fabrizio) ()%%Title: (spasso1_telecomando_6.0_definitivo.eps)%%CreationDate: 11/04/16 23.10%%Canvassize: 16383%AI9_DataStream%Gb!R&q0k(\c6,5.^cas"^)$U[Y5o7YOG/dLYS;bpVLYTAS3Q.^k!%qI52!=[<CO1bGP[jo^Wlr6Q>B]i-!@NJVVHL4)UDI5h"on_%]us%O"+$<k:[#ImY?10%LE\dCWA8fG[g*ZHDB]^N6>^)Z*=`WEe:_cSI]jj$$bHM'+DP.`O7l4e[;/\+&\6`[f8DMoNTp%a%9E?&%_%]KGqC]<\XT,-C/I%u\TLik2g-O9d^Sogn%..>]jE/-R:kC1arFWC'O^mLQft1Y,1g?'<274FjoVd]38$B+ggWpYqL])6a;DGjL%'Lk=aqm_8S>NcrH&q-X,^0?R4q_?cW/s>8,,nt8p6+Dt?\&mG9BELEe6Kdq6h3r;m0g4KUKErbA6luKX:c&M$_NALc&CGjtf'Ijp%c=[MA3ZA'<*,3cPdET*]CAhRN3_c_8b5jKXU8d[/U[Css(Xfpid?**)%S'qo]E*45jF^5?J&L^^KgTt"%_:@G#!3IDW\596L]#P]%52[[@d6Q'.p^>OXkXkA3`9e(),9a`R5W8r\I_%h`)hMDu&\8"h"QZ0mq(J,6_.^:2Xgd1E]pl>?4]>Kuf:MpMV"Y&p"@<'a9-3g8%P'U<VFu5>fG>Ys9rH_-iR%J?pdUI_RK#%D3q7h$*c@D@H45f;p@_\D7=##,V`;lu9+8ePOme"m4)B3_I=[1pf])k0G(sPZ<mgo8C%mJn.XiV*,"H8"d"54!pp'#CM5+h\[m#2955qj0d)J0L(+XtVQ$W<l8JTOu[+.`QQfgb2U41!`s1T0>UA_4u!?"TOOgs/3I<'\Mfo%'gi\no_^i_LEPCHD897YNUuH^RM9.?;[sXZ"['D!:['Y&1G47@qi.bVo1(sYqt6!)!iuR)O+obqC@I#.H[QK%G!$uu.+rpP'GPob%YY\qi`P>ClN:o?]o<<l/7X>th24`oeCGDK_$nsLKn-0'o10K_=p'g^WFSc(C5%9),\>@J<dS3;!;j(oWUVY:?3\s'm)-:I)_<X4!%]'c#i],&n%F*6)V=8$ad4^E3V=4MTi>i"pX3[H6$(ck3NSe9?(Ze^bn!f^Y^NXu_ILASrAgj(d[$;k4&m=?%r_.l);!0ntFecFLW%1Kn]^^eMRfSfK[*PA%p^kWWtLgoL*c9MR_'U8P8%%(>%Sm\e<=^Ko,cHbL-impG.uZeS3'efE7Ms'8R`#mm8:.h[8:%^r/2!e"K-%%,c=6qsU-3U-Xgks&s]hIub@t-2n2*2&cu?d"#mhJ`T!u*Hkp"JpK^8f=M2Hg%!s59#0"4gRs[I2^"PP=aDj/%'q\g'Kp6M,HEP@%a[7]N5F@Ra`#'p"KnbH!n\<O;Nb<iRLd="pEA[-)T-i'<T$cPh>2u46Q,<25J&C2dT#hBFbch=[p1s`THAi[DcS`J_L4_)"FV'%R%Wk7`mIL@^$o4/"U=qlA0d[X1q3`i+KF%?7Z-Y1gjY0n=rWBjU##iMuJDU:84kSd5`0Mcf<(sUQR47`_]dhAu+N$uX5YRTN*K+VE$%oTH(Q[*J9V?VLdTI^p<^GH_S/.rt%q%A98p;oBk:=RC=@Yb/l+%o>gc0N_!`=/.Y$;.BD$JL2M7)tZ7JeNATrBdqnaUCi&nAC9VI%j7SN#r3[\j4`AEbXDum/r>qUHq7@_"O=K=ZXX:8QG(0g!+JKCL!!8B)TG^7,FP_fi/OU-Q]@gRHSkUOQ(b"T"Lo3/\HFt>NR$[om%*>3Ss4qdNFQK3.\f6O,W%nHl2W:\q[fJD/FK7>\jLdjK1EWN2+cPp7O)-5\QjD%<(hG'Zc$fLE$qlf+#^$'h,J!hmI*dWpFE?AlN%KF($#M=+f)8g=5r@Lkn=C;&N[XX7hS'iRTZU!P\^eMi4I+R*]glQb]NBFUT$U@s&E,Me"*`hj(KFu5*+dtQ-cIqAXChRYsI5l'H0%UCXN\8q4>H"'P\DUjbG$k7S,[X$>ZS]cm'Q\F_EVC3(@Y."s20'E#HB4B"5omIo$0:ojjo(d:otcX=q4%Y09P?k7G<TGW=Fg)bd9%m'jbH1Bo%/kr?WT#\aO.5"G"LhtkWE]at0]P,f<q`q>/^0R-Jd*2Y<*MH^"g@;Fj,X2^#DRiG27ieGFbTj'bc:`]Qd0gY3e=?&ns%aT;8j?=X#+Gk(shZ*B`R)p+l782aqW:&p?:0k_,rE$6!0ZgABFeI6riJ2P_N7LQO#(MHrE2->Yo+N_[>c<+s-$&#BPrFin"XLB<X%H'l54'!BpM!!^j%+dAQNQb$9^\NuH45rR6\0A']TT%XNN/c8$Zdoh#?#RC7Gm_bpr4:IOOhPp)H2*g`=<=""?#6ls]cOX'2nd#$+%f)[^Qe>_0%oFCG\eIh_G^Yha"55`2ls3_/Ep\N_OTc_1UYE(^Q(t9HT+8'WE*]C/-r/8T#"Q;jpPXNasB[pK1+Jd8UQ@9/mCV8uJ%riHi:gWbj-0Ofs3L,@LR%=J6-b]1O.H[EmLf:cQgGs.f5Y&Fk(GmV'<?9&;8s'gE]5a!3(J2;UbD?%I\2pduh*qh\")u;J1$M/fE%$\,YZmQh:%kc#FTd/QQs!od7bqa'<F2FX&YOS@&deT5]6EN3Z1?<E[kct(7h*c\\!=<)j;")_LPJAVGUBCAH#F0QjZ_%6iN:eE\9%&qo+_#G;YU69jEo;ZgQe\c.+;Z_mB4!GqZY"pqZXJLiiqZJP&3Br'XKs5%IjM-+UiDOIXU<$$V@KB3Rkf6UsOY#e+sC_0_tcofm/%88<chMJ43("0g[^!W=__if[PG#!8JWI1>0Q&Ts#TRC;[/muS-&<tNps(3]u#"c9H=5[NpF%kt]&*!,I+]`^-29Y+UWe8,Cka7]N/%Ii?6?i!X:Z^;1_^a;&"$a7(!OMZ2tXW*l"E]\<)Z%&e#J^q[adIg1fo>8R7P<N*CdecXBbXm"O>;!P,I6>.Lc@Qg0D@kEpRCL2iP%cQ1VVL:ut\%:]M&!"hb[]Aqobf"TT)?UtL,.O?p2Ite)`(</R"X8eA!HL-^TV2hST_]4Yj2qi1olfC>]ao6@/(u#PIIZ+s]=CPIe%nNX`?TJ-=6?28tYQ#7uLqCg]bs5@On?-Ge<dq(836RrUd\DDcZX-8_fI;5ZkQ4MaJZP&Zh`"2/sO5rQ;YlE:m_uKLNQp?>OZ/PVW%AN52<e&1\Z6@QDqH[L#92&l"u[1%nkp^[mnLka_L?g-])I?Wl^9ZsruRf<O@!1&'#oq!(a3*t_hf)]9WqPUs0,^4kqW'm!G,C3c_%DT@^F7gi*!.\g?;_4X$6\V-]uq`S0pW3Lf)4F)7VI`UI[H?[#J(5s=1ZN`K(.[&Gg;lr/hJJ#KMn+9QT8-r'ZOC4C`lG5WorRO2B%GLYttHp4LlK3IIS6!qDD;=:eeO%q45etlK<pa@Qo;#Q'Gc].m@"+sM?[8-dL7h&MRblCjRoG><6NV2&Zhk\75o2B\:bM;$gUA8K.%*jZ@Pn"%0PT'Za"fj_C"p4b9i,<YHbed&8?IP<)@c1Qg^6)g@`ZU5aOAo>1PJGB@07S,RM3S;V'57JAaWR#Lp=YhVpk9TD+0HP:o%S\<Js0/PToLKkeKD[%/D!`C]GMZH$s?:>3A+E0>u7E\Ti+:Ei#6QX<T/"pVUoA\d5i"8.bbo>dhe:QWb'=VR@bsK-8eB<WSq$$1k%AnW/nhWa55q'1?khs;?E#HL(AD4;Jl*)UIXVT.]lE2)urL\:)"@[9b1IKT-`(24OVI?pYr((7@"WPNIH+gutgj9HWm\RkohY8eN(%Jl=oh2(LdLbr+iJb]'[9'Pp/%BCp0XEhC\Mg\#<`s4rls"[603dq8jRb@!26_^t,_K>jI6I_X<,Al(qC2<8*k3N9AtNrTP6\,L*"%K\<O;3X5#,>i@/_EOd.:-F4:F_-cT]Ig-/q1g89$coF4Ld`Jp>YQ'\\$O"@Vp@mGHC9^5cpF?W/;ug<UZ\QMX_-]`2ii_.?J2"=o%9#"uS/1_3_2.0Vt&.(l3nc/PPqX"Q%ZQ7:u6+@G$)&*?@U1P?n<EQZ:@ucZMir*bJb4Kj*(aU\r1h%$#K](oY>?b8bkLV6&Mph:$%`lHaE[2og$F=?1#bSRb<./u[*X_GG-a^e'49%80TV0;lB;tELcob2/';T'J3bL=i#YURV/"$q3!Bfn=P+LAM_T$r#A=Yi.%[J.b7%YN_D;`(fBY9b&Lkap-u".GL]#FpE?F%\s1uBr6X50q%$9_PaMdnIL&j-PVq_c'm-#aU&s^/T#^[@*rC"NdjRWG_2pR<bSG*lZe``%6*-'[@H,DGqHkc,.p8@D`e"qO;VTA1$hANrl:pabAf`=[X3V:-X9oQdeE8rq&dlT!Y#kOOeO[Y5#M5u`+7L2?>/N*D)2df\a,*tL%e(3\\O=)f#V)/OM0Mn?'l54M&AX)IIPr+ee<G`&LGHcXNMQ+0k*^+1<lkq%h3W]]Lpma:qPB3V$l9]7SLM.^0=1^u0jetKVi#R2.%at6.^"4Q7Ep">3]#aCZ#Xt/;2Nn<FeM;qS>qsX't]HA?PM!(#'GGs3cIR).b8.g4aI0<!W;Q*0BEs\d'!%p`,?,p_i(=!@kogZ&5%.!_`r)JZS<;r>8*r:H-U@EL.QT\;.k!Wo4]nCGjhg*_ePYm_8d&_2nM3f89-<%c@&;-h\EB"a9nP[1%m(eAClM:24V08HUECnX%2%==?=L8^(p'%aKji5;IMgpk<#V/m8W#0*9>[L]Rd8p4CR*&KT[0&m>mjF6*fKp_cag'R)/dgj[hl27?hESk1b"I<@^&2s;GOkZ!5m%*"H_kjh(ic_&r4h7Q5rkb;*B*ecD80Yr6[3S\Mdp":HIn/h.:*)s3_:nWL8t#HuFQhqW241/rPp*Lj2?eWRa_[H(s&pXU1-WY@h0%Z-6-,FWX/plL1&9%(.1291@`d`8h@1D@'cVpaJn-KJ=/?FPASXk@U4:epJO0.2/m(.(3#rQ^_#Zoh6Pp[e$h9C/f/a/^jf$ol1f;%KaT2*/GrQ*'n/>eJN&oO]3Nss0\kKn,8IfGQO3cR9C?G$H-r#e';@OP"_J05-fO5hmlfFI]:Y@N$L>Yp15U;@,88hCQ]?[HZnGS*%j,)'7M,jBR<O"7RGR<OKRDirXP5F+t^Vatr&NRSLKorkDRn9D-0/O[4ni$M.rER5fo5ET*HtUO2,!X(`gNC-&qsZW`mrbMkO4>s7%Ne/iur]AJf-aG)6fo^W#IQ90/b>Ticmd7":lKreC1`FTcVjX;>WINBa]nC#0VImiOf^,q*c7M_(Mi2Vgn$D\qq%r_]QAJ\XrAmk*%rqqo#Y""_R,C(C*KU;/L=ZGd$:Ae70FQ[ej@pTZ)W)2;6"51O,1Ap,Z`j&\'1P#;ohC#EX-^e1lRnJ&1h7>&!^J!@r'V3Y0(?X_]%(V3=poBT1Bid'=;q1c@#(i3quJcV]7p00@"^!KEN[6et-jlX"5MdalnELlTJgtii0K7pdGE4f$R9*c8[@OSaDc9r(ZmK30i,?7>i%T+Wfr)I5Mp/:Q!^HsPVMYjO%#8>V2=?QhR,12pQ_M>6l/i=jN_f3s3]a9<G4:aoK-3q0t0^hZY.U.Sqrrt[HP$@PV5!kD#16>rQi%;79EuE>0akg2CsbYS_GTiDV8\1qc(a)u3aF0PSj^1VY$:WQp_9F?=o>QuA\g>I!X>4QcdLfg_t1o?tt2IR9Y$A8.Kune8VO#akGq%LEFQP*ab`A]<#Q_FaL5iY`3ETD-0-R]FV?`gULIJo^h"-*`+=#)._`th+b=Vh<b`.-D@Mk%dZTr;?dn9)cf]Y^XJU.De%8GpQ\8c%LsgXiO'*UqPpdAt47#^4DB8\?cBXd&_MMhOK'&TqpNDUs"Ci%lWELrfqc,<3R"Sr_s!h/!20Y?WFP_C'j(Eu3LmT0UrF;'C=j7mi%r]Ba3008Cd'$mP]!4lqk@G8[Tim8)bWhgSfG&,8s^PgicI.[&u%DV^FUiXna/=o;7DotM8Eu:13P3AF;j`RG:kC2at$'U5^EqSj*%Y.(p<TO,/JT"q'Lq?UFgE.>qh]4T19>f99hi1&&T.Y#!N-@T2RWmRVA/-Nl$OK7o1"ch>AH$3Ym"jbf?T)73#Qat*#H(F>M^D[,@%c+sG5'V4Op?chXApTfjDD[SE!0]tc_qDTuXD2!hC&q\uC^M,-!I"&3%+rh0D5!&[@At"*9!rf5S%",g#T1l#^\=P_Xf]at357:No%9/M)B!%`Nn\k45gF6dF=8sI"iJS]g_Zk%gHJ\=GoXM)Pk?aM/0?hg0];@8q1h1_cR4gKK4*r0ipn$WmkfV@2/cF[HUZL+i1SgfY2%^G:X<h@3K!Sj<_5brP7I^7T923s!&0<sCYh5:eV?-t]>h9=R1GUYs-*I1(gGK3P(]HV>&0mn]OR=iWPt1sWt1Bo`0rm3\UtBi?3j%[R:K1H7AWRCZB_kKrOkT^\XZ6[O*K5V'"s*1^FMU00l.sK$Ue8]e.rKrikSu(@*(n"@dl0eZI:_K-#Z\%8iH%@&#2nQNgS)qCrEs%YR#`oeM4:>Jc<fV@OqM7km0b>a"6R4;4WaU_Qi$26Ag$n)7JGd.nrn9N</pE@>T\o/slpQo5k_Y2f'4THiO[ciC6q?f+Xm5]sP#=%]1)k%4Jh"402#:%/.ZR5B3%P3#tFu,nQ=(FRhM/YLdc:f&T#;YQ+AO*+l"`>+p0q\\/5'r@KP"tn6BsPBIoPAGX*g4a@q8?(jKA;%*Ro@iq2OJj-!!oS,YTr28oKHqp3"/,#X':mVij'\R.5+m=QnW$Br'pTUDVfu*eA!(_M.X'NM+>k@3OZVi?gmW=VU$8K>>_?AThbR%#fOmpO%$G&(o!enTsZ%OELJh8$Gs'h$F9h$EtX4>J]E_&U@Rpj&<Q&k%$hQ(+qe:@Z%>rGdHWlp,8,=8e6teQTE#(%43U9`2p8g8%;71$uca?b%@j*pAQV;eDm4Fc4_9P6HQbMn"Z')rkr[,]p/Ac-K/gG%4KmDhBp1]tfIJ,J$=,uFXApWJP-pPOR;q^pY.S5X:3TCKk%ZS6OTdTB3I9rWDNHfoT`O_mYEAtCU*B`<AYpf=?DIWN@,jn`N]EE-[_g7Qk+9Xpp#N5^A8SCdqKkj(nKf2lZ</be&QH=/KmDi,cP%a--lkI4g)9lcfm:"k$_Y#W0@mFW]_e_J"nsOTljUfZ4;t&K&s;&s"Y;l\P\!f)RXKXZcE>moe-n(K_Hh2ap(@Bbs96WJ_37>3e7Z%8tBchiM"Z]4grg^-Iu)pSFcGRADsC8bT&a5k);4m>0UKP>>-CKR&Un>kfFXq60_J^;!]ZT&2sAfgTU0SW9$>]5[YPn>+(s&m)kXY%@u$=nU0@8FA`tDHS1r]q68`uGmO(,YOGtE4G#\i50C#*Ej/E7,%]`N@P'0:9"JY.K$AIj%@P?m[TkR;3WuQ;HCk+*<Ssr8Q?EF?N%_2R<9F'%5R%&6Zi4RaHt>?<MX&f-E_gKnD1d!#9O*Bg8=^<DcaMQLXOZ#I`Y!jUm=,;'>\g\`u0rGIEWQhu2Sp-7=d>^%bY^NY4U%e=6Y$:I>O.0qZ"e053]F$X:QS3tWDb(Bg2(WlUnFj[tBh]:4Ed/q&3$DbJ("rl\r3/gE2c3K9V:,Wr).F00&Ol*GN!%qnu&NpaNV%D!RenN'%2a&]"541K7\MM=>mWC_HE#HVrWX8EqJE+>%/DT7NDAaARbe^7PJ3qj0-/&1>nGQks:kk(uYdIj]d&f]4Nm^ck85SPNIB%BF]?\fkA%\iX._t?hZ)ZV+#$O\uA_&G+18f_Wh;@1$<cbHda5'0VuM.n;YHQcQn7;X3=5[@?,atg,%C\U-G$k"k*4^h,85-Wg*HT%SmMoF'Wq]4_Q@/WY_2U!]6\n!XI7`BeQ+=TPPr.P<,qk/4+^Kd(p<0rI^Yf$$56JO[&;o%?39TBG9Q"1&:eU8@-;-'YMWR0f+tkg%bSr9!P\f1</mIXfa7LW(CCfIBGStYpqht-E0X7F16G@J51U_(98@`HD"hd@<,_IiBb=j[5W\clLL&97*@,!2<m>*nf76ZV-:K%e8%4uHl"F.ZLG?d\3$S)ZVm\fmgT-kX-[Hd8uXoXrGe3Xh>,4mZljp?VPh=R(@a(@U%#]l:hq,XGB*C^g36S&CH1RFmBA#P"Ap=JIGZ%J1hL<(LYVeD_m7BPIYYASFpp=k>ul9AT(>MNu^`iCaspfF*$f;&h5C'G*;K*+)Kbne;Zt'$)DX:/_Beha)#RYqR>U)@06)D/L!Ys%Tk^u<H0'd#a\GQOi/$SkHt$oAA#->86tc\,NBV6<%XVk5gtpC_D>Lfhbd2;uj"T(nP,F&]Y$QFu"ZpUgW5)jbmX!stkC_mi=6r_s%s-ZPi1J@$T<'"[#<9RBLE^LMj$Td8hle]6_(#\/ne[%F:0T%e7Q/^l&D2u;YZ%m%@<ckM%]HA)EhJ>8UqC""@Fpk>E6VEdK*kL1E%:3-BZqI%dGf5gj6s.#Bo#BSH_)1%r6s$":FB7:$<+Tm[B"*n63pom5"in^h&CE^KV/H&T^Kge/G/&BFdIbktMPP3Th5J&WSJ[#<:%lmd.eQK'0XjVmI4-@.oHGdEB3Z'L702RM>#DB9A]/7He"Y36qKj@hK00n(NEU0jMO)n@atkSa>m/03C;5J,VAGJc%A'i&&O?f-S6%(j%6U-fC1f1;q`X0h?DX/U"GYkTa+Jqh7UW>GD?*e(;`Z.A-R+QL^I.A&Xi-hSE<gSp=AN;V(i2H1'Gs8r:FQ>sM"hkk6>:HQf;T%aG/sf]VmrCU<dGlEs4\Ur"a'rLL]FSdqYHk:85D2?TM*DE[C>S(@Q:mj9ItRgnH$I(@]>))(^^/8S9],SI/Bk"o%'0Q&.[%bQZ-L%r98lP8uk'q:rFs;hlO#Q>Jf5E,/.XIq'J>@0VPbY,QgAR<#YX#j`A$c3/=>>_IbVf!B51OF3@$&.'V3g0"#S)".R'ek&IR>Ug1\<%MH\&!Quj`1p5$hR`r[d\DYrs(2O+]Y%!DHX.nnNY>D?R]Y\R!NkToH$Pb4cMLWej*N1@npJlOS?rlbXTE;ki=bERhd'dFWk4iX8[%[k.hC?F&FI?]]:'Nb$(DJP:G8@q"hfb"0;'C5W4op^?:Rje$A,S+D8pSXsI,W=A3'_R7Ib61AUT&V)"4cF6X8.8\4m?*tF\'OE4(%>Qo?CZfLFC,TfB.R+;&53!ueg\'&WP+dODnDVpdg%_BpO3]f?`pBV/R]bZ_45\h0:d%?,.m,$]V]sM9-BNhC(g"m2Q@u^nP*A$3q%.SKQbV%tc8(Ju/pWF-lJg&//+SSP%LKkOL:G;BVSb_`_88$_tl'hDN\F$=W&E5m\C$08_6a0$S-'G@kCOh>pt\L%W?,F6+OOhIsN%LtlIEq2uZcLR\"A3$]+PX@5eC=;&iPhWtOhPRuLqPC8N#g0uD1Keb\;7k?<p+gfuod0\_p?iOu&$c@7<#675?8IJS^kLq1$:N7lC%m'\sO6M&GHa0gkspJkFlo8/=*ji$ki(N!2o:U%Uhr`Uf)-ZaY[Wo!cA<0,9fS^VE<WV9A22nkd?a,b3SFP4k?qNHLqq%ETSA^RD6%qU7i>oB8sPH/[t-]''b)ahaT'!g.E+?h7F'*eKbnEr3)N%mQ]alm=39IKcUT25I?UQ;'_"`ff/h%jctH&[5N0BYhFOT4_pmDf<?C%Il&eq+03=9b2%t?0aPg(N@%KlaX:L)Ht!hd&5R+8Gquj^c$p<TIGLBeLQ[eS8RmUtr;F-S.k:c_I4Q":HUc!5]&M/+Nn!E_?Tqkp%mr"5'pF9ZjVB9-NS\cq*TKN9'^k.*AT`uBuN,\;sTts>*;bOVp"R!PqLLP&AfZ:%d"eX2"2V,;WUh(_%Z",*)]6kt)nH>:p\E1L=%QAJ&`]tQ:8R#_#%L\WbI']p]Elg2uqY^ubLZcOebl\Kf7S+)p(_3W\04-J9OjeM#HL"D#^Xl:gA*t8o"4`N5<HH,A.4T!YV@DeCR%#)61A1&k)&^*2#M(U"\amtFZj>icJ$fuicm-#5(K!Lq>65ZWL8;!NFZ>m[ORA-6&#a..N1`7BXSEGGfj]X:-4*OHI*1QYaj6.R'E%:\f`]ZZf1n2JebeOn*Zc#H9h/"tNM3<b*g:+-/EdN8<bcqpsdX-l,TRHH.4-q_0[](s`D]R2'5lnYeh,oC)Tq+HsO2Esn>D;ss?<%?SK37Pg`<NXcM4+\/g6/JZQg,$N5:GALp;l5P(-P@At!AYO.:i2r&cgGJ8scKQI/W$`/=>n`$KY9>XeamT3Ymi[GW9=`g&1dfP6=%iW?BNH=fiCiH3CR+0sd3VcDetT>-.WBd9peZg:OM!tTB,5fASa:of'CdeZ>u-$M!F48[7b(1]$uhYiIi#Goq[-)+ZsLK6mM0_OTZ%fT9LRE1"d%begmRG\EKOD_4'5SCj32YJjotqbidc6T<D<k,4dWh^i+Ep2C2He$K',$Kc'Y^h-:6ie*Tj:Vg!-!Au7q=Q-sET`=.D%fg`)q:?/6X/09q\N"j;/bVR[16B]L4c[Qm[js<]s@pF^%?l-j3io?rd:M"moKiXL$CLHjd_U]3Ff[-m@P1ac)WchaTJ/#3j6dJOM%c\]JK6:sB04IgAd[;He\L']#41`hP?%FfnJZB9"R?!.Y*,b.V18qhuP%D:ZbM@U[n=EQ$Pp,B;pRClgGUQ5^V*B;/k.+YH5(Ir1\%&9r"HAL+&"([!Nn-]@Q&P\oNo^g8*;k-od1#<'VM:O6R2g[B"f[9V*]r1&,K6&q3]TT>@=rR\p,oRl)5B>JO"q.OtT\/SSQoN5KK%[2(m.*EokI`AUEQ:Ot(mXl>Idj/%>&Se$5OMODZ\N?`dcq">Hjr:dpWYnnWU6SfT:jR$:#W%2*'IJ<$Bm^qK(I$[6%pIAU1=ML./%]/PgXlca9bDZ0>cqYtbs:!/]R<YfYgZm6kRWaDn(bM,iS*.@9$^58!_/X="3:DDrZ]i2Nl:RM0>lfM(0;4^?BH5*4tKgg!T:mK>0%niYA]:,u13P;%3KY$FLu'r-.ZFNlG/T-[&=&1%k9NTqq+5>0C`E)NjGd;]eDou1NI.h1^bb!\4jgL.;ug;<2%+g'sC.`;s\S$%3f%i*m>JXcCm*81L\(`m>BOPN>-7\%@?`aZnV.&c8$FWDGCJr^pt?)/cbu0;3WqdbLg][[^"?KYGTdCE]2GYh;k@)+p990DO$%onkgh%pEB_kY?I.L;^90,,B\d^nioUBm_@=4FmE/;Db7>=MZ0]45Z*c%4#kIMQWD$<4(Kte:mrW3,#3hja,K<n[_pd93S:93V<^s@73P`Z%[%Q2!S3j_Q.J>6j!iRFnUke/&)jS"afY+0/&fhrX%i$H7Ktc0ghot`u$FTAP+G;$sM$PX(E&$"T^GXU>UYN?'F?+Q/.s/Ik[ag!L%d*%3:9eC3ib'(*32ua4F7(=]tBI&<9=5G?KI00jfVO@jFX3o74:e)ji*ZN7-)%';s'RDc-=])DlNf"'=jdg.4QFJPi,X4q,>::h/%F$+Gbr6UP8f,?.1K'deg6*E/q(A:p,G_jDMhi_fMS]WFRXEO%%@REl@/%*@1ft'\$qNP_XOI.FtE<T@mdW#6"EDobd,bJQQ25aVG%(Xuq?(S;Qo7jbqkSQW''OW%/&nV[(`bn@2!k%AR3V#+iiAhPMQ/cS_4Q[HdFm[L"O#S-_G/Rh]S!pVHYs3WE"+@oHi>N&:UecO.2%@d^34kf;3>&*gF"PQMaQi=-Ak)mr5<.;dO(E[PiQI)Csk$&nT$Q0R`OB]hbZf!-f\RNC@0T["WFP-',6m:`^H=]e2[WGH!bV9M=Y%#FMYM>&De\$?^NDe3Ltn@Z0Yd5>l.8k5m1&1__H?jgn+n1!u6,f%KJHm&9!.)*rL!a?S`P<P/c\DP([/'fd<(<rsh.;c*$cl?*m!%&^IF>Ya;.0pNnS`cPie(W!t>PGkiV3Rg4bhUN^l(nHg,&WZ5>`7Oi-WY-:nD3j(0nX'3(a.i=_U047skmoL`.!WgmoXB+\A;nSBD%;!XJo#.`$#WAVF3m(`TQ29Lt_?Wd>G]k]S!?=,)lG55T2JdB$DNgQSTRh/[/Ei')k5mAX%b9,p8r'J,_/6buthbqeXJ&RlQP'cg3%S0tVV!(*YcLYJBG\6t1QHkm*tl+lsWi<?JN<FKK=D*+A,^j]Fcm)Q%CHHM0"P,N^WGIRqU2\;kjCY3j`(4ojCFU,H$#!5_#;QK+,%9)4gG;L0f<1J0(,GPK:;+&3CI=Gch?$Nu04'*C+)bB,^J>kj4nL9r0?r!GO6cU/6%ESNVql0k/bII[OSXdG_2BQ9Y`6/8+#luIeO%ZokPI4sgL_oHD2=qAdVtd'pjRY9XQ0O6'5O1,r2'KYdBO(,\(dB2J4XE>onp=PMcHIk;LB`4_6$,eI*95%r$l>(NeoHOlYtbQI+L%=3@.np`lKAd..W9ro"Ps^6GSgah5ne;5rV1leFU%1UZF)'r`Hbgnj[Ji42Cl^Cc1/;R]RsAs4IC4W@]^=T$1),O_p&!krtOBt3ec%h#;WLLuK;KQ0MS2MJkS,`-Fjt!c<6#I*]6`ddGf_\Xo:IZ.Y$i2gDRV#I-u'm)\%G.N?TVi-8Q8F15d$.0h'3nK7O0?9mgo6&bH,%qRD#naWiBm5D-5Q:U_n':ZFfJB9JqLObRJUZ:Q*O_I04K?5"WG[-;uLh"Y?%*i[H'UYT+DpFZWF_/JYTdOiTd%<Ps6&n/PA7=%lN%LNFkQpsJdX2cc[&Gpt-a%GdJAm;,f0knd42I='t9iYr%\Zt3=YE]8*TaqFLJB+SO62D#[NH2[9h@Z6EN0+Np"3UHkqJ,$#S#d*K5%<o(GSnilLBUk/1>.t&a:MF`AX`m'N6b&]=tG!LJE:!X/;9;BkV'(X3ih.AnL8k:HtZ$!7^Q60o%`k&R2c'02GCB*BQfrXGpLE'3d%'J62,UjtlrX2aih'phE/k^F)>O346a88h,T\7tAVDTa3RR>A.is.D'sd&i"lAf;"$20c(eVJ/Fhm0D]hQ0daS`c)GZ_],.<3nAU:%f4C%e>uh9[:qJo@VNDYOk9\MHh_IU5<t*4peX<j)Q/?G'IbP3<Zr3^oG&!n11c+U`ZO06M2PM3:[hpQSrY?0Wk'F4j8`rhaBtL!t%.jBCdY>fR`8<MsDo^]r,jY\5Ti1'T1^-*Ks,I0k4le]#nd\jCK]YI'\-CM-iM!'a^UOY1<HiAEgb/toV8It3/83nRI[/GGspS'q2%pAja2kh+sY4uB-$YD%X8(?rlbh82_1rc1!LA^b(:<C0k5qQ8Y.4OQ^=7eO(A]EB[@2aM,85H^(LJKkoIb6(V>OUc8PAauKd;u;nf%!$QJ)/=ORqh"J9cp0gs]bt1Mgeh?oqO[2$hg*Jh?RCI_P@\c1\b$#B%F]7%/obJ]nnONZg,9Z8h_u";L"@t?'"&\j-Nm^JIetQ)0%?:20NYg>p*G-S'']XB1X]TT>t(-q1G'ST=h=1E/I!MlR*'Ibn4gDH`kQ<QK"b#?Sr:10msoM`G`OWl@K=DrQ@i3:g$8;REM5=EaT%YIi@++S?aGB.>uJ4ZQ48KR@Jd!]%=`<.D*oQL>'5"EF2(fI<%g;Vo6uGq2r'1Ji*19K?S`Q-)[cb&A(&Q],6MI_[j#Q1#0oQ-#;o%W,Udl&sSW$ZX;DQ,2UgR=MFI!foTp\'O(p@]6N_GHFoFqXUuX9;r-C<mM3l3rJ+']Dc%pb9q&?VZV._`o'kdQG>b&3L15;BaN^RI%YV]m>)YAn9L!kYI3M1Q<84kn"eT:F#,;mXn[&uCcq,$6[^@XTnqFTE=2YkdV8(`rR[f)pfU&=Rrl/-f7$Dkr'[;/N,j@d*,c-YLd%7CSPUfS@/\EVEo-rpMWn%qS?<YJ0(W1L*hP)#=#)g>+SVq:65=j4j-GG9^=,H>/A2XbMV<>U`)fq^nA\T4qH1W8)f'm`XED>.Gq/%4V0qZ[_LT94tHljdf!7kC,[FI?b#`Y@SiZ'feY;T!T,rGYpD;u`OEZM.M]'&J$APh.UUF_B:=P99J`AR@BeAC?A#TRpgS2+ItCtZ%+*S.ESo'NP23Ij*2n3UNd"Pfh@CfSk\Xl0,g)5j1a6^?tX=Rb>^@&82K<:q@JjXnNR3dVHd-tq1@.&9XEg+*)=cuJqA*b&a_C[`i%lUTsL\tk=VU%*+Th"QM9"1EDbUc5,GQQf>%PRB>_OG7Yh8m;&NI3,KrC%kO0C"X%s7TqEC>n/<@RhMNU<,R1Qqf`fiGp+O(LCe0m%D%r/BQ$F&d*Lk<_4Ars-?T^L@BI*dNgpW>8)X)@0Oku>"KP4ACd:1ir!@_-7?ond^O:Dte,&Otd`"^7L2%i?R80<+T,-R2#8o#7&%Z/1lpZg)[bY(>!\:Wu3hm)PR[2/Z"-g/k4udmtB6e>)a9\Odnqd$Qh-q,L-^Q7fOf=rk0Hp4;@Tpln;Fh]4$P93H/OQQ(uNj*N0F%-VXm%2qU?Jm)jkM;7N3dAe:#h?CpEUi%YHWNNH+ulaS24)?K])kF4#id%=MPJR.9t@_=kNT3f?Lci')),sMij(ON,\d3SJhP*+A*%)+U!cEmss0<aga+q(A>`6oAX5iBN,97"topZN`@?Jg3/F<s/X?d(TA,KWf!pF7&?3+'pVCS_?[s-0^S*FrPM^5;YN;Igq.LZO0Y9%>Ki\@muJ,&s*5=4j>,agHY[c7n```a&`Q$-f7Mcdo(2$?5BlOVc(FU!i>6#8+W`]b+nR[1=!s=-q(&pU0U@oYV#p!dRFu^0%ID@R%MjRUq?aXnicW;+*KUfID%ZH^r8X*;N]8,S1M^^mGWmb7O7P'D[krMmDd8PG=DhJD+d>LGSc?+.d5)\:Wa0s3CnB2KL>Ve0.RI$q)%^,L58rP>eqM>m.#:=fU%'p/Z*P7u]nX4!k)1qtbOX.M4*nLd:pqYg+IWQk&R;X+NR%f0!!W.[8[)O8R+7jTfX]?ZC\RlE/G"US+T%0=XF`L0KBV4t"FKgFUq+L!u89^].cKE;nqi#W%<?hir<K(<87,!@Ks.JE>TM%D_$j_5\1E?rKGM>.X,+2t^MelV;lY@87l.\4R*L%kq"m[5KmAX=7U/^o\[_a-dn6t'8lcC;@kppAU%^(F73,i%F=e&Od,JGF)pVKTkD)H?g]LLPoleXB9gl]Uf/Hu91mGR)p+=0lR,;)%enPp_AUJ!IV51=M*Rblp]JqO%V5dp-d[<k#hg&a^](RDap7_(FK0$9apcM'Y'YRAs/,B0X;!@u;pT7>[1<eJ(3eN;>*@#+lH]+oL%0:K^e.\6;/UU[GKcZ8S&^rD[+;8$<tP?))3ljgFPM9a$o0I<;TI?;*BG6Nk\-1-C#'2,]r.E6V@(e4,Y?FqhpiEAN?V0KRpbkDkL%q,)WbW?[QnT[:j)Z"ZX(^"/S]'Pr&#Td$n_03FLgMXP&IX.<WHe#0a31V$/JGhOj;q!$;UDY=*J(u=b53p#L%WuF?5/?(3S'U71,%L1sOAnK]-K2'pqY*0UG-3[3*+c_AOdA^>OQ[?3b=ZH6u]\^u;g1n1"!dc=ZgU)9&s(d93p'Y:`TL#$GK'V$(coEfI3"S&1i5emf?%;='IkFAf$^'EB,6$'sAmh3A*CN6cmO]rsE0FKBVg:3)mpU)/!cY+Wn/+k#G*^-:Gpp=jp7VLf!)'t>4HrC,PoWFV4mg^t4g9ihFH%lAj1u@Ae7)/"/V[Q%Xr.]RX*'Tud"$mN`/[aY@^VYJKKfmTlhb(V#W`7*V%uHEpD]2i@J/JVV0^N$1^-0r%j'9=E"/mjoiYmNqrG%<itd!,l-O\U$BJ&I"luX=XD/Vr'b6rn4@:6:j&tX8#JH.V=PY$^B(Hi;'ZOhd\fk1JLL>0J3$=%)DNTIjJL#I+BG=9BJL`3V/&t/%>"j=78V8eCbX&=QHRA,^I>mTTnsRu^9isfq9hi80qSfnq8K2*>FbTKdPO=!7n9M*H^np[Kjgj5]J,7:Jf.\><3iCRTS).9L?rI.Y%P5Xf2_PfO(Fba1lJhDt['0^7TicJ=,*trR82QK1b^B(*UD6'j%oi3C%A.ZToT2-Tm]1XpAK2YXLr[J&pULh-c4JqOb7DO^PATAj8%Z-<26?H'7JZK2D<pl<6()j2T@L-H?lE%YIJ(s9J?B.o@gVnb<4h\4Z>1;LgUKI:W2U@U[`,I^`PP7mh;XV1ndN\&k&c??jn^+(0"%.%g#Y.1ra(NMI8eT/r1+IEkD@]8T.)3aJI/Gt;=[>X>*$kL.gom2EVG0]bYDG-BD?JqS[M0%Z?Y?m;sr/m\?MEY@bu[Jt?[7$I4J%?oXKG[&<5[]j`sL`M9aJ611=,R!j(6Sum`\_W$6C"YDbrPh/blh3.#["Us=R>nYY`2=Nn!bgl$cU*6Z;804X,:<7Gsps[/4!'<Wj%ijGs<B"OP]UE?:iH"-RYkY)dC-n+/lThWBDKd0UY:?i;&S",4SE<l]%,-)"kT"H/!UV(U]<H?dA":XWbYFjNTk[]&Wina+c')c.T%V!l'C0>,Ng6Pe78%?-K\a*0lNVT!p^g^?Q:"TZ0ekE:T<,)qrX@P=XkZt+BcQV6st&JSh1]P&+.Ojid\T]f'>iFppSeb;C2_@1>M%I@';TP._E\KKK"COMPrKqf5^s&fU_Lgg8(jQ,;H.4q'eU(P$s_.[m+V;W:]Um]f$s_@_c*K;Qi7A,rK@6#+bg!EAQU=$]j;MCGth%Bq7h!=t3]DY8Z$'g?C%;"lpc[c<h9]r:+_eBp[ls.F#sQQBu,lEm&8l?,^YPd@[MM0b(TA7[c[)R^0WaQ,_6&O]'*V!_YZM3`ieM%["c6T!S";pCD"e68Z+KQfM449+/P>?J$RMEJ9WCQ-]>i[<IlTt(jWS\-2868!_'%C4Q4]7.5eT=b2VE(AB"km.h$Mr\-tR[h(7,I%A(]`;rb8.O\@TKkEV8EKk]E]fjNsl=clHX*SXDjCSj>kNYF"G!WFsSWAIG)m6`6MA-dEJi5DMusK2-'j:(Eh@#+[#DnE_,UoaEmP%krLhHl5=\']&O,XFR&O<p<saskgVEPKO2/]Ep2"/kSSa7GRg9(+B^_BCa5ipX2_q*B*)Xn:[4++VmgB;NWj;JLK4l[;?Euh_T:H.%q+*oPG#'d<WHh)e\agVFe"RgrFqU>UZYU*rc0Q@4_&OA`.,m$H'k#=Fa+lP)j-auBa6,Xp?8N=$EgUp\9?NZ`8).K%>rkZI6f-3(%PNK6oR]]SnX@9BWV^501&.1b-IAL>5cf0)mk31Gpfjpi+L8Lu^F&=kdPMO0>OJb)Cg&:#1O"m-j-@]hV[??Os]:BZD,*nN[(mT/J%TkSi&$pgPrC^,4C57s8B":K%sZ9s"K;j,eo17=1AA_,f%<B\8d@.`_PG8MApBLsr#oV<1"-BCr<$KH-\^*Iog/^VP6Y-[/K6cYmi%A6bEn+?Ju0C*$5Im$Gls_m'Q+H!n=V\iOh'*hW;Z"e+K<`b!*p@q!Rrn$Gtf9hXm%<J<')W7#]-Gj(B4$p6IkRcZ8<4;J$K66>#V%rN:_+'CtpYk/8Z(K.)MA!S1R_LU6c>&*;$";h0^KPm]&7I`,t]M.4Ut+X[e`O_EoU9^MN`;[7kK]@9lUO.BuM9IiUH(n%5'kdOO5%Q]k#L,lkTn;9XFSGj.F_<qe4`e6p5YZl",pY$DcP:Z7<>?`n`c^'"R2_ihE2K[qY<dg@oDVTPGi6\d$6au5<$MVI[/J".M$7uS(h%=!WOY?A2nM:t&Z!l;sQr\".3],CLZgTj+TghAsdsV)*j*F+)\7T@GB.MZZn7eWa#HjCG'HE^l;K%%O/T6'k8Kh%lMEVF[VU<U4[*%:U@CkNc[lDSYW/C@MW?-lnku_Z-52H/kPVr;**H'*Z:4qq+obae2$BtH";q(Ve\h\;sBJ;mZ+Z`\s7MNr5Rs_LeXed,EqiPDD$uJ%X(q.FE+aPgb_B^%&s&"HXT<@bEr"'m4>M;+L\<R3dlfHAfn.W/Es%)LF*3S,H<u'W.39?15<g@9Yt05$aZ2VUO=!`R(+#*r+!d;q%>))'Wj'%]/:$iiZM<QCkHGk=L6\G*LeZRr^_*aEES/(M6>11c\[aTli,l>c^VC?WGB_n)AF?q?[n5s#QBsEW&&ZR^jnTsJGFo3;Y%RONVH5QiId.:5t!jCE,$H@YhB+phJ/hlQ)T=nG1]4*n[)2=f_iGaK^nnVd"tcFJGkoR&Xo.-PI0_d*tMW];0h8;-8no&6fH^3Bf&%bD2:p&QCJKnD&CNBf$NNr--tE315+`&[3eK_eHV,i!T:!Jp@r_oNaI!:<"&J37^BeP]IB!,l(mqFU$86'.LJ$=BW,_&efO%-#qeq%J%@bU*XO!LOcW)lW'po+52eqL,f]F)^#AT<%-Q%YHQ(&#h(0WMIpA^2WB.tnn]oA4='^P97sQM:9g'(YZj=4oJ)iE!Y*'CIf]b"i%kZM<>at#tJN[ZTuid:EYFAdrR%eRKP1@/n]EZ6]eUUCT==g&[f"j9^J"W$'NGMUVbPg@h?DpqSmZUVaK=3MYr%8@,ni3l*36ANL7%Kml+`8uiiZJrJ3GCLj6Ts'@E)'nBRC,PD$0$5oi"S)?.Z;?o/T:3@u=1/\.u7<2=g0;du7Oe]UP24mXg8C`.u[*U(aO6a[k7-2kH%;hL%UNB/epo3`HUX@FU(RpV(FKi=4G=&"B9qUj2O*q:B!8;1!2Qg:Nc?0&KES-jJ/?$U<;SE(0S54p!hKp20Z>WifsaZlZM5(if4%M^X\BT<+4N,S#nqm7)?"51[F$Kk`$pN--5Ch`[pSJW,,90-\.rLDb!KQOKL0\00'dcau?/Nc7ra(JpFTJWEQ^772+%Ue;Ud6JrlL%fcCt@:lBc[:6qGReIOm+)4pIIiPJg`\Xi9WEqLXLRHu:_Kt18tb3(n;Qbk=WD&:W\Fsjj"EeN@L\Ht,Fq9nSUC$`1%D@3aGLu#`G%J+Bp>ZJ.`MR#?Y2G48'IS*Y=qghdDS=/$D5<%Qqm.OD^?.V>6FQhe9D)0YdXD$?`/>P+lfLJkG4OUSj]?Pt;=<a-.bH;o6kP`')d%B@oe=h3pX%!3%p]$pQVo+dFCdTa*=h8f;dQRnAFk9kiNd6qW\YM5C>PoH'VRn5/mX8p9O$-+b$^b"0^XgG^2<_0^R,`pA/IK_/,q%]FVD_7AM'HMT)KVGZKgrKa$fjju'ca4mC?nc^uR1p#u&mX\!on@p'6P*O5:?aD[V'k&*GaM"4T07:np3X2Wj9%Cqa=YX$d49mfE0%ck,-2/[ZrT\Q.[Q8&*QW&jM2_;XRN`83EktS-N]??L9%!\Td+Fmo6j]-+O]&E!M`$SXg5#esV==pP=afqG\Q!3tg.hV+9S\a/AFp%S&SRdUKoqWepqA,CC$aNh5,;oqf1?AbPKk>q/YGsg)cnKk35#lS*jNGb\>aPEcqHOKtCADSQme<r;A=9ACJZr"D-0-L"UQg\TAWu%5+Z_PXVbc%FuGnE/CN>=.qR2OJNA*EaN<+WE^maN*Vkq93k9;M_-VD`Cc]+33m#Lb'sd)br%-iSiNA;;-g,:.Xk.?"e#D,DFiA/X%\Qh18m-$=4l/Xa>4Sr4)VN^>/oOd.,Zg$Q5:M2^[4k5Wg-T?O\d81WjdiF$$qPNa"flYBJjYaC/:86CoflW"Bcs:D<cDE[i@]*ed%a]V`WX(To'!Pl7r=3[V+"/*8P2P&W;a[$@5`S#?R\TCa8p$uo[\b%WHaiH?Fl/ZmLV#/?sflV8Q&A=BPQ#&JjR9Wh7VN]3";gFGm%EW\"4/Pt("Pe8Y-4ecD!9Fs!NkUuHbLUP,Kc-h3p0!>.ZSQqL\[>VBJX&IP$[*e.%bI/TAjesHL'>N"h=D22q_N%Dg:s=6On'kd4%1l29.YKNKT:NBa8UH@m#jO7n@P?]5aRY4P3'<--IMDD`\(6Qhoo<Kk&&nJk\<BP>S>tk'f]+]59jI`srhfGVg,sV?r4(S^seSm^R%opIn,9J11=FIMV#=-$-h*kJt&5h/"om*ar1%F<gDnL.F6J*ohSUT!b1SX*NW]\5/cD!p%,EPRH<+b0@1E@X!1PO?!8e?5*MOcHh+%-,1K3;1bL\X;C'jChfDJ0n;L!fMVH4\g,N9*9YWd'@2/^7(T.u^H,(,L<;e%>-lWg@7"$%,-*0(rhQ'cjb59;,7jC&RS1VZ:B#,Z%V=PamY3%q.5m:sZ<;V!h;!i$f6a\d@6QHJLDD&=L^*B&,[Yp250GMLl^icO'i1.:<M6%s2kL(*$Th&_';PrsRa=[nfG[det$gc<[%>4.8W_9*XbPNocep0.P0Yl*o7%8U-i8&0M@,/XS2QQdl.8@sP>)W#g@;'M+1As5\\_f*snRZ:M0MD<UV-`QM`0BHL,"[fXu?7f[Y%H**ITE6?nlc8@aAF?K.LDSK/Aa<08:I+E!hL3$N^VntMr#?MV34"BJVM'kL*,?Z/SM$tc'n06]3IZVWYq)t17U2_&WoYMW@?Rc#p%h-%qji.\f7hlT*(Kf^#d*5?K;NQfFpj%:ud*EbRp?couQ?BW_UG:/GDp1j&K]Hf'>9qM:"h3%G<SVKD1j"K2%^"")+WE^aSM[A!3%[U-?hedcTo7ri$\g(S6,2a^`7JHd>uPkfQX`7jrm\a9#gn%#1OSEe@^]-@C8>Tp?f6"'kde8;JNE0TgF'8G'DmY"P5@sU-a^KkG?%DoAQJ?T+7p146dfY9eGf:&/69OW'l9M5a9BCb>00Fu53C+<sRLfe/X.7Do)sia==RWdN@XVUgpKe>FS#qtYC]9(^W%`5K><HmlLT%U<gu6q'<q@c:E(n9k2VI)!9X,M.2:FjP<?"&rhcW=&C]jE>PP8\E7,4'lRiK]sF<ETj9Atm"ef?ou)T^R.QBX1EFOBPcSrs*$+/a%IcKYNK'M*BQTt4(gu9n];qCP[M:P\?@7l^UXHqnhY?o(ElFZ-HZ"[f\StaY>':klL8Vao=;rOk.m1eE7<$kfUFfP8-H^)k>4>dhm%g"rqPO(fd**ogOh]YjHM=nLeGiH-E2SCUVakcPY9$<]rb&*Jb0)G3SG_/Hq7@9<nKZ8c8c3VRH=;]9usOV4KcXsJj&B;49l'5!(m%Oaa8mF6ADfOG^B_W,9b`(&0DW&)@Cq^[#lngqOf/@VQghs74;Zi;pnOJJ7RMi6=8R)P6#44n2'iC70QET?%6fc2Cjj3f6JQFn0m\%KTq]gb.d`gH"al@&st(2oZ@M3,8JVdKi4]uN)[#+hr:KSF9$f"Ot^ANZS,Z=Y#paA[:XEnf/5i&fU?nFAt,lWA<]i4iKj1qK=@IP%rPTSah+fP<dQubC-[E\T][ducVRAGX$K?+1T*>g_E_=c`eh5>f&1X53.256#YmJOW.tq$s$AsC7@NVZU:K#Xc%7/GsF`K.AoEqLM%<iI?p8T11_5:c,'KI.?;X,3J"'';;8[\n(:aQB`[M-3bh]kAb(p*_NZ:KC*l<;$ut\6`.oZnc`Q%V'"fil\qu35"Z?"n-$FB6%]"%=._p`a-S8>=F>&B<GmdHU=m:Z2UZ7.$E$!?[.hcBA"U^jgtN*U/pCiSik<oUHBtD4UW%"R6Aoja[H<Af[9=+qjX;]4r\7!kaO%D^%B$Cg'lKVm1.Ue(GrO$HP%IRV`cJXjpbT)&"T]Pu1&[Cbh0>!BgfjTc;4Y)/'L(FM"P`O_5+Orsr/b*g`ATKscOY!e"raq&M7']VQ%4U:oOSt';59R.:sA(`ITk.b#]UuFNB)ROKmQO`#>/k?-[bBqoA:<>Y#b,Kn-c(?E1_NK:i?&]_nh3*3d,%)H$r=WbpWW5-Wq!TXG%48Q[Pp-JPX8MU6&.2G__G*">(W#bHpjd[keXZ:p[M!d&3`&*jQm&_0u+HE<>CWZZGZ[[E>TQL0tEW?7TWb5iCWon=@S;Wr+"Xmdo%718]@%T[:u/pU<TVV&F^J>+JiaT4NFYu2jf,qnNiCudCX!0t/Ap6A1o/*[$QN(Tg-Sbsnn8M@B?r@"<5[B0DXUO7)gL$LtGGPjn<%CHTa0gW5]Hcq3b)5(&N<g'`.<4N]&7KtI>ZI&cW[?gU]SXm]=tn0jpMX+362&%jE7Wpul62-Ag;^MDU6L#2L78g`0?mY8=>>sIl+%UkqfY7,,kul_j.cP0'silWl^]=%Zfl483V@l+;E0?6Ma1r5<gX'P</HePGFIW)MUHe&9?E^[%d=)'\QT?1b:lL.na#]^&(#E[eP?%\c(X,GQ$$HG5-OJH11U/^Zp$o$Qq4nqPaur5!nr7GPu'M8c;]]1Z%e'O#U(J$X-4EXm&?5a[ZE7n"P%)e2KF9b&`8\rR>3I47NM)%`HV:19jNH$k`aosPDbmh?hM&+4h`H-]PE#K:E9e6r@>PHVgb9_M!2S:>sJ##=db5uZekA=5>Ycqoom&6E;$nmLLG/==8gc2V6eWL%R!8MYKpb]AGFeW6TBnQIVaAa2dcKroW<Z[d1K)PKf2%XGFmuEg_*(k4^?_[l5k[XT9AfD@?#*5lPHXMZTDIgA$1ICiE/TMH4hf,2%*op]$4$B'#r`qb],@]bJgXG$P;qL*pSG14aoi$@jmlFTca5SmsVX(n\VgdJRN?U@V>sJ!`r@W>Umt;em[J0GK^.a</eaG!VnK#$6%2;I&-po`L':[q"%b[p8>*@+jF?M3>6L+[l*O(0ir=8gFd8ip>';<4tqht9oHF5DD_hS74FIb2Yf4oVUV[_13bht?$&BRCct]Qa<L%Mn,!rfC/WJGj\QrdJM#%;l,\!T%%*>;n;#VUj)bOj;=Wr*:.-I^?_[<k]G`]3qHWAV=_:50oB\kH&>b4XicRZofLF$4SN,GOl/9F%eaJ[b6/fG)l5ZMHki=o#Y+N:7aIOS_po^6867fkr?hUXpqQ#'#qUes>qPbo0Zjq/:GQ"o60UKK=-_<ooX+%)%[3rWQVnP/2al:hJ%Y+PRQ^h?@(W7$*u4k'Q`?)I@M_h\iF]i';hFRGjsI=Z/MT409&BD'&eES@-TNWkr6imSjQB\?UV6C/K(bhRgn3)+otJVj`(h9lQQ%PS%N3p2#).b@A),qs.*(>H,?5.,QpuYYV6aa(:-rr@do]CbXr&Ic#G%qgkS17\]TuchMZn\D,[Fg!ZYYVY_6g);?gR"k.kLY$9!9%ND!mk[HkU+n9eK5B'*G2h_h\[NBY!VI\5BO9l8>XDTrqmA^C>S\R2dJqu+1Fp<sKM1mUj+I'Rb)ATj<;D7*3)he9N&PA?590Rh&Z%DtVMa,O2eJVLFNJ3a2EX<IpmmZ)5A:;8,!aEfGbt4pkhV&s5p$V9V_j.,V0LLiVP7S"aM/(Ua9<=gf+/_[m:4^gpWGIZ'4sjIq@+%`.6=nLuNKc:Mm#[>I5k!UoZgjjosq7VRF+R>:Ec0-*t]*rraVGNh@]mq^>7AKf@BXIPQMH9P%7u#K+_Pboo#HHDLEk\'](O]f(k4%p`a?c[`_[o=8OTfLmmd"%PBaUVWkeX$J3Ne^_VsYp82rp1/P:fi+/(fq$:1tK+bAc]Q![oR2."(.T.W2Iqt&d)Sc.Tl&ZBZFJeh;%I?hs'h,Eu_`W+c:3]DnI,8sfF17hdGMBCA"7;qA6i_-HOi/!,^Da6DT[;\4a(\8a!gBo".0@t=\klm*n=&S,r/,Ee!'V)&6c;_)M%md@a,cWDAU)gK#/RT@DTr&75m?KWqJ^G9sFT#%T<mIj!`)rX,c@I$UikPk,&N>mL]V>RG!RmhuX(pMu&5e@GN/'S`d3UdQ`YTJAR%CW8emrRd9.r5ikN,ecm!>H^Li4u:Y]]PaC8h_i!?F>oc/lAI0s$OcO&U!CRk3JBmthD&*i()BT-'<Zis'Y'*Ghe^,]%?K"CY29ZW%Dcg1,3!@dTTC*:mh'FW)`!H")LY3Z!%g5L1>'_]mH5(f#dBJCuV?%'tjhOk]:EFDdkf/XKM\A9D?lLVB.Al4(iJ^*K+8SUf$fo!r%8csQS^lI8t?>QhWSo2[/\Sogm:tfpK;P,NT)tOd0\7mLIbnqUOMmfVKN7pHOET5Y"A53]-ZtRFek+Ng=li@+4_o%,[^BR(mcpP#"%G+3G5`Ml]!.I`E.IuLM:/XH"]hV&0gJ%IjNG.FboZaH-d0:ok)[f(Hr%fAc2._\4qM0-TNR_+!%[lZ7fp4Z?gLd1,t^;AmOa8EO;%IH"i,/(t2Uk*'^%6m.(<M#LT_6%!b6C_^<,!Cf1hgYY4NYeP"X*4NWWKWEPq'd*Hp70,pKq6bgo1??IG-JW[i:+F?59l<W+J\t%[%?Joe#$*;41(HA,\4!S^QRl&3TqeC<(qPl%R*:_4c>_FTJ<SB!UmD4O4%MH.+V1aK'o)&mT_s'Y7@"kfQ>?'nH#6)od;?sm9r4j\/%M\EgZm5eGG!5s$\_a]sB0>e#;CN,_$dUq?$Vg,*&AO/5l$!M.@Smjic[gYg%GD8!>$p3%^P4q!hh]=%'CdO6sh'$]Xc,"Pu"1iRZ%I8&b-]X+=TcZsDJZRU6kT4(V?Io>7g9)`Ut*M_hYk=psKa5rZt:")7SFr@4lU"RFiI^2FNVPakK8=YX#RKa>44h-p5=5sa\J33\K%=L'Ki*=:9bT)hg4&$iqK1'HnA_O5r=%-7?K`'_cCoh]FKB$O9if&'uiDk;*/523Bn5b>$D3s%2.2<T,55;U`Br?Y>3baJugT&noM%T%"1QW&5"[9qtDm`9b9\JBsf;&JOVG"smsee=.Vn;SHR59Gh2*.:J5p6^%JfL0>o*3tUpm_kMG&Z8t4O2Z-6d?@4;Sh>([Ha>E:d%A-`l,eoF%MQGE4FOra'+/>Vj\c0,6$Ve5qTf6=1IhtaUb8KHCF-d"^?7f9.^(-;IQH#]WsnUs,B2\odc*tYC.FjDW3FQYS]p,)^@%R=m<lX3g03ODflXfZ\e_g&%$,N\VBBeqPP06[.?KNRQaHa\Y!6R(*Cuc("@Y>4m]IU"3hC/GQ(eL+o?V'#GVF4K04b@PSBM:'A\k%?/,h6kWT9U4Z>"?;H49DNIUF4`ib7bS#B:`PTBjWlS21s]2q<L(Wl603Dh@(MY:K]jhJGe_bB6++(4fq,#OtT3\Gb0@3Wd8^5CGn%DK:W=%a#ql1Nmendt(`O%/DL$C+*f99TEnV5AZXq7kl9)Di1LmXF)BQjI>[m_.4-8A&n^]@0gp`6Oh:bZJ\`^4;!"D>_Kk<mO-S=%B@\(;nNEQ%;3.[NZX4dbbh4MP9>Yp\6p)5NTDSq#'D_]%keQ\WrLo*]FrLFT^WD6jC"Ydd!3hKUH7A'hX,`u%04nk''YfVMS^B**%BF;*#aKfb_1RK!'%@Q#POlP+JDT;$,UTh]jf*k6<UC@_>,J_n?n:XYTL=XON%Flgm65K:g3M]jdm>5A_I:,k/YI?N]f.g(@n]CmS%\%VCWK)(A7@a'3"PV.[B5"07YplfLu`-#$(M4u3VZ)ainP%Hh;>u`bF1o#?_lDfuB);<(/"0.JO0p98dN`@;_if5QeSbJ4\oG%FI%>gED,2Z>Kk2<Go0^Y+]$Gq3c*`KtqBa2FHN#^0a*"W#!6E9=$P.!CU+:jm7K4Jo>ES\;"ZaF]l^(3Xm7'BWE7PF;Nk:7-j$2`5LT%\c#t(qm1uX5LPF^"1ul!F50!pE?h=77<iuV&,mhqdcQbirfqecp3i;j2'141kPl,8e'9FUo%8f#Ebuj2P!tAN%PM7cDjj$@A1_4R%#**Bm8qH7k2O'::e?-eZa9R&$/lLjUOY(_W(TB?Gol:d";Jud2EYU3)DhcR3YJEZm4@Gg!Wc:n.Z67UImWFq&%usV1k49<mTXTn%%6bs/tr@;f$s*sRk8^)5;VM8XPq7G*e4Eg*dNNr3Yii).gc9@\iO#?m/>Q:M(Xerp4';"M2KKO6eYG_Q?P;_dB:3qAnFbe91.Kk#1%o^E2Lrll.%.(#AJc6VK_>)!kZ,2MA^^f^$]SSg0<n'k:nNilf8gn>D<-dg2-oVq:2r"du7Vo.XU?WEcgd<CBn)E`P9c?'>$0*5!*%=85^46kakQULe+[UmqrZYcCYSpf)7+:N#SZ&,.#oZ_#pd8GlDn8"?fphZTk;m&9H&\6nU1Y=Wi%FMGZretMX(*MtVhQJMki*8isI%coo&CgP=]P(u5VDSd!l[W8Nt%.:,,"LsFr'94hLN[Mj>i>PW6qr&irE=*.u2cGH#cI"Q>+gLa1S(8>mIPb"\=5MVV^GFJC%?A.s*%^BbYsDVhV2&R:3.(Qb:[q1m1BY^eXojb[Bg^PtH\,.Lo&+p<@_=Uj"IKd?.^>9!t+KHu*)LnY,Q]@?:(+q,(pQjC2\rnbL2O^9(P%5g!?tqLNoc$PD/VpV.WtSg$l1.bF'%hueB+K!T&DC[V]p&Ia5-ccd![<J:tI7f[6Q^<85Dc"!arE!DL5LnasAnS.Yb+M&L%JF\#Z%k=#]qqsT5ekYm(5Gohe#<l6UF!;8&/!taP]_I7g"=Gj!.a\9)rSA^[HQ36sT]K1I`MZ@kN&cg_SfpY4>D_@;/c+\dkdQ/>l+XI?n%`ZbKSV?VY-*h<bP;#h`0s2B!Jgq>kMk4aR'eXZ(C!U*525cbF88ZBAaTcL[8h68$59-+45\aPQ3W4MF;mrS`H,t]6o;=8&*04b\t%*`F"XGBekl&bB+kP[tHoI,=gfAItD(qhjjfcXdZJa1A>MKu9RJV2e"dlgA[Dkl]qM\(fYIX3J,%k<Tq9ceiSJ+,7ZX;MX+9e0m$s%IkU0+2^R+=c^KjPI&hfC<-RE^C3QQ5@KHDpceX`2!Ct+dY/YN*M`rPFj:GK)40QKrrR4+7WM&o%S@3O[i4OOk(gO,m'DuVE1cTtD%D=ht.C-ELTDjI9:]\WQ*SBi9_K;i]m0J0U0-A#0MY:m'`f6d&,i9ZNn:pU[b/)mWLDXuI"1bZ'(0PB[/42o.oi^e1R!cE!A-QT"7%"sf%c'F-.Fmt>6#d#^HflTjot+CiL73?B/<%i7tC(qGf$*W\kXA<#99DsasqHZ(s/+J;>S9ZU[dYM%Tj.qMHll*O,&WA0p)S/U?W%HhW]k"e-mSi@O?(0FG"/dm`>?i4(0n0]stG8;2Fd_@q$dfZKFQjK`:N%ENH:$nt6JD!B/*2]Ig0F0Ti"*!9,(P<q!?@-u20C$><B%LKm$HfJN3]hY\,DH%.I+O2Q+#cZdeV&)@/#d8_;9f$=]-l/(MB\W%m^3dpMp+ro.b\r:KMhJWC%-P`8u[4M,;FuLRd,*t`l9KbMM%fG4kcpYs0jl-9bV8/3h4]/(g3o,6iW2Zi?/X:l^[PJ4o/56N6(3XKhnM+H(!0N(1*RIGX<Hp)I.[kK<?-b%lULS'Qnmjh8J(R$6Q%,RR`eFh6QbThO0tP;ar<j>c?G5YJ\[_U2V)N1u]6i?(]=-'-`G9`[6m-,6uE#]Q/<Z!.[iVbB@@LrjRqpL6<ZniMM0,<PN-n*VM,%rH@O)!+H5FP2H&Z[RM)@*+<NEZM7/k].e2@"LhO/eoBaT1':XN"2eQ?pjtsN8im/UJr#-(&aY3mh>dik8UpRc(88R=NabM>h\\"I%%hG=i$rNRF<WV)?kUksj0nLC2ZKS5>jrN"l8aIlnK7(^l'Z=92d55N']q`2E"7XtFriFpUp@Wc%0/.b?_)&^r-J>1>&=He]+RkK5%0&hkpS`PhL\oCmf/h'ILT`(fE"UC.nN1VQnol0fD#%kV/17mkmSumYsELeO?C-@g>f@<f^l6Z<&O1RiS]Qh^d_/JF-@6]!T6VXRZ%?F6JgfO(Hf.*fbt,;Bi'8M"kY5I?K;QV+>T32W(r+P]cpKc)OnfJDtU%^5L4DkXuR4hq-l3enj!pAn<+fuZq+.rd(^mKnIXE@M0V%]HKBP(%!Je+qfmb(sCO,7i4k1$?fSCX"H;Z96YA03nhQk6HXXfM5*5N/s.,'8)tfXR+W%m2I@X+PON5"^,fBeB*jE:PEB]6-7_fP%3u)`IAFhGBc^EZ7^-ZV'"o2m]dJd+M/CBl1q92EC#>o>a6*0fWAsGbF^Wp,?qb+aqmk;>4K[g3QE*K]dFqVun<B3d"kXYH1<0Fd>%dgF:o/qZL7;J_F!2l]&Qjjt\P+tS&m>7$mNdJ[R,:3E=6U9iYDoLcF`#lK!3m6jQim9JT8P=,[L7'OsY6jT^Q$Q%#j15#-!r":03%64W!!)>O]2]Q`5,5k"oF3p:0sK_*01*fu\AT-Sl]!.Ba"qh7>3>'F0r_B\9Df)V,@(`9gi/]sq8^2Hl98P]tRJU/"(I2UIAhcI)%%`/j"GL,utro1Q"JFiI_qoX.c-chH?_U?q]I3,ej+J4NXshF],C&*qB,n.is_/4eZ4OUd*-F=+i($t0SG7/\r8LFWHB&$n4$!gV.m%_!5P-5a,Tq=s&V'^RAO_;BNeGB(Ap6/#43"4%D-g#G"*>fsP!+Fh\u:W-eN=g4(a\pPk6N>:Em$6j$S%iKc%%9SD_Ylk$gF-WU+u%iYEi2#ZO%f-?*:'McIO.Da[0Tp@60.FIF(ZB1><Z>3;SC.u@1kZEO);'-_tgbkAlb5mq4SNrfG9%^uS!+F%.5\#i'V@PLM#-+>WQ%/f%2k>6WJD+%6MPGdGSoo)]uN6F"Tc'fu.&hF,2`#Z2"7q:?HCO?0a"N>"MAoJ6U8jWT5]3Q0@qP'l)#:g$YC&M17q6Od`u5*8[.%aO95WS\HgU\o$RP&h,i*"qoL[F@Rk;4h@3/j+cY6.&%-9!4j;g`lfgD?9eO&o=N3O$*(YDr7niLCf[/)[6$cMmL<_IMTD!;<g't`%L>c[s')5T&X1X%9GhrVI3P7\j$BriTEjo_+I<6dr0lM7J][<DiP4Y%Oi3oHKAY`PMO@TO]opL!)k%QTlaAP6%Z0kHiiqQIi[m2um%&@XoQ%FVcn.0U%$n.RB^MuL12OQ5BK1Fk[irRq(o0IL5VoM-luYH7\&7P]8K8GgXfA'/^J&6U]PMG82BB9JOaY?=?3rfBc2AL1^t%&SC7H&(f:0+&:"g9d0jc)J#X1c=P"\aVB52(!o7=n$,\g'T)V(cO5D8h%;m8_kBV3DK!%F:_\aS=urp4GFU#pc#Q-J;']UHmuY,@%:m;cQ0Q<`20;g/dd?=o(1$D,Ig',7%=:$L86rrk/$:W]/<s"u=h1HpCmT13^;N[>MfHRQ0)J'n0Pmgth-n:*B/h9Ys:u(JJ4Gb=M%;,JS_4h:!"?7HYO89rF3^_rsY7,n/%N\_fLK=$55N%`)U$<c$UO9->EirWbtHZ=U$)h3fsjR^edO`#a$L@=GWPN9%?HaJ7F`O9/=%9KC&Fhu4Mq(@h&J99=b?"s7K--W&YFMPfh1NiK1O-Hu9k#mnWT(9!$uSB?`[r(9E84YkG92W"@>N"=+8P;,7!!@oa6'Ql`^J`-74%L:eVY="5@@B\QoG6s^=1"1/JsOo#0-I7Gp<GN9G95jluKqTW\m5(C!L2q`>D^C#M)M*fn].46!dDH!fN@#]-1O;3+46)&9,+-ltl%A^*bB&4e%P<ueK!r<=;T!g"bGLkt>Z-9eV;k(H%hXPH<PYp-pRkV/!XQL,NgqbTX506$*A]@=dEMNCs,2*rnCQt#-ifT5_[81,9P%/i6)ee0;LaO+l4s[emf:r\A:7M4->dq*:\=">W\@U32M8rFa2^HS(0"1^@rFj1K_q-@t'>U6B*u/p.iKdNS'4k+nhm"U9Z+_@dXA%O<W)CBDW$V'1>8ZaF_#a/F;`\@P8_i"%ma=GirQl\<6+@JET:cOQaR,"oMu4F72%PF<6++H_!B2/0iLPD)XO-5-]>(9GLH&J]*^Y%:?'g(SlmP27poiiR-=6W%d757iJ]p1^F0r`B:7u^?TAc?97@WEl#f[A3jK,2l)T!<'q^M,7Ddjm\k"XV:[B8W04'T9:dj35ZHd$r%l.[l3^P1G$9hBuXPa>m#@d$u:;k6M*B.EG=d[)t!i%_(cHF?IoVWo4$k!#j[4JkH'O8#%lGt_LVH;&H.D0i!YO/]e]A?uH)::/:_%s$DbqX@aA&kqtW$Ld64P@hRV0H(V(9a4/)INq1eg][GReU1]>'N*hqbj#0Yr+L=8<'"JA/d<CL$Z\Y=(THqT5RfRcK&Amj3Ui`?k%VA'L^hU;YlJ-r9)Bl(PWOO\d+bbuhrL`,HP@C`]iQBg[?UnTO:qAVq5`\:i76q)'\<&#9hZ=c`t)-o.Tj5".*dE&"6q[]5Dagit=%3`"@LVGbpJ=C,2oZGJ?U&DoGG+$EGpc]KO5d4Rn-eq"HoQXGNBi)XnfnRuQ7jRWnHd/,IGimE2MJWb9F?WB3\KHkOnEc(=p&WZY1%iqhY3+rm!k=]IS1:)As(bd?7?N:_B%^\Zr&"`o$C*_lLL\g9BT6=rhPbfW"J7[a^;q#ACkRl4GN'ktP"i;SM4V(G's@EjE,-%[9$%<@JUiS.Li_.F#e?kUO@>Dh$em,%BqfLW"6h&']m=]=PS;kFTB])Ig[m@aN]+?Y[A`ghjnMaXEi;^*0#OrS&?OnlHcK"-%_/\fQ.O%%tFH3n,EN<ls$[-0C7uU^\i-0j0NtO[Hd,'=IaG>a*:+,]7#adIN<J`Sp[X.nQE#)0UI:WHXq'+BCJ#i*,Xk&Ms'WM4n=s7*hUFC%aIN""I#lV5Gsm\CEPBJ+\W4L2r'CU!?sXSMn"[c0h]nkh^n4pc]`3^tgupm`es9n`k>Bh&'5Znt^4h^m='52E?[(DO']*!Aar)<#%p$Gft>'.rR52eQB4Gs/l'cqE:o<7UNR_Pr2G(V*`=3c(]rIjL(bsjns*VIG1k_Ihua?1JA]`7*F1#?DRcP4]T*J95d)cM.P[84Q#%lPR*;cb^Bga:^/OaV:Ag'")''R@)tI=lRE0D_]4P>fYoDIh^`JIsUN!pH2>b@u;&3!s9Cl0quRNo3B=<KodrF@AdqjlT\"f^\L3F%Wp?&P\3c1epYJC4jU^O\nA?pBL0h@P-9j?-YD6]t%p:&ahhj)")S]oB&RU%fI4q,cegGo6,du%45QCOj;E#8OEW>U]D]V$opsJ8H%IB)=3CpE0i?iTrk"hS-Yp\sfUs*E(O'E70=T7]/qPPb'G=2eM8Vg#lP3>[>BaDZf5B_;&9F[)KVd$OY$gE6,FGkhRtmf)^l[pK#a%s5DN*gE2*=ht^?3*0rh&q9nu7SO<.JQ[]V!+9"M@*aX0Q#;9oGrl]5mH>iP5h3[#Do=u3^HS:2Gn2hEOI9sAU5JN:E]cFB"5m[?,%nt0k!E-q?Vls(ael`B*(Yigd+i`SXjc+uHpXHY8#q8H"2:@GIE`IE;/J9N30dEQt$Xl&8@U_^Dtp]#rU(^&p<9CH/'$hHmg$G"c,%m_AJD#N,Pghu30,n%A8gpO?HIo1$\$1=mH[&$-r0&hR&%q"WAmJ)ai']6NlcSa5d)ci;bppGq)TrJ09UpoE$'r9+CC0Wt$(]@#m;%=(t`mpA)J:s"@]tp&i\of@3%;PLkT)?r9eaBHOt[P1BI.nD+([q0DefDkg<<rU:?^jnWMO^&%5Nm/I\6N>HPDH!]@i)t1+8]_ps)%0A4g(rGD%RrF)J0&%Ac8q85^JpP1t\,JUGDG5q?Ds8)F%j?MX@[?4#,MUZ!!H!&<0fG02O?U]6BkfME``-s#o@5S[<=!73qj^J28%b85TNHl+H"bL'c[PZ%,795f=M[tgUTimWtgr:/gjHPbSOGj1JP@smJ08"[Hnl,/:kHMB^s^\5d%0-39(r;#Gu040%eQ`n.!k,>IH%I.56J%kmBk]RT;6be.VrITMZ"^&CRGnjfn^Btj,hTDZme5PX0E5DAi<^7eh]j8&V:+!<B(m>GoC>5nEVGlHm@RGYOKQ]L6(J,IdS%)_Z[1h-X=q;tsMDCW%S8SYqLpIa]A:k54oQq"cB:5B?P_L-CW6Xd=P,i@F[%rptX:iD8WL09;`Qs$%!sJ+B*"lQ:WQ]AE`g^u,#(%X4?eM?7uOZcfKP[CQoKYiV.6r(I>8+ZaG76E.YR5EA.:cSSu19n)+&7Amreghq%j](E_H4GGJ^H$@hh.QJaXu@7'A<+u?X(K=c""%m1I[@E"VU;*Bel@X[g.T1]!Xa]Vbq9dA2Aar4Wd83b<I=J$KP8;UQ,;q=(`*;M)X@Yt1V]h(r&l6M&_0aR1F2p#,8ZmV2LYo%[!!%Ie;E:ht93]pP#0F7'6<DDu6/UG]+r_GMMEDf+5JXr;MU=r6YI_[1h+MNY7'&p183]2h(P]:1!ARjM16]-BS3L$i#a$Si<gB?bZ&g%!"SXqagO.b8JH;omO`ULa[>+GDnUGR.IW02m*NCfFl8<Sl[S6f!#>TTr"8r"?%&iFSB%YnLo#QFhQ+B*admgAid\)_HbVQ,S-BN(%nGJnbrC_M9(I.cNpm85r;t2%^2bTKO=/2lmbBn0BFA:dZ_].J>]CYjD&&.r+/+<D>n,;e,^\"/trKUa'o(YF+>AL)XrUtq0=@r5l%ms_oag#ke1J)'M]LKF4n@T9am&)TRL";UV&H2Z>"hu*.qMa<XtkFKE'gnS;o\.'UXn%Ztog"(WIkGf_)'sGBdF2/5RP[,5EBmj@F%rQ93XYFW8tf+6<t<.;?VHLdsu(KUrm;fCH5C`/&@b_KKjdhD.Yr:XX*S3%V6^&Rs+:R'fD)gr+<j^k[Ih`cnUI-V!SnQT7;>no^j%ob[PmMs[T1q;B#\=MG)D>Fn3!RKIDk(%:f9/Vt\:q2;,AUJ)*GF,b8WoY"&-q*b))&&7X]lQ#H[!Cu7RHebKb5(<7tK,/>%ptg4%%UmHTao"1?4$*!k#V_7dZ4_V12k<=44oSOUA4O:)Wnil-,R[Ce_:;gCdqU-^qpU_sR-e&ZV$MV>3Ku<9S7JuAag61,BXSG#_AL[:g%M#+9Al4'Jp?OuJ6P;Y%r[o0`ddd^p&L2/)pI^lRO<'P[,7S+gO!jBi1o\$G:W/C6FrY>/krpbtL]_Ld$r`'t-]GO2cc1gdgi_A>.%k0*f$#4(=-.mNgiKcB-C55XL.YCCnG`Ei//hL5.#=5NHC:ENs<nlQ$Xmba(TpV$G?9WF&Wb-0VgK+I@E6qeleY7HNhrj2>T-)?_)%D!^!#MfO/77@pV&%r.)O8O]6>X9njeKcg<7$Qn/(R0f.?IfG)D9J8Tdp>tNgo"928nM=3X&m"e%/]):qrGjL,n+K2,^A.(Kee5WB%I0j68/]#n9B'N]aie4uCCGd^-ca1VWr2B8ndOi#D#^7j$]3jAoSEf=\9J:79rKNS8SptXeN_`U7lhT_YqusP+?i#WrSokGp?@;Vf%:W2l!NYo[Q\%d#!pRcRH#EtG!0TDEZ*J9lK-bLWc$W5jdEI5O@\"Dq#pR]->]"e/Z$Qm!']'nH+h0(8p\G,>0k2*d!N8[DXid-AX%%F+`^YIHKFRnJ$>oepdgCV,^Yq!ZNlB<V*g?[m(o'h8qfNA56H6MJ>QSrJ*eM<hs`J&L$MQi%Tc?adlFff.g`l)WEbpX0H(n%SHS%J+"sn1!q6fV<bn/8Kr?jaHt0:V41_&UTn;Fk+sF;aHmJ&%2sTXR0rlN"a:Rb:Z^!Q#Z#_N2]@#l53k&R'?>'O`kLNP^Qeco(k,A3%n1ufgq1;CLY5*f?:<*prQ]30EqslID4S9@XJQFr;;-e[fiL3/`RM2<R;/Sc@rt<>:SsJ]hljFp6Y9/5UT'<BVruJcccdO=_].ph-%=5nKd,pM@5bBbJ+Vc0=;j\'qH^3GZ5M9>Y/UfZQ$3[L6.s286#kNS4UZ/$JVfdlSTSJ&,;"l7QV;+k:ZCSsSgbEqin4AVkC<+5g4%?AZ^H8k`=bVLs8AX#(%VX799)\@bhmV=6#*=)HeDIcW*N='[obcfVG-m/O_GJXT,J`q]Oo++LZ4<4_ku[fuTh_p?*m4+:#`s3\_K%J,K*,K7?#]oHIW,rri->r;WbIb<GHG_ds!rp#3l2YJ0V/k:a#,#/:,c/"_:ig;a^fs7heu++3pGbO5LYpLdRr]_U:CG;&W5hn+82%"qf^Y?OH]n0!O3!J\?OF/mjb@IJ:K0^>T$EbI9,+DTY;LQh$1mgQ\l_qO"Z!)cDcaII[+\YJ0S]jf>$Om?:><k:kflks\]=GkW:8%M1:`hr(hSte]\!,/=/T5r9`sjj[]+$gDBT_*/>5c9J>OOLh2mq7i1oH%YklfgS%[b^V"gST?d#0?X19gp#aSMr-jUlr@aT-]R9/C%bBO!HLc<'Do3_Llm9dQ!;E3fe=M3&mD<>ll90CER\kFN,H3e$)bL,Su[O;f1A<(ZN^!o])/B[uQeBuG#Wu&7MX5gI(#d",#r@hG,%Qh(1"2#;)ek98E>GJL7LXn".&dPVNr]PAMMZ"n.Xn$*u*BM"LLPs^Hc$IfPK1g/-Qj;R,=1@8,rjfNA[EN],]Eui<HomRnB0RIZJ%]rADq1Xc+CVAOO8a[`.uGtS&!.GZ%-:;-#UPb!/U)4d6>O('<'dI"cnZ&a[+kC2<A8pd[=O<EU%j1NT&N@bDK7QRo<X3fsFm-88c%7p0!aPs4728a+u\dE>r(frZq$*Y(!H[/8d5Y)\0_5.sF2Gm837.JK!9`q+5QMZY>u\od'D4c8=(D5[tmGN9`)R68g?6]NAbCBn`9%S&JF"H916GS>2C*dogG':'048#q&LrSp<@e/^I1\>uQ=B:lJ/@cqu:9#no@7Jb8He<o@L`Zh?b3(8WW'V')9^USF*cgLJ9OH9KbW%b7;4hqHSn>^$GZfoe>RAVV9i,?C_.T!gsR%f^Pb(m]`O#Y(q49cY`%6"O-&\P>&[ubMSUo*Bdc3"e<[,c[6@d,FeWin(>cPb>6Ac%_GRo$$1g/`G8rugs2[-@a52JEdX2hl0c[%VSM6u%Q,bcYSM4:>Hs0qoc>5-TpHGFa+iZ61PYI2`F3.n,`OaM5KfZ+O7#D?/\,0)4%]c$R%kD=u]bYfW)Y@@=SGPem^\.m#l%SOjt(2Tnch>prR!m2_56cjp47<sY?D>LE[3bc:jR75bJ2Ya]A^;^NJ?k=\-SMT#_a-kZ5%g"W*ODG\m*dlFTDGlh?b-"n@UV<OR2TC^bV-Q'e2AIQX3-;bkXb_2PtAW$;'J!>6B?.><'6k^=n6P-1p]jB"6%__NKH.mPAI/F#W%4`&?pB.&Sk+W":CD%X@@D^[nN[p(WTU^<[F&3Kmdh(g-.?X_PR/Bs=+@E]2t5Sf[B1DSHn7M`un92XdgTn3S8Zg`>#i-1i%b\`e8%*G.Btg7d_R_+#?)NIpCVDgTT$'81"(_^"($s,*/Hr;@Inqn$grs-rrH56^n%1$`E,KdV[C+<pC'lKn.ACoHj?RYkoJK4(5bbEuZ_%aF`8ei1>d\dBNpsE'nXP[sm"!&8#)$r>TsJIiD1%W6!"Cq9//b;aumq^\2NbjQYJK[pO$Z=`:r_h@D5&gWdB,;&3ORm?[qG^<>GX%X3nmqC&rY#)UO*0CU*hU9lPI6#5M?p$SeBGLbSF<*<nKO\[DYLg98B]G<UfLD7A]N,tLUpBTdEqAB;l[cj%XlN*.45T7g@D(:q/`%^rhjN-,5`hf=F7'QmAT<k)af%bFot\bAm9b%J$^FUDkU2<=.#[\$sJPCG(&8<JU(o27i1!CC]+RDU!;U6-j"cce/i:f&TJs?l,+P%,#st[C^+'U)SPBC@.Gq'.j/3@H0g!G",>F]mU[?u+6<hH.&u>fZn])op:;ZpUM-+5`n"c]aOYmZg],W5Z%(`7l!bD*-LWq6nq='V%laM'S;.b<61YF?P9AoS"QNFXLh/;m8Dd<q1"[chsp*f`XK:_]"`Eh]XM5\LIg:CX5;$+h%Mn7c#3G'2bBW9(!eXC^7C%C6<hV3Fb%Tleo=+'g/NL*;Vf"&Dp>e!WA/q.O'uNkrnt6jXKIYO0,)_&rPlF&U2T2pQ2LF;qhQ)N-sH'nlO%V!?$qB7FerrV">:>oa=+N9EJF%_RnC#U#D=\]OWV>6;F?+F)UBl)WC(G5MB!'!`,]B1HPa2dB<:,#*0XYVAc5^@_?PQOmGf,c4TEW\^#;B#I?O4)p^\5U]'pINC,-N%WQmY!(c(DTa!!k$iX@qp+4':hb/X`upu$j[aH"AVHaM%<@40s:SCs<oNcnCF;Mm)0W55VCdACeePiem9d@":jl"F/k2Y]G_D=`.$%W]MgciIj33mF&Q*aN-@SR?20O40W6-8#91mHthRSZ+].)U_%p7+[KDE"2$YqbS,^cUhRnZ78*gdoQnSETIHDC<;G4%^kj4<-fP5G%@99@:"-EjdN.j-JOi!dt?em'`iHoDrT?8V/bZE6?DQ__V7/2XAINs_>]!*aN#$/@fWPKE3+E0XW04]R+JA27n*=4$*rBn<MA>;Th%:GX#3lS9_gq,h4E@<$r\A9g\"4\:q'(3Xg_-C/T8;%t;.?Xi5V%O7i>PpqdN&#%-F(U>9\gXt%T?t++U-r=[n0r+k87GB.=<%k&4%inVk%"0YH#I5uS9MFci%?h"tfODC((ppLG`&$X0brER_"Z&fQUn,fk9Zfn*@TJhgMLP.k]g?77clY((rp0ec/."jG@re+n6`@r$E%-kks8LFAC/H!>lm38npO[\I]142`mbor'(e>$M^T/d=[+kA:e6&kWf<p9]eKgpaZTBM789_$tB*AWD0l&0l'PA9qfWn7%bc@;i.3%&(DWXeOcFT4Ik'[Yn]rK^/Xi^>;Z>(&H.#^@j6,j=!s^Os(8d4o..Y1mUaET;qmCnD;N:8:<+,[hSuh1pGUs#J@G]o3XPGT?".L%%!>ebj7dU?;*T5I>T[VAQ[YsG%q7B"B54N$O41tK9MtAo'5br+cZDhoC;[IkRok,hpCP2?1FW7u>3m]b*D(qHN\W(p=cea@^SVH-q%+I"U(Wj@eSR-L)`&<"`e@9oD5j(H*f51ZX:hto&ZE7@9j^]c<f(J4sMUooa;"eKOtT33*]8"4pKYr)7IMr#Y23%M\b+kpRh-jteB%TU'G^-j+Tmn4S8@+T\5d^V#D/SUb9jO"?`936[e\8)Yd%IesVT?L.""M:Th[(].lmoIfE#<6&suj;>C<c?02F,,e\Y"M=#@A@<Kk%^%rLfFYjk&]??<kMedAMjEp2'DEE1Y\N15jq=p8Y.Js+HFkJ\Fp*Th,ZqW`j\lk%O8ag$li"<KB9o.'<)%fR7=Vd,7"*]U+0QMaX%HH0GVOh/l?Eg@sGmZTW-80EXogeUl4.V5^$'S4m==::W4_V-XZ;NmQ"rYT2oitH;S=%=FU!eVYZYgcOY+_6_$<Q%au;^(jA$a=CU%3,Q'aA$j:3IN0/MbM\GN")#he6t"2mSLTE[H10DVEP[VQ*HuSkR#dd9,+?`a>@O@ai]'D3)[^89_2dj]74WS4=/UVZ'TXDT"M)Pg%g$YHgkkj)s2u)Ye@%44d#>mAA@/QcOM(f`6qG`2_g<sijM,\k7SoJ"sjn3KJ`r9YHm0u1GP0\L\2ij$q^--_N)cU;oef4$SQ]R$f%0N*su[lNQ,]6IqWBHA6VM*'7Z(gMXVAVNKF0sbM.H&&!(MeBbURjUUXqrl!abuH!VI$tP94In;*al`u8hKMY+6LCd^WRibk7R1L.%Kk!BXW[NM!G%%lo;3MUDjMIW&ML?[CT%RkJa%(d=ganjI_PKkB$bA!+=%IAmMO:gUZ'(5(mV+W7>L:o_O;r68#D:jn:Uh6\+?&9m%ea7/HAZb'4V=21.JQF4M2Pp;MbDqK!^Lk/"_`Q00M;*@=7,N9;bj-9SKqt6X[V48>M-Qbl)7AR!Z)IKPMVitkSVE$#cD$?KZ/==G%Esd0Sdra^`W-P2#]WTZ"`9H5W74f-V2/:u449c''$F2HJMmagO\KSUJ?ketm=:q`6Zhei`JQF4M9a'Z.!mZ7.l>Wi`+Bj6,Cgoel%Lb]AFl-hfg%6A@no9lH@3*OeGA*Aa!&f"BqL]s>!MpBS8a3go9PS6)Fn!A;Vfd.r9;%Ft2#Qi+Edu>#<Pm)B$'/E-m9l.AV_rF/Z%lG[W,l?H"DZkQd:9O%`Eg.gXY*/]%[#JB`H:4/HG!2@$3p*bE!:G-IsI8T)E_iFG/@op]\+lIJ8bF6@3b+UM0N^Yj`S<JJULT(.'%Hb(b;6"Csu'<1uT<76i9$uW3FUYS4<i5nrJB#3#YO0?)WGfJlg]5j+;bFKGGjWGfns-d46Ed)KW'0#I:P<R\SLcF"oaghBPk<:6Q%1SRER*%o9,hSh:o_1$dEM2ts9mndWD1*]!)"eIiM1L$pYBZ&c2$&Mq2MG"XS'W?n>fT+nI-3u5nOAq@(4U-s97@bYK%@p%QkMF&8%UB,9$(9_[rlJgI3Qspl$?+?s!H#7Z[MMiB%pjUY8J6++LEnnP<nPWnO+*WK\)2APgYrsR?jIsmXYC1\I=!rPW^Qe%Mec[)g79Bfd%Nq7VW5+e=KNt6rQcu0YHBi%?YS1L@j3nb&fM?Z\aC".*i6f_bs:E]#Y/F*lMPIg[=_iP5Q'&oR38_;^?qfWpj3Zb=jUjo<OJP%Z<%2j*?UI&&=54?#mp*Q9#P[&Xjam*%)KI\Mhl'WH>uN^6&611[?P^uF!`47o=(dY8WVe.$[6C>H"WHfVbQg+[+*f.E^QBDI3hQ(Bap%O(6U_V46Dn8RR;!,IYcHV@cH59f^q;Ell2gaDPT"1t!0/lGY@=l:;1@@UaiSYQ;dW(=HIjk^DYZei5spGLG#_pVj'HAi8?7QS8=.%o1qT"r9)8dIe9C:*^'5WdG(:@rW.J[UT3@R]q5'!k(E^dKU[ZUKcA!QQs$34(3jU^CY^Slhu9f2e>B"Jo9oaVplHEt'$ZQ]I\eqR%ac)_AM7k2\kTcOA*_Jf!60KtCb/"nRVh+L*`GOu,GYC);5QhK^aN9Q+UXg'RpQRo(Ib@6?1mLsYH,C2cgXt'((fEI6b>W@C'l]?s%JmLX+&bMO-ceef4K=deWA"ep)q7(cu%*YZdY^?^2oR(>^Pi'aV%e/a/:oM$XD6C8\BS[(OGkM<-cbnG"`dU_P!3]-"XZ#:8SDE.G%o"*koILYZ/]GG_d\0.`"H3ST;8ur.mXm-D.c0#&rF`=PUg;*OZHF-tb:6_)t6R,$sloLA.XJ&e0f`1UZ3V-PVn^V+eHTeq[s+.3W%%?QEUI*>I'A`Oq%X6GLZ$_=?*W)ocVW'Dg"oBSAhkOeu@j%Ic\h5n_:UpQGdMb+S$fs0*?EN1J;\1P1GUg)L%dFaN_bqE%LVaVA]%M7Rm=\\5sh_`jVo@6)'9mN#j7BEs""a8X<%C6#LFH].2Q\kUOYbDMhAim#L[\\1Wmb]7AV0,]?%WK,/!S":b4K0kTD1XmDs)/9Xe%*=;8%Eb6/C%`Zk7)$@t#YgMkWlIU!HcRcqo0Ah,sdG:GX[3f5goq"+>,Tg6&j5unOKCRBZ>HSk#PM=a?nQ:?0V5DLE:hMb`<1<Us%dUg\/!O_P']R"Q*\iLHR,1Ljolqg8@o>B/R1C=V(r5;,$24T5=.rE<Gi;iu83F=QB*4rVF\B/m[lYonSo>^Rgj(g=2<Xr[Jh<`^,%_e;bFFh1;9qD:3$Fik_)7YQ\tAP0+S)nS-3CK_HTD.f!5T\g&nXp-codR:'(2umWIBBGZ?_QJp=n9M%(oFs\e&#k!`Cfbf^<(&rt%$e_*)Kj>^[aVWC(].YuD4J@#E)F]8b8csR4kABSNGRP=%;"eq3A=JF<rbJbXDJtZKZ.mRYf[\@dCR9acdE?\SSYg:sd'&!bSQi]g%g<BQEF1:1*=bLpi46SS,s#U&kkB968?ZR1W/QCg.:lQp610GIe*I-MV%b9^shQGo)FuNiI_VglNY:MWi_`Uo)WnHQ#N]q_#/T93F%EeN#f(gk>Z40pM[Hs,r-12HSF10SIXlT@#6OOlO*Q?JRdYGI!/]89f6N>7b5T'hO#ndj^1Fo0M>Hi#[:e!ZKpj/\a.-IPC'p@Y$N%1V;1t08+eDgHE-#SA1@I3O9+ZphJo78qf9*Yu8=:]R)4M>$E&%]XQ!&fc+L_>oep40XM>3_HNF4cZkFYdI/">s8<U:c>7G>?\JCO%l.qoo[3Arcoq'iFF)3e8CS<"R2"Db5i3K"j:eh:nfO="uOIBGG4<tgW8=p`EDl+BBi1cr<:5/1@^Ih4,KF22S72o^._fLQ4..LcJ%>cp$9J?TYSf(o%U,1"r8[NG=T[hmkh*GWo<9/,rse:N!Yg['-O%9guF6dLRWnVM*A_e\sT3Z`=`A+q3M*f.,Z?F1kk3"&rC?>j!\%o?ZeN^W*YXOc=^7dB2*XW4[I!6#I@DMA_a$=KLP38&=%2'3O1l2>tk%R'rd_dXj6n802=?<&Q3l-d+X2SjM!s6oQA]Quuj%9mho9%j2*.M[H2Ppl<$TaV`),@[DU]lZLfU5<`fc0Yt)tASCTg\]W+gj>(Q?T1H\n%?q!LY;8_ZT$GD6F&;8=d1csWWhqX:Ag'4'KB!gT^%)\FFK\nk\A9np`"l\5h#0c"lrR5hDHG$MD:p=?i1E43%\K:;hh:$'#kf5[Jhf(AIc\Cn`>Q8f[)S5\(R0M8-8[u<XqLX_u@_)iqE%"P2$rkit]0hHA3cVhh@<)f8g`:enZrpp32<aq[qJb\odK7m]D),k@Z$J\F*)<ue(dgud%O@f`KuY4Hs=NXM3+n)>8ZmVjcE<0BAI%.WsMmn?p`QT?Uge:Hb7)GJuSVC;s-W2E$&KnXhk/o=@&F]?f4>XM&@i>MhG`2Wo3**Hr$hVrj:GAh>NCmJZ;4F'a"K3&g5>AU&Xe%f!7'-*&is"*CH<+e#:poZ->3#$JQTZeL;W1;hbUT`RVgG[Zni"iLN_b#C(A(kYl#h,rG@5+oKi,lfH3%h#=r9q/NS#lhe>7P`;!$%P,FgQ1H`sjAf]^E@A%Q9?CP[I">cZNT/s;(50bUcR\4Z]Hg.r8ppAK8gpD5k$c,$Sae3HR)gP'(U)clUA/iRD`^RUOm)mpV%)J(T%:=jcVqr=Cf<msHsHbY2KHCLqE(1F2+gLBQWeN:RI;a@deABUgG'CW0%38^u<Vlf]=/Wf"1AZr<3meku%$)aA]1K2Wig>;4lrobtt%3d!W!hOW\bUtq1aO7(A.:S#aU9oJ$OiRbX3T%7@3K\kHp/P2ElZ@cZO7K$@6NsS@aVh3h\oH]Cee:*BiT(33dTPk:p>#]Nod)&+7%?(SG4W+==gc'NXqZI@r`k,t5p.nI.O7EeoeFVhA>LNF(Kg"E7.Q-)g=M,j7Q3M`6!CD6[dfh_/sAfW@$JSn3RPLuN`N$)*L"k'm9%FEsFcHKR0VN\/fT$q[_j:K`?s3dR?18(9hZZ%7HdDR/t)<j'E(f^:D*fER$a:;(PlK8]V,X;6qDA+r(?X)l%a[r%4V'osuO1k4$4%-Bcd^ia5uQ4M""kqq[^YHJ@hti\KH;%H/dd'reh>1\.hu(C&^Bg`#:a+`RQufV7Kc6D7d43<R@]NX`sJ1\Ct2H6o4bGa!u<-7@l(%T3+`qS2k?H'U*ac'05B@C%Ak^EU_KC(rmA83.=?mK^tA:pB1:Ae6a\af+q3WL])-Y)Pirt'\bjr!AYB$Ao81?&0W_B>jA\<r,ZN,%k2U[WY/*?6fM@_4!>V.j[h[!s&h[OdA^h4srD]A8p7/hVY3e2m6k3s7q_`Pq>2VV9fSI)3GQpbe-FclMW4MB0UW-qt-ptt8L<<2L%7HSK?<r`igJB!a(UFB,,4\u`@V)Al$l8/!bCG^qV:L)!tLQ*C&g%2<9CP^?)/<<c(0>X<-F:CY^hLpon,>V%XLp\F7='g2[5,SFP%)tlODedEqNCVQB,K@]d8gbAadSmH(D]pj_EG&M30ZpnK^mFr#ddqb2[?`r)KhKXD(m&[hX=bL$I@BXJ4JXYPl37n+TT]L(ui'uIg%(3XOXG/%:ggq@^Fr7fiS,F<ij[<95(T\EVPDoKSr/][:GgLSkCDpOlQ;1^).a6X;U8(UQ?g#jgiW$((".A^0Hm1GMoZkR[9+$5F]%7TZeTrg1MH&b[m50`Nu$?DoEM%&1,Ph&?ae`+0PdhS-ZW4RIdVrG^"mpVP[k?E5eI!PRW;aL+fN%7AO/*?J:2BX0imR0ETIN$3bs%JQXXbbCOU)CHidU-%*88(N,UiR]E^?ML$e0MPe(kMBX=)YjT9=0O"r+j6i8g>dbI*Si'R/b\Gs.`F`f^gnhe4oLoOl`I1tS6%LgD%-r!bD"3ZuSA?0>gfPN+214/Y';J%R<](#tF_i5Jr&C?nVH[uYMfFTOdTMe73-H-JTE?RA_rOUAQYe:,K]j\-9M4n:Z@;O+4BU)qf%R:c)>5ag;_Q8"+dMTF$Z]ueh_`1]&+]OU0Q/jcb71$e7o*L.c#KQqiR#@g(ks0ZbYh$/Nu!b*k+DDK/OA/9nqMo*nM9'h$V7%R6&%8[)[`I?0d+`2=CYBq=eYm=hql[qB%EZssV!p4L$O9:ZG6<!hDURTT#>BjVo,i"RrAD&GdU6Yj`L?grcc#[:N>rGpZ0m>\a&hL0`@%(2K-rnl_10&__-V<PCF*3R%3?g^\%kn&8JN*OK&?4mH7XHf:!*Dp^Ps_+UN$`*Y\*T?fs"$(!<Yroq=Uml^U5'2_p-?QVCVpu^Ut%*r_5uG=3#'-_LCUru:fr4S8%P9S_;:-Te^EU#aIW4^!&9ObI-/d9bn0#?GZs^#<jNpP-^)n%O&:]uuaKrT*L@5(<G"j$1<O_<6<1%!IjLsJst.Y(X82Hj!U=f38"eRL-e?f5UA5TrIs4**o-n$Fs'D,j=sd@A3GAh\9n/KC$k<\bI>g<g_#H96"@>`lS*Gh8Qj]r"Zi.s%hp#7\>]LGU$g5tpT5:ML=*O4[[J[Q"VT``I$(=QuH+"Jt@4*#ZB/WeOX7N=1lA_o2b`.Dm"R3IZcLrE#+Mej[)gqq?jPIhmdokmI%cJ1I`(8uO,D@Kn=F.;3%T!+tEl[18;<>?[Jg=Yu+Yf[V+IIs(*D9;G72=sBTNJW*oB9tQeP;>8WR9<iL/)oT_+h7c:d"XWtX,G\+%93kT//@-mBbF;ACNFUAkM+`*]_gc3mb;7l5W704Lka-"`m7e?eqftU%kGaq20&.(n<S9*N+V-3<kLbNc@=>K6M`/MgpY]LhC,-=T%%G@6#Y`@K$*-cG]6ZQ]Vom4k'Z\/7]_.J8lCQhdD3NkHlOHsst%:UKm3A53n`o"*'rjCRHbq-$PPgt$80C_B;8M=a9Ck'nSe&/8&%KI?&>ID#a=)Qj+?F^o>r,8lsgdX1;k<::R4r=8ZBBB:f$ONk@BQs.?$eU#b$QFBZXN9Y7n$f!)5hKHq-FoJ[1V(^SdANt@2g:t_K%O@+XG)`Nrm(llm[+mu!.Ce(\c^?p+Jj22Y6\*Y=<Wigl'DYe6h;[^/'53`Ch^rPTiD?Bg;4!o9&,Pn:[JV5d[WRQ00q6jCW8u7Ee%=LN;;bi),c'?bDsNneOkcJ-f[]C-h"_nGCX2S36ZST/G$16?*D:pV982t-kTYr&1A\IbdNd<,8MZ.UOG(eSr:QH=7,4n(&%&WEM;%[!dmM6QTJTEfN36_IVU8Z&cVG<J43cGq-6u!`\'r)B'bWb#f;W'K.1]Jp#-h]k0t.B.-AWim&%g6d&llJSNibUNXm3N+M`\7ikq%%`jYo8bs8DY[%Acj(4Y"<A6H4mZ7U]Q>MYi]]PYLe\#ihPgMQ3Ke_SgRk]R*gF4_)Q2V0M(H/u2:&pu3ffsb1q*OIEf*jgpZ^$Q_@%?74XZbi*r^3?6GKF9]rmPTf[UeI#XmnP=32?L:"bJ#8K[[=A0nFSCBjheJ*A7PcO)%GL[^VUflC]tAnEM('C3Gl'!hWsmLX/OM@V%6rq9?KR(/rG]'kJkY'<?P3?62KsJ2\=Qmlhj11/,'+-8Hg(,nf`-c="AHjYofNQ^41D)+SJ9)YK4cRoFV!$7I6N,+S)ig!'\RXhW%V0n.<8kKZ4Bj6B5K3$.N(//NfABCCr(ndM3!l>9BH,8h"Q>mkUcnF[4bn6mL,:!SLn-T:/>(Ue,>7.6VQb`rgKG^N17d>2ji*E'h%1eOC+(n*i//K1;n)OHCWC6uOE/b2!NQ996^q5I)<T@0#FD/,2MZ*m?@IC'5JgP[aT#+Dd)<`EW>aS6K9Ve$5p88OhNX\A?gqb11e%@!gW<nuk6efYA79.LqE\m;7i2S7SV,Y:`A[\jj1-DTuU:g[2O<'Q5Z.>tmIh>CmhkX@0Ghm3?:`Qd?7Y)pEp-9<c3KC?o^uaM5;n%!n&[UcJ.)M\:q'B\$%Dt^BE<[[Q1Fuh4?-VlSP\P;e1_?j[4Aoe=Ji2Rj1pWAAMU_hc<,M%(,0LTEj1g]<[gcmY=(Z^o=d3HJsVS%Vt'CGMcdtMUp,1j$?"i!D>UU`G]\paqq7FZmVTG2]Tsa?LQgg3j)k&g(l2GlNn/OONdCN>$5PEI'HKt_]Us2&97aBe1`3Z.,4Z5U%["%+jfr)@n$UefXiPjr*@7?kd`5(h*]eEY!F16&%ga9A@n^aefDgpQm=p>?O0%CA=4D6ZsLL>aHVWnV2^eM.F3gUhbDM4aa?(T?c%kAY#cA&%O<*C+Pphk23mq\SH-JdilhBeH(,E'6.eW\DfTq@4ee&E@M-2Q4"I&FH;"4*`[;EoEEl$g`Z*aF<5!o4A5Y@*!$;TEc:W%_<<j[$_.5=e/3D5RfTB8SLs06^fk<6KT2!_N-R>e5a<=#6,I5%&^bK1$QQJn#&<6g\:c9=pQ2@3G]X%A0+LiTGAh!TB\\*eO9ZT6%Z0d!Oj!TEYenpk/R'F+P7il>"<7#dE(G4f$WWfhE/ae33>jQWBqr+tfl[AYIh*/L/IimX@:2CtuJm-W_Z?PGFg4!+]W:lqPf'XHb%(ASk`]<QkE2$1HWb,<phiHVtV>0%ai"smlpUBSQ7:ra>t[7AV"LrRZhHMe7dpZtt$4'S:9a!!8o:s3Z>.CcZm)qX8[J\1GjO5C7m%`RCh_SC[WO&a1fGIk>5TU38e9q\7s/Lk$Zm6%I_MGCnT0?cBD+PBSP"b'%P0)CX$4[S-4G?1"k.Q%uQO8+1u:-bkQ'oI!E^+PL@X%R43KHl%"IRCccaH5nOg0JIUqe]<L\MY@9QQ#bp)9A)mf"^IGV>]?tO-h[)KkS?@<_na0E7XRH2anOHY&r8Zb6p[@Ets6/F65CQ9o%=If@dTW3XIIT84Nr82Hr!FC2!n_B1Trl3]rr;+I[?X>npVe4i_m1W2XdDb0rhu3#gQhH?4m(Eo^!rjM(5Q7qNbEq>]B:$C3ICT1\%07I+MA9pSZ$2g0#,S-bT?pZq_NMOCufbj,'$USuK6U/=d#SiTj@97C#"VIm?6d9G^NNRQ$U^_LF#^d=55-tNL*oKn(nS)>,SQLpV%4h17n"QV?"PZBlcer"p@SW..`A--LT0[i1Cr?M.CX=lciKdfN*+:24+o4)AKjh)@ZW!&D'R1M'g8<!gBKdi^18Q9!V3R,ej7?ltM%apVN/K9eqEWfJHdIWUPqRmFcOP)`Os-p(N`B1+m7`-k>t@S$(H)*thRlnjcV(b)1N2lf@Y[9N\u+NMit"ic[eINtoLpJ=?ODe-BJ%%YR#.RjJZ)ge`d-UL%lFYP'CI.1oVa<eVZp\l`oWaXs/S,QF4,[Yp9qFfH11$YL4"&r3Sddn9jI@A,%XqiGBL@Kdm(T8F:`\'#I=%-aLp9)#>ZIh#oF4\\dFaLh=>rc@uUQCakjiK>^6P;i!N]^:g2;0f1OCS&U9<3g4FGSW*'!Q@%%ML"rmC4_sj.&urSa:R4?SUFSA!%!\WRGakg]Ys1>`<:;hsZR#G!:Hsj)jK:(E?$#5.B3e)[i%snRD3W2Oef!J7D+,PE5$3MMq*!)>[Hp);Y)0F%h#8`f"8OU/L+/0'_%*)g(hiZ/-kq6igVVYGNH9_j^MP!'CC-\k5oQa]-%*?-0t.:p%LCikulN8L?'Bc86%6iuT?i>us4UWs^"^4j'/Bekh&SIr*IX[geu%BMa^QLEY]<Y__3\d,Npc)cSQQ+'4tA4nB=+PB#AugI#Z^5A8Rh2%U_jT?t&9>]9>As(Z(m4o;7?0#g6g8uk.2d/EI:\I-Mf`%W;+%,sf4-SG[6_^jp$/fa_@sA-0jG)<L0JJ8s\DlYChNp=:V3l[(\21);1caOg,,]J3JuDCu86l8[N1&m/o=7<3tnCI6ZnN0enUZ+0<U%.J)iDlZW_-;1[SOr;#Gq^\maDn,Mr3+8l)rYQ"(dLFNs]ZLdN/aCU8%r?m;9iO;&OjJ.J[FRKdX:].!#m=-2UmBQTbrWf'FroqHF%Ie!6Ocg7L3I/<(4[sn#.0-C5]UJDt8^!:0KpV5_fq0Yoq\Zi./\c9eOrnq^%phr?Fr7B79aNVEri023B+$L5FlMcDh55j@\I/_*_%&"i@dA'qk]EOboocej*C3Q<_Cj$0.Yp@_R;q=q9<s6\d?LQ=YaAkofV=\@-@0nlK>WB=uQC6lX>#.Tt"H4=a"2@6JuI0jo?1YUD(%dMm[FN5C#@FeTa!cBXoFE$'L\WXUN'a@D#oLr>,^MT<h-#@h;b%Z:#kM'?b&2%GA?lbQ;99P_p9*l`L>Y0`[';)F@&cR_Dn$56_W%"FCo0K+!qBmi[Odr_=?<n@g`g\%eplQ;aDCW)D][KRnj43ANW["R6oO%]GA_UFfRc^(3mKkl[%D20%oK$%gAK*,@:pC5Ba,?Zg=F%4[n00._^;>,Y7*6+Q<WAiB@Cf3="3`.i;Jn+U&1;_Am;iKqsr%F]PMa*Ud:_-!-p5W`Dh35l^nId\r"qR5;\h!JsNaZP>/0!u%(U%Je?aNKL52DDREsk'p1^Q95%pCTW4`oH^`ld-nZGFTLHkKe5Bj8F>@O',X.R>'a[]8_]Ysi[lU5(0?V9^W2JS6,>NS`FK)!:c/cOI%3.MPB`;6;(+ldfG]HGQ5!jr5gB(rp=I74//fL_>pcQV,;H]a".%\4raM'esW>+GHn63qCf\gpo/L-CGXGC1FV!d/AROl2WA8r?0_%!sBVi7#aOmKBS/\n>kn"#+)-[>k)pZ_7:$bL*6"Xa!*jWr/`\4KAV]bkK))_QPa+sUUUN_TNXe*6)k$lWP;9>N[u(Z*s2%B'Ob!2%dhE:^mugh+2u8A^$6S>f0qCmY@q;<V-Ldf/Fk6(0+mWt+Hf_"k[oAWN"H'!qJa:S/n>i^KPU$H4TnZ"!:p>.UAIWKAf0h&uej4?q%"a>gNG#ZbANeDh",<h"%4$9=,S]`]n`02<OQ[2WQG$MWL:OFYX5m*I(^*p@ll>;gJ^l8WG<c1M;0H;bV3PDa/@k&/fHMC<t*5r-(%pk9n_\dK5?,.;L@hk^`SWJV/:F95C1aho(!/M-?XG80F89-LO8XA3M,8JU?G`!fC/eK-`)UF`PZ&Z.sm\koLs=;<T;G1npu9?Z4q%fbf/\G=G&RAQni:6d"\%^1Lj\'a^;:rU1:aM1\8:"!!4UR0O!*2TCR)8[jn7%]/Y'L&rbN)MA]Hkco3=@t`i.X`^(-YaU\u3.n:]%.$6DeasIWlDJG#-Z+K[+R:'a"TZkDD.0CTaR+=Ij<>W0BX'V.0+I/7oSfLRG_?02B#f2t:FG38cl(IF(XCL;tM6K!p)O+],Aqd;t%L(#p9.@6#/&IDZ2PFI(:j=C9DNM7gh#;.,[6gRB-W;q^V.,"ok88.;J79j?@6M_>K;s>QZ08@j'Ue8#g,33+^h_B,5]?"$tl?MR5%cRL36RV7[)"b&/r!d;1r1'q]@Tj!7l(,]NbXp]NY&D.\/YEYVf1H$QWEe?o=eZHINGN`(E^LQ@WMO=[rL2g0k*JDNg*M3PPi;O*K%;4H4iP/kR)!jYnQ#SFNHQOu-E(([rYSFAn]F0HLOH=?*Sk3DN[am9$i\8_W55[t%-Au_</5p1YAXU>8#7Q]f0[K9UgY'm]c6-O"J%UVdP(dX#dLjLQmAcB\AaYaI>JEGcJHKO4g)fHZgT7njC#gDhST)V)nO>BE`koX5XT/1c_[o9E<"aHAW11<RHJm%B:c7k<$-G[qd+%Pbf@!=(3nL3FaG8f*Rks$N?3.#\%m.;7d*Vb,.G-+0N,!V[2Mhj&R:\^W%CM>'+,*,m7OX->5Y,EH:nk!65i>X1b!s?4(6bi^qXV%!NdLUb&Y"A5S?._^^;+>@31rZp?_h*pABEKk<O#DA9P5E6D'7Gk5p@_XgE^/*A@Jlm@bdaCGRZ@IBnm,qMdt&VN$//;q;A'd(mpq%El7ss>So4gl"0.f<pO*X&MXh,aC`PU4p-1Vh<H5\:nXN)_-h4*/%FCW%+/g))_lA"TW"$(('mk<#Lo#,00"R-;q"7;=0N%O=pA5=%clG(6cX:%_]_C'R7%j%-\T@+u6!%LP\c9\]fcZIWg,/mr)-XZG]AgRmf8A>ulEnso0'669bnQHu`%7!4K%e4FQ"5O*g!c)mf0GhU%W62VX#1j'e'-@s7Q$#*mqTgm&/*NgqnR*&/BjAd47b-K=ZaQDrAns4b+(\jWd$:-K!\gu8"o<gphSR&ALlLT3+L&S%obb]mh[)05%Bd3M5clT]DPs%<aAn"epDnuAY0*@#'"Okl&(RCQ36&">HKp7jT:sD]rTH[tmBrrNY.$@P.;&Qco+=g>.rhtD#_([KcDaQc#8hKJF%.e;'<Qu-f:b_ns5_>+cV"Ms--Ah)e(KrH#t<eR<;e)e#SoMDI>GKWWT[b4/d)k`j[eNjhTc%9P+#"S!KC5u5f#2=MR8g52&V%X-<%)@H5XaU#li\V8G6b"6jO,7h9tj^rN!+A=r;CW+E^KT_>_;s\6Fe9,4)[5siMF^g6:pS<AVgT#Dq2D^#MP!N>/=#bW8(Z,0eL<_<(%Ac"H*fUGFaL'!?S2_Wk"SnHncl<rX@[E@)RIn3)0LVi'[K*^fq=6cL+YXhq,mY7a!,CMdeT^_A8'<<.m+8IuY(Ccg3`<kT>)G>Po%??EIA#p2n,&-<;u;+2Oc)mi40XV7/[`pc:?/aJO=\Zf&>SOCSs&)S-XkL!]"s3kBTJ$6]doB>g2rU#gKIf#=)50kC#$,PDErarpO%7j#ehs6"UPd;pdL_n@2mZi22dTSAg+hLMY9L^s'hkB@U:r6l/tJ+fd95(.Ni7^&o4a4IKmB`lp&0BMQis(q^;J+E'g*\3Q>nX,?2%mfr=)8"Y2(n/!2GVpNB.31F]G)CtUB+1IH-?MNN5d#Ip&bTnp.L;r\j=;d<r-rSAfE&E/Y&u4K==H6SAZWO(,YR3V`"+=AJpf+W,%j;kHa=RN85P7(iC$);"7&FTQT$^.He#>%dih;(R_Yc/@iE$8Po@ApG$LdbeJYXfs_-5;/e\W6l%iKaDcSeW`D>(H?uS+:"+62297%cV?%GXNbf`W6Q0*35qS6ZuC-fB+u^V.t7hSHSUC4i',k^Koh4pCl/")d5^\([m\_`%O-g1/LK0_g-?'Y4!F:-"6ou6mD,)`pcoqh%ES;p#V?*'&<m`=D`L=Io"KQN3O@Aj#X@g`eLf/*.)Buo_,@_RV;I#i+4=\\ba.eS5JMG*c-q,jf<pY$(^9j_Eod?ItE;7<J4*7P9%A,%PrY$+4/XX?TEEANN:(^it%>\LUiER;mB>6lhXLRhj$BjL2D)K8MoA$P](F+q5poSmfq%/[J52c-k/HTE=>;;[2*.UiSCNHJ`G%p4oWslSc]:onSj`NPu@O*Ze5d.]XTQP_Z,tOVuGEpN9Z]*ak`%2T=>/N*$oOqU61^)aU6)%ZnO`6f&`GU1dXt]F$BjR+TkEfbD\2%J*:[&<:9!d`med3WR^,]Y18+R6A`>B[2;PX(re#iISEi^X$[hYo''c>k*>AD91-#`cHf_LMGsib<e$@g5ud'VlOV$DN],qqP^(RL%@ou#)b<R7Dp8=kV(:;02*32f=b.J*kLm5?GgPl.(E2G=(nfer*^m4O'jJ4"j0ik'6</6Hr%Wj"rOmJ&j38sS\XY/bS`M>Xk^S3>5%r2!"#g_lnH5_UQ'a:DaE"3)ACM5YdBWdj*)XM%>eBgfm/$q;X%rerRi*]f;UO@Q&C^G&S-K^7!`7\ZVmB9t!>.Hs,VoVV1)`FS.8%$hFDZD4dAK/]\6_pRunp=FcGFWcmD:PP9ltAX\(/PNfqT%WbN3;c)&YRin6D*\6fbm,8mmoYJM=0&ku.3d(:5amtX3OG[/q().Ri%E;L8X`"CnD><0Z]kJN9"o+I3hhc]?j'8m(V<XiN6R.;n)8LMZm%2C+H'Mo+jX7O8;&sgsMH)DK#^6:)aWiJ7FrfGtN67d+B112h[%DC#U@%gtT.^;5+E6R%*gUf_6J\mW6$-&o@o1[j;2<t];jL7"1=0-E+,\1(4_EN3Ve]4qA2.t(uHh%Z6,q_LUm;o2M)Bds2e(5N\b%i,t&_GJ2sS1nQ!5oIBQ5[A?Qc[ceH2m\1*9bR<m<$MU"[$<'JVU0]]bQ=qFC&sOZB(ont`)nZ^`egHLfl<U4"nK4d)5U4,ON-dRN%Gl((hVe%D?mr=5+:9%ZYU1/b\h)XjY;a2kW<d8FADF(AF48_W\g2naaLfmU4DC.)LG+YR+9JF]Td[^\u\emjnOGY.oqbEYBn=k(g%lO/]8Z>1bl;H?Urf&(QfgQW2?<9.SQe[uG&6)gJP$dZuCcqH>?@e$*2QLU62:se,'@PsNb8=(@Y"X>R$obC?+X8lOGs/@I`@W[>g%NGEj:VLfpKV)ptYU(W#JC"n>PLD=Cn]p`]c)_F5_8Ok[qc9[(]6r8$&]]`51oD$<BWD2FP1n1R59^rs#In'5G7O\Om<L]\+M&9$Q%^<uR%"RHg-=iQ779)oR)Yr>mo&o<AGGAtNR3a@KH5+f!&eDXe"7PmfH:&Jm4NF/>'psZ>RqdjhB/2>ns3;mOq:YF2F&u'&<P/OBq%_g/1a'(kHaf.>25"7O48O]ubt9<-%Ne/o#++lID9VhR[q_aSBK78$I'7SJ)@M?O^odGG,ho`K[-\=S^Sc>*\+<E1XoC!hAY_U^p,%FL.*OP1HODQtCO70Q"e719td1*uM\W`1e?VW*s:Qq`nTJOXV`i&NEb[2O<'^g$o2GA+NDFX0Z],l(a'+)KqqBCc8_`I?Wd>`bK0R%Yc';`e"f'C%LeiMfP<>q:*qLY<oJ#+AJm(%R&FQE[@i:-C0G?heL0/dUVrjgil!V=!`cDIqNsk`-HAHK52.Z^5d`+JY0M,i,&E`8%,hHB#=gQ!W5>K@5!N9&cI0dM_#o98+dU<=mdH7>hFZ#p[YK8K,g:"gkUMOZ]p2neP(`\j59m[SDdXO94=UGS7,.8A46`E>c4dqjA%MjKOeX+\:qiKA&P"'8IH(-Imj-D8&7jIQciM.C'qqi%S(*K(Ll_lqQ`/UGntP`f,iC&%.3E['W$KH?hcL3W8fNpknpSQI`[^d+.>%&fhC+;,T[l6"17bd:8c:@2[9b)8`\_P.IuZ#ZP;(r)GUL0=n3Dgkmq@2*r=lOjh^Y&nUnmbqjlXS/0AbAhP064Ub])P#\Y$]a[e`%X&9=T1k]jqK\5eN%4j$O:t<E`Kqc*Xm`DRXA+EX!a#"KVdtpg>$FPsb2W52'FdI-UWD>!%Rq`/L.tF#V,'!-rB:/0D,Hk`sb<RVb%d5m!Y1brMDBCbE'gb1a_>r4r8`M(Saki174U@)4<6]J^S(8*c+)+<aH(fTn!M"12bKPBd:J$h:9YL(bIQQ7!GBGLq[Os5joO/>l5%&&t39b6ifFf1Kin*g6UZj[<Wf<(+>=gdG0[d=0U4eYEd:`7B\IS92g1_A/38qS(eqUP?Q;pIMIu04n]u;I"(OO`W?.])ij4MKbKR%,;\Q2LD.\U5HG>6>/YP)>:fQ:2T*t<m9hW]Ec1jrKJ,8aJ#E,fWArErCC8`5c+=i.2>dRr,7[eed\Mj*e9VP1_qH!e*DN58`&"dG%qu\ONDiR%mJFmS&q+8MZ`MqK,rokJ_@fVM;d9?L8F'*TM[6#C(FIM-qRghK\UM`=f:&X$I72OR9<!!oVXdbC`86MM#iul5V=UT96%nPCB`HcG9=^q:Fl$nkfIK6Ak"+5%l+1!MDS)DS<h='C];d@=Q6;etPr[>sSb1N-3XH+NR(C9`MqSdq;k$4SRaB?6#qrCY>C@Tl>)%j/1;@f:,do3(%h]@'lc`XI[Ud4`jo!DYbDa#q-bt6Hc@s%=2Ki@L.5oaPtYTOY$<IG)tE4(.ToOhjG(g@nI?SIR?l(4e8VOO@=-q%R3N;8Lg>uQFE-W$=k+%Wo]#-R<f8<hKdWPs<LR#h:<;J!%KrGu;E+,M>JZt0kbP!%0/5M7or+3hist5H-(E#(f](kHjfCR(^]Q\6%9@;7F&Zd#V;"[-UA)*m.\*cO07kngZj!Zl8[QZumV@[86'=#PZ(gr<=,KAY15!;k/&<2BL2>#PU_&U\h!nM,XK/m01VmR9pq2niZ%9Ft.9c_C%'.jZ&(TS[A-%nYm9i^\6?>e`tTArsW%VLQS28(=#9XTQEg`58YB`a'J]b`/0G/C$8YdJ.2'2-FQ,L2lEho7EN]<N?"4%Bmo%FH9A8kS"6Zt"IW1Fm`<$T-.:2ma^i&GP'Bt2J;adr#r!Y?@Ase:Wc)7Q$]Dj\+T?0r2O\G\B($_/8bI^=21A@.2gJ&]5]88G%e-&*l!TaC*2*ULF22=K!,8j/<ZPjTpZNY->)aV[bf$dVj:XI[OnW]d!m'98RdD0f<#^re0c'o*PCs'2l`k)moZ6#[$VYr&gQQ4,)%n'L/`AV:FpbWDTn)1K!)0PtG@[i*H_TTYLe\CB'4C$OPfX(DTq=%bI<P_QqNr<rjaNk*&@0^=rJ><tDH/o0R@k.8_#&ch)rj/"9h%1N>@tks[JZV2!^h:pk%1/mk'<WFV_+eOER/)eohN^p;8pf7kHdR`k:@rIm,>1uCs[C'B!(S`GqlpM#90Nla=Mhi_$+Zn'Ta,q,DR%hTc;iHKaKe@cS'-f[Ni*qEaGE/??[\b"bQ@;&%R4WU*UUN^^FfJX13ILoY%q*_3PARX,\<Ps3F,[B)?d?_uC.SKaN&Ul$llO1q]'%?D:?HEhb?hgg6uV>[R/`P$Z;d^Vas!AlT*aN1;B21+X6D>dMm=Kqb,OSZkpH3A,_WA5hEmC/I:SD/jQ=]-W,5=ErL'3m0YT0IeSK%,3$R@,DGY*UWK>"e0V'h<+-9DCqnI8#R(o=GrGq+0pkf>5HJVtPK=2,J(_6+)P0uV#gmFEid$tr@8A\SKkS[%)$*[,SYg1EClL13%Yb!b\"EoQh[Z$C0hU0Y;,nORn[>=*p[<[DQ("JVS^s'1q.fnU)>[;Em>%n"9"%6<j:^n0#=4an.NB1&VP0/l[8SF!hAA9AHEn*L[%O)aI/<uNoVM3o8hHTG0Wg<A0_7\i'`'>?FKfX4Rfm*JdRL.50OU#0St8qF$iG'g9.3C6cI@D3^u2/_\_^=bHNW2_DlRYNJAf38rL%W#Gp6@"XDX/G`oX,ZSDsAl'SCB,r1D:a>;9Oq,SgA)<;=<Rh0WHTsTN##RfN#KLknin/C@AqG6,'?@Lm4_8MbjDIMHDM9jHai;Rt%g!hVGnFq(5%rpIn/5=l"Gc+9D_"hg",^c/354)5c(iL[NC!BIhX*`9s#+A=/7,D1N<J?lc+5IB@GGER`GATt@Ij+MTES[VbrYM.2%]al"i!k0g!%DClWn8;F6XGK,G65*M3]hij6AZiEO+OCaL=4AHJ:b(/l1_r+Ri)pB:p>--S$_#SgXeo@];1MTfm!CQML^I9\%m4+A%2r2/P.mLpXfnC$MdHsBZZ2p_r;Tf\Z9m\p3ebTUsD)lC1Y<EiDmHF#M>&ANuo=/3Xd7cAq#U!oWRqUSb*I7:bV)QDcecP"kWJW;=%Q%,VlQ$;`93T\J-.(KXRN&5g:\Le:tW)BHoiHEp.4g(o)e^__VFE)<;Wd-gRR7YVS'Yo=3\NIt\R]2Fn5#Zp4pCOP18i!@i.YHD(%4cS`&pGu%/j:84aEXr:i=_/uCZ^eXAGE%/S<:9s/#['c`K@Dt:QGOJN:/Utq6QOuLZb$jkf9G+Z;H(:_AVj)F/k2/m1>CTSC)Xss%C#d"+4->gElJ<:\n2\`1lY\?c\%70REhlIsCb477gHA3=:/*k6H=tm.jp!;Z$I2AC7L,'IoJ2![CN-nB>b2QT#58N[)rK^OeVtVQ%X'Mc[SZ;KG(^NjT-b1I6ER8.16'MUd9I"1ScW/QunAN6jFXbtfTEY"DAATo.ZPQLK#4X5+<o>87*2Cd/:mui#;'qY.m8!'8C8\]&%#"IG2e)C]V3D)o2h/+2mjXV,c5%^'nc)WO!>[!Mm\dcET^kIl)N8ZB5d*,"]%Psu5eYii%@+>s<=BML"cn9<Xm6Je/O&SR7-5/"N%e,L$*?hCslf4:bg"#D71qOSq7TN+q']L-OEe4MH<2)+P**<paEVHS\rUh6TRgp\U+>&he.N^7DnNKmoe8V9nEcu=3!Rk8m7,T9p3%eXiV8=g\JR2C6$7cL4aF)Hj\o!+/eqiX?V\8JeIS>g<9,\cdB1]/3`HAi*dmCa*mh,7e27&*qs'WlDI[jlHfR2R6a,=,=/efl`][%Xj&<T4GS@*r%+sq^^N>c)D6ch9$64fiVBsfL"R9oVMG5:DI-#Md`#LkL2gX'U-IG8'e@cp]o'fEBF1O9<n4ZUO=.)6(s4^q539\Z%BNd55:4Z/Z\-gTUJgELOWE@Y:KDD8M3VA$Cm.,Xpr[jWiG]XUZD!AsgJs+/376Yr=-]BSc!X2&kYM*:(+.fL<"#Wjlr))-rBp#+!%En#=_%**c=a;#fG3(m8TEF3,pR'qjI@#`WdV<lbMmrNVk/^+s9%P!:(&d:",U];qjUYjX=peGUm/3nVEm0nu/AY+p2=aN`nZTU_Z%P6ts,[csB(oD/P.Xt]J8adtCLD=JPd5irh4RRV-r22nejril4JMb>_[FpD(u@lLLTjWXRrI>tl*oW[PCDPk7N-`Lt^fW:o4I'r@?%HXpJl@_^3Ba[XDG9'&kBRcHq`mWqsLU_a#18?_5B-,Hhr,Dcq$Xi$u&N(l0%=2Tn#Xs-obL0[cRY_QB0`g2p>%$iXs^+XIEk,i^*%C?G53ej(RdXVUl%+W?=p:0"RXfW8dM>r@Y]AMLHU<6#k5/I?P/1WA%>(?U1XRAi,[ON"jfLWUX&-A9_`fLEP\cN^.cg]B`S-^b4W%h4rP=Ki+O-j(U>]W#C$(7Pr.Pp.k(dpKr)9QrKr57<<E6kI)24BXJa#HC]ugNGP!UK*/Pa4f2`H/OgGrj8'@VY0r:Q8]-"d,,r2^%0WU.KT=2*o=U_>pfO?WCUGC!+=+@SNAW>Ah4HlF!UR`7"B%pe:")uk:*"5@p9m7"+G@HCSocJ=SAG%q!0pA/(&!)Z70r:\b9bBEb%VsUfnoZZ$.Fc@0A$6?I)d4-HS^bR8GUVaNb9Re`DMV00^Qs;l18NR:jjX"?@?S\>%^67hk]a_roGW&%p:qM1DDB$(I&bD54N0T&%%bh8LhoJkPsVuUB1/2%PP>=B\nXc3ZJ&a`ij*a"Bi6Y"X3$flN]ko<Y37ts#tB?AbJd(OW81":oNIS^\4eOPKPn:RYD>p(\&3<M#A%e??f*gsmHPc:,`u%sur.=_@Gko1`.uM:iU^U3Gt:fB&)`3^KE;#m'X4nH2_)Ai5ng0ie\AdngsJI](5%eulLM`-CN?N"I7k:"t]^%oP0blARhAA\W*J%d!fi'mK:[9,^N)u+&CATK\AuRqN52WLrk*GK"7g1F?!hp;gjqL]'8ImORao>)I.Jn8roV\)b42)9H;](qnd.f%4IqEb\9mqR-/AQ4aq[.bQImH+FbHHJfSoNdh!EO!b#:$\?6rMBciI)*'8norQ7-o.=khBInD.g5'W+*1.6MaZ0D["a.jKi(ohiVg%>,0Zi=HJMseT*Jk3e8Tj;<,0]rA(kI^Jon'KK-<OOf":)h/fi(1D5f%<!G*0J:hLM\RsH$4[0h#O!dlpM5A`@<-,S7MIP*=OmEUZ%k5o%aN5><GpO)SB$hOKS>HiZKqm.jbHR$Ed'N9>YO]0BIF&+]Y)V19-%KOn7Zsq[H`?AEBMN)'C<9\JsL\8r2,(qGuGNg(m`[D\C%E\^"&Ks:YY_]C,-A$fTX!Z*C_N<JD)K!EO:T;U*t;5V8\VI$fI^.M[3NJaT,NpGr(O^fdB2uVu'K!FW@..k#Lo\VsN.!?J42hmn%%k1+N^<'72L&0,Y6bFfHk*+0#sA=!fB[7(kpD?d_C@4mT[)!j4sVaEG5.7_VOdF4dJ<fg4*22NSt;jXDrgR^<`:2<L*@+T-N;6L,.%1!giFrN>k!^.ef)eF!TnfmUH&4Ccjh7'6g?Zpro)=Yf:#A=nG:mXRnm^TJ+e].@5s6hT$u;2:Ah`UqGY?'Gb=oC&(q,2HMZZW`J3%[r)OET$8tB-,8eL$:OCE1L(\)eNRAD#2AN3A\A6X`^;^r[YT(e/#aU+EK79VM(r4b(gSQa[7@!lM05:G:^r:krdm?t1_0Yc`mg(1%@4aGs`Ec%AR@X%g$YF!C$[lAA+tOZ>bRuU3`6h(]4>[iZ-bBaU>?t'n<<@\DBDBr$F3?DRX9$t+GuhMR@If2kHpkjdOeTQdF,jpX%+Y$59R3NubBd\(kPGieKBM>XKNZ$"s`1dEZ_D$5jQr5eSN@VAP*4_Y!eI]k?$^YiqV&Md<O`jj56K#k=F5%II2Ws)4mU=8<lZ&qH%bK^CNFFcM)&[,=t3hkH/Ju1YQ!iMVo)Vn`WX3itg;`TJTLV?iB7eE_cU?NO1($qZ1@TCAuI/%,YG3X]MNri9lV+eWp@UqB&X^sqh%,,_f9#$lt1!U!;:!AWc;K6]Y6[&]bCb*#3?C3jJZ/M%bcb(^;W*i<AbDT;Q#SVjBM\j`$!D1Pf]L8cDq1bBWLLSpOj[C#$7.Zf`j%InAIf7sqD9Sbun3RGXjFNfSIiG_ZYOW)UN$>^A#OBSQDmONeHh?k`D@F'4'bYZ^VnPi`kQ)@@H!bLs(h>Ml;fBfG[s21)n<j4mYB%Q,;l@K1nW\Q:.QS?Sco23dj/lk6^H6r!o3)ZG$Y-U)>$2?b0T4^fX.AJ]":P[63'C<de`,[0PN6-IKH'n]ejC3JlHNb_\h'57n$\%8`6]<g"if2L5MEIXkF7?@*[ue1-lJWTWp/CgZTdgQBP4$-=Q,ef`mJ3ON]E0g&f&^otUc+Ua]58,:`'p92f;BdGhGXe$FQ,S?e-o%ph<0NQ=f1&*`.Yb`kf^5clcd31V+3r'1[9B+b1b>#SBnX;FGh7XnKr#K<;9oSL@VZVI,6`-77-JMc&k`o_?nj)j6GCpnY'&]bs@a%Al'G]Qg%ZU6UbcgB7[XVf@-T-'!m[?'Ks[:3m%gsZuaIjD2\E_0<4@D_0u,qU6b/$`>$A*!\MEt/$kNl<>$s.B>oVh*r06FS!Q?W%/DVSTGiH8OC]KoRE*=,l@ceW$],+XK.:Z,mH90)Y%W#-40Ycc,DrrGs(5i>+230@%1g38ijCJqg9&lIffg"/n=Q"jQdkX!DR^i<h%s.pnpW'hH#e8)9?VJiidlW:b9RMnWFSut5G9T6"'&=[R]c+^Wt/oGS>c6SWg:Ku6Ya=Onf@QLl[\>HLYpS!Hd*1P3%aY_,O,j@q9%`kfpb[=nI4q=$r&^<G7G9V@goi39e$ki-@01>rckl]X(7/jserV@`6C7QEaTDP9)p7Z6/Tekr:RT964dn/@;%'#iCTT*]0b%.bfF%^TJ<QXj(.50J\iID0sj>C8');k0,.u;r6jbOlb-*3DdUqgqlPe5<VqPcob'OpN&d6@p(Z:C[tqQn`OGK]!YVS;Db:`<ZqQD*EBj:%S8RWL0&T4%rFOM'L3i)`bo8RbK#F^%b242dGe(sROJN.7h^42LRFetl*n4a@Cskh.<`]VZIKjAMCUV,U]8)c=2Bfid7ECt(l?1$r%<O;7SH2nX0^3Rm5c'nc>g_YfFfVuL-TLhH&$Bcon'[t<'H+!L%=kB:5`PTMs726SLDiK+*hcBcaQ#<6!a9*fWA^=*</3q;62mauh%4e.BM<n#F%j`_7l)\"<p=dFE"'").*Z%r)>jH$7k45:js49ELg.^*cQe>RPkiQ"bY<M]haP@8Y7_5b#Z3+P_V[)L[8r\KkmcG#7T%?<DilN.tsuUJX@%Iu]5$!6a%*ZiqD$TVaf14;/OMp59sTVHRTOktG\Z7P+fhR&0^T<gQ[u.4V31E$DJ9W4)iW1c$+N<?BPVBafpt%>^e7_Csl7Ih2)<Z4CD;bY:Gp=@4MHbW7Kjn=X,>Np#_RKhMM>kILr5drT3D=,,X2]&?D8V&(RcORN0:tgGJ;4R1C_4>cM'i=k7`@%I\BM2P?K,5D/.Q,o!H#__<0h40Jk'Je)]T_?uRor[8MO/B(A!/1,/PI,eo)BCNe4K2pYiMT,$\H#7hK.I_*sJ<l=l4loQA9BIr2r%"J[C#.0+bJl6E?mX.1objZq'3&rhLgk0qMC;M"-&G!/i1jiYDXC$B][;_c\+]'B^#Z3tE<J*C^u713:H?&t>dO^4"&_7]%fTI590%=jL(P-c,E<;ES[O&c-?[XX5`[&D,BFg!rN,%&)-<$obDqmes9a5+dSqCk_7iE'f/:k^qY^%E5.1HI:_"ltL,-m@Y'-aZNRH[!<7C%Ntc4-a\%M35gd7Y<eDo*/;:Cr>&5r0.1b"$/]T&0CT#B$YN_9R+L?m0k(2aURM^^<=FIrc_tmt]TPL%Q0uB;Sc4E,.![^;EMcS%j%#tJ[9L\X*0EQs8)@u%4,6rX%R7]*'PNO:XBc>J*FDS]g2nuWLY#aOmg9fZoEKZ6IESR>4Hkt31@1.,Gg]^3L^Q/L'-)3RK;S"ueC%W0#!ojaGLUot".@1&V=5mb5Kk9F"ZP4n'nY-Z<0G`Aq,H(8aJ!PO^n3$q8H12#cc8icQWIgt`&'L(aoi5kSN,]qU1]:u2;$`cERb%9,-,TW4^N,=k#6bSOkI0DJ2%WpJ`U`q9#]ER<=F@r4KBErHMF?<)0X5+I:-ZO4NONI>ZdQ#K(7N^R?=7_@!_%C53Dmi;R$;"IbjV%9t+Y08OQQ#j'Y_;p>arm:FdA$I:J^m4tRubQnd[gH"cOtA%)V8@J>OeEZs#F4\Y=XShU[)74D]RMHM_XqP5]>'i#!.@SLr9)rD]?%O<C[B+j@PP<Yb9?;W"EE7TeC/+4ds<A8McmJB$JLjPGIqaO6_gUU?"?YHo^7`)o)mYt0!`eWo]f2t\BFjdjJ!pE6TnjCt$ZK&I\K%:I4MdEqK=Ph314a/`DMK#Kb;b,0*Mq]*c6_DnkZXbR;m'[=jcFqX2iICf76XTRdi93DJ1:5(ICm#P?cWI#R=?##\ad12*>PO+'!N%o0l"hd)^WhS2TEjh5_tia&(:l?!#7+esJ<]`l"_b0NAo`eMRcVYEnP6WU[e\\?dK@'tlT?/.a(*p?N`**4rSa*!ps]`DDO0"_dnW%["=Q)o0$>`=i:h'R9V3OWs=1S5<^!t7iW;+C/;;m4S15[&$>cgBR[RGWPfOs=KEhnHP(OZACA&Ba_lbhcDg&k2*L$]a4#)o;t5qP%T^)Kn:936nT[^,TdZ$rSDVSC,cfh8a,7=Wc\I)'krKQfK%l$-.7Mh7.mHK^k6)l*F#Z*tp&b5rXC=Ji_]3!-4s,%[V_iCOA3@%Ca%n,RVgo'%2``cPr9GP,?"/apRPjls<4addB2**QnaB^hq%Du_*])GN)2ps=&]#\rsg#@-b,:YRaBWg^C`/?*8><Ncl>/3B>:.q?.=%0bCD59*a)a092?apL,P,?$2k`N5ZO<qR7&?9[V^!2'RhJka7^bUYaXYB-:n+NAO_\;,o2L'eN)+Jtp;/$l@bV\Vd'H@ir,#KR;7$%/NB_D\NAEb7Q%3?Lf(k>6F!#;?,_Osj@Ynqp(j\VN?qZiZ9q!e;dcHS@:.OeJ?"ZDF=iG_R-1>Lq'j$t=S.%[gVB$7+X&G"4<K4J%A2dP617bb`qfgPd`gV7-*o(/7s(K]iXM@8.5!%Ppbk8>5?;JS'lIJ@_,+X2]#ns!mB4b?=Fb[?SfYj^<K.JH/D0K,Sft,R6[_Sm/%$6<=.bUjO5.R^g^g5C[[Z"NX33'qrJM5BL2(.HEi6CNqqk.a!d+H;ld%_.OK]2M#Mk<#=i?L^]_`fiVb1p0g%cD)$,MC(^(#*'lc%MabY9Jd[)%U5P%Pn^n)[FC..WPS&[cML4n2:fFHi-:@"7FdhQ1ARmK^jC\.DO,W]dgKpnp20N!tmJ_]22%G\`nIPk&^mb,Aa]tPE%3C3lWh3\56,)08@#6KnXmKQjc(.CKUZ(<abKY"\2/c\R@Up`uSW]Q9tqNBt"BJUrnh=Mi@2))n-liq)[!bb<%7<aWTmcEo<lCj$&%5\+qpe^%R/HJO+'qWQVig)jo5.Up;:d>9bS?0]RHnNnn#j($aL>qi)/*p#hH-AlMJ#.nuYoIgYm_G#9\hm#k04l'n_?Wt:.aA>N&%1TP7-7U5t*a(AI"AbSoIHB^*a2QfXY)Q"3WF%9TBgmV/qmsfFL7q0QAeM&F8\@/N>2)=sb3]03?eTm9TWhJT)W=r<V3gc/XR_,YD%</*Ugr5";uBIX+#W/s,i:p0kl!ilqso&fO8QMmrHW3s%3((^;=q7Z=jMUqMP/:;%EX3&nV'/(5%gn7AB+I^q4a+:(ceamfTSssLi%[2f_7a3m_H2_:_8B>]Td1Sd.&ou:mO;6r[_>S!`XlM\a&d-4GdlbQ5k;1WO?=,hW1<-MRZ="Irp988a<Yo&6(HDnF\,a#uA)naEM%pZ?Ffn`!-F#aBY2.$O'm^S4==Q=#(T:DuaTS)S.j.qG1Co:m**U<806`[P&..:)qkJur>04(1=C=!G_cV@YSNJIjufKQ:Ekc,%Ic%Cfd[bea'G+m#f/`78JI,lq*Y`%(WUtXj#\bNFKu#!7.Z'AB5Ts.Y]PN+0q5keE/8UV^N5M!k)j+"Nrp4$?%8Fd(`hhktiErYIMsm%Z<&Pa@1a0)c!Cf_=&GZ:fGNn]WVILEBA0X53\>IIJ$eJWCurrtLNXG7<,]8K@Rds-dX2sQPo2n0[P&Q14[uVqOu+"&7ZUI3<o-l]%jL6h1TI53/<H]7:\9\79*jSg2Xt9k_$l*&OYPs1JN[^i@3tnq\&[8D&Oc-_;%ph$5_]pB'%UKjLBjGiQo<^@8X>P&Y'@UN+5+!^T%*A]kG]+hQ0YR8=t*28WVN2=ZP@8N<&]*fZfUVeJOFgeM6'K?-Vf'TNshN-#bk$6FR=^nZ4)nR#$TmQ87F8jnip1>&,-ifRH7%%&X%@t2plQ5Ik:*3:lhg([0'fHF%IRX.1,9M;4g?qjr<pJo_Y!\Hdopbke4hSkPa4)^XZjL(l9STcK;me]YcFJ[%"PWIs%=4Mpi;g4[%%4dpGcW?94"<jJK1\^bsU2]2B@P[r@CDQrBrfaCsB3)s%]Z<+:Gnus>%5kTFW+I0'5$CA.V5i:,OR9hGC?j(,9`YaiL'4]Am2\h8Z%$?C"2QtPpjq<U')@bke=Trkn;+@kn[JF8F9bXh/9GF^_'2PRETQfJGi:lt%r`kuo\)6?Lp5L\ntWmpFboS7*7,)qW$AA$XidKqVn%]'=-VRrhK)XHkrJcE!t15cUsnKiOECS>D@+"Sc]DFApc]OC;]@ZS4sT`+h0NRU8XZ.J?U#d^?#70al%eVRW,nl^I@g3\B0@*@jK]%j[CK/>P*='_EPj=;Z2Gp$9Fa.RAO"BPekV_e7FU8.(FsU,eD&rN&gSBoO6cOW/:_;$rF0C=N/DaAmDr]W"<]t<e!)U)(u]VaSO*>%f6YMVU\g/q.9^F/kud?%k,n(.dNd'QP0:F+cn@->TN.dbP+np/#,kV[:)[lJlVkGkP0LT7>rZ-r%G2^[I?t[#C:Z6<eSUcSE/@WR%.9eM.IRW97=@h#`.&pO\og-fa5-6h0h>I!GBs!&A.dNYC?B-0[\;dArK>2=bXEhC6LiQpG@0<fMT+J0,#*Gg+&CG6$diY1<^4A\G%qEsb(PUOJMO^0,F>a2rW]3:;\oBWmY!Y<9K25.%RPR$h_LeB>hN$EFS0GRu,SqRnF`o:2P2Y/uB=n@aABo>#b3T"7K=4:8$(7_"o%a)/fWV[%&?<QhQnO)E!^X@-:`PTKO/nsWapY4e!IU(VTK3Ch9k7&m3jS"`'!k+!YT],S5t>,j6:q:3sFgcVT1(8jcc@anGmHYT8W%T10n?YFhDOEPQQPlsYgB"K%I9gXKfCLVrUbb>s`IQqB=07b!Uk@>Phs!\W"`GT2:DJdjHUf"H)\cPHmYb@;^=Ed^#q-q>5Va:bhL%?=94?L#p^VF0%fJYot8?0=UBuWC=R#B#iG6Dk'\f4`pLY:p'.#csD\[K4aDXiGRP7>YSZBD/4_7P,Gqpe]=4f&[#;i>@Sa?qSBqk%8m(eo(3%8_A@F.<H0<V\Z5$=A!GM9d2%E57;B^6^OeCY<bd%_5R<Pj@a')dR_fS)/X8]F$Vf<[`"b!U-cH<FUIgDTN]'K8co82uX%9fq-PIO\FL37WK=eJNDY/fHbilQ"lCGA/I:K2ut-[XQUjMp9G2PD9Q&".GP@_Lc!k^8B/jCr(15"b=kWPuQ7idkr81;!9BHqpoBc%oW5Gb?q9]Y(JN7l)g4#2_+fiq*U+IbBWO1q%O9*J\C[3d9Bb5qfK3k1o3SdA(ZP,Q,=O1"[3tYG!qIBIaa2#0bM![8FARUH(IXR9%9*q`$%#fTiM.ntQr[p6C-"F;MD:bM98nR3iHdR<8Bk4Yc1R`4'5@)c>d::%.$C$+lHT5\/4Gl5h?GN9ZI$e5L"gu&j+DY!,X],FW%S_f^,A4SCK!0tn&+P.o'VgJ<&VGgG8:JDpJ<gqfSU8=-_U=K`-]:\Y)+I/M:gWD7mc'`,5DJI(*-0T6qT2osJ1>Ku8P1--hMmHog%BiP1da5`k\MoJO+dlop;]8?Z)m@pV(6/WkUo]CkO/EGgO[BSK`pgG0pf;s8:^W`c&YP-;T38H(W2)i-t2&4+DfMS/j*_gO$;F1n_%5slYlD,)uQaA+!;D+J(R&k/'_MoU@kQ"16bcqXTQZ.5fV/blVK10omXXM@lDjDR@.QtGT*+G"-!=m5#D,A*k+EXiAC<S5QtZ%p;K%p7nX6E`SO<6,O2oN>&uimi(hjS;O?3n$noh)cmt"@QA_mjP?jLh93UH(RU]>H*"&l,^&X34HH?O[G%R:h1gG_$O\fAMl&kJfVj6F%C#TB&Xa-1HKYZrs%*biS79jHDELfh0[T&ZKagG8NZ=pjDc\/a-M!OC-[7GUS+4<$;rH=<j3fgSY</:^YM+CUhGG5$XZP83EPAEcb%naT_\]b\9"<p!u#p=ZYqL!6JG4V5,W/;@jI#q?NhaZ4keLJba]!&h[S//!bA'qCbirXDXf[dCC"(X-pNmHWE27c2:s)fED+TgZ%r%ajm$O>13ff#$Ido`1qMW/SI4*qct/T&F(_hWjV`.A:k("YiM>a284j520=eX4>st'<jtKPO=E8kP7h.9)0D"/_kLq9<qf(V\Th1F%9r5qD(6/%2A8;4*9c7]o%Rg#4dhFg(+7k\IH!AR)p"P::?<FNZ%t!#&,(mti/I.Y3oehYa'5Y7D)b7h5W\S@.G_\oY)O?dC1TDNN%g2L43.OrG=$MLjWMf0@J%*0Vo!Du\rVF=u#D-q0a-`pO]'/>E^oj91,]HL\.lX;;6f9R/3cl_RKkT6d`X2^UpGKcC$ZO7h+M<3^8%2_Z,E/acR>?rHR&/bC*A5coh[[t3_(5u5b98l0dQ]gNfDijiA1^$J<`=pY=.Xkrq2Rm<!?@%^ZS3R_?J[nY@O@qF+];UGt9Hc0N/%*^)1L`>bi^*KIZTr$5um52?h9m0-if2(s0,ouilZq*C91ntX?ce=mMB"u4,ER.=_nIs"r)58>BMrK,+H>:a/N97sPR6n&&A"ihh?%]OfP\HS1=5r"I`483f:SQVQ%?[A[,sY&,?d\/E4X"k=HaZ+.(dh0!&TgQ]nn%kB@jGs0miUR(#X1.F@Vd-pffejY@Yc<<l.JD7D2%1Y+*hhI<mkk)aqNoJQh'`OoN]s)W=[TE@uFilA1PNQAckENrV9,MQYD3@aD!?Ue)TlZEfLnK+lD70;'JB[GOT2nD`$27NOn>>nJ8%RLP9CL8:QE/Ia+RGRgb`L$fZCK"SYPRk(T^RW;?G)n`=(jS_XVC,];hU)p2g>DctWeuas7;6oX@5a7m<52%UBN2%8./]VF>==G?E%h^oUnfPWuP:U6r$(!T_h`rdu<GktXLLRHM*99u[,o?d9[CE1<ObB%1#NZ"pX&:M#=DL#ku"Ret0/7qbIE%P[+GaiVDMG_X.R(,.#%AsliLaQk\LL2(p,n`q58?E7ZhS)VKX/u!YF7U8?O^pRAC,us0-.KPI8\L+%BSp]WR,t?_[J;VLLl=F^G?*sogB$E?9I`\.#@l'T_%`q498U=-4\]jB^I`@DMOU/g;1_b7?o0RTFkY@_oQi7_YZ"luq/AZGL3,rY[fg>`:&Gq5"_fj&;D>-WTk83V!8!?arfWfUdr086?m%g9\\_4)!SgY)`@+OmSN0EALpT"?NT:^b%3%,tQLkjlTi'^4O:@ZhI>9H70K0cN`cTonG1oh2\CU3^GO5W\6KSgj1<WQXtDD,$?Y6%?EG")Op)R?e4Y?Pl!g8;9,;.lqb<;iW4l,%5U4[Hd1#r]7XZG>dI)<?b%-]J%_SCnm[.;pnTa?d)U]2/RFX>n`B`#8\PgdR=B'Ho%eRPOhACY'ni%pjMl&ghG=pnNN6FY\.$d$UMA@\R[j03iHeRWZG`3cNMEeSj8rj4QEWE+Q[OQEo,ja%gu[m$20R_.=l;rd^?b\WE_%h,^lVs't@VEb.hJj]9`TkTMsbJnqWH!]VD!VaPUI2rst+VEAc''H1Z;9>;(tiqSXZAfA$\QB,EbApWY-I^D$KC\ChYl1aEk)kKeh%LcKh341i*r+tpb/hU3lD=!oVMc$*Zb1QKH1M>N5o>&C@>'M3Z2+"T'c@i^kr0)jtZNPh`OqXi04V_Isu4F6D-Uq5M_d?;+eG.!MY%k4Xgs.I1\^7pRq5E.5BI.&C[gAW\$>C8@7L.(l?BRZMl%9'cPkc]!PD`ft0Aa??43fpWMV^%a.,1p0C.2rQ(g"Qk;+/raNUJ26MV%$Tkah+cq-Fg<IaKYoRhVru1)72.fGVJX'>Oq3KfdmGr>1?_ObJDpr44\E8kprO'>o?NKAU@#*k;DDQHei;G%60Yb"aZmGTnb*K/.%(\n-%f@XHu`u!m9Mk`l:XR\"Ddd>(#5)K%P-calU'Ukob67M;0NHho$9Qt2U,=ga@-Lkl?q;1Olk3HX1nb`Wuj:^/mSdU5naY+dG%!5'2m5<J:M.PJd5]nWhB5:+?A9dogl$DYiule$EqHQ/'DU"N-pcF.h^nu0At+f0)M=4,p?SW7^ZAo-V((1P'sNG6*(#PW;.^c]nP%p@&7L8qkqm<_2hj7[u*;fPthTa7P%2=cF0,PkVo^aHN+1f?ef%Bf!`"`2X&$],n-N<1u]BcbiH]39IYSn+<WOjQ,MQnH`Z*dZ9>C%+hf"6$!C<ig$$HB1*dr3o,_s!(Hiod.%<M;[d0KpeEm/pZNhuSq=Vhna;^6o@kD%>^*W4g`r:!<E,_$n^j_FoB,m?W%h:!b,28@*%7ncKO^fW;IO+Re*ClT[2P\!SD]7c\b360L0X%ka]2WI01[B4MVU(YtO6ATU@Tj(["+OXXn!ktQ&E+^q-q2s[,RI+R4!,XIoB(EKg%fq<4pPp9o.\:&4>U+>N-9M8d,GoncuP?>Ne<c9jJ?.@"a5spEE!;?B?m=lEYjt^g5ZQ^"Kg2TK"KYLnq./l&LA\6AtI0HW?9N[Uc%>!)`<`iuT95<h6-r;48.cbJ&Gs4`&'pOE.FJ,MUnT)=Y!iEl?4DtDk?HK+)p6/o[+amZtPs80#"NV:K7al,jRSeTa@RJBVMTT9tq%<j3I'i`pFcl$#M06[5N?Teiu(@8I#:X5=Gre_QbJhEiP&AXOTfVRoYX;_B5U<jW@P.Q9'qgl"Y^dXnu?=_8>Jr@H6D+aVLsmt5cW%Qsq6slX#+H8J/5qSM1oi5"8t@&8G^%YgQ`&@c4#.m!J3\QiL!L)mV?omf$e2C9S0o)oi)K1DZ)N!R[mU-GLGn.qm\C:&kbg@e?-%%)pNYR-rfAAj$_[k^;OOb:j$Mma)G%2"(R008&N*t1u%W+-AX*$\/C^-gfM'4cg.tggEA.pM)Z/NkJ@cpWDKkA<$lQI>#^:$koXg9%H!RrO6&.'.]d,O$&j1(m4!14<g==a)UK+FkFAm=:5>hrHNBQ(@]C%_5I8$l58^f!'"Lm2M=rDe5\*Ic4I<5UKOj#r6/j\HYn6=>;%K+te9dgDNm.tCZ)n'Pr-7C88'5:cef.("dZ>DCc[Dm=5]IS*Nl-j1,R=9EA\1q%(93c4PT-?+GRKo^*H,[@W'@!;2p3(<,H""[Il%:)pm#EkRQR8k;*J!,Wf0*7e[P'HTM>'u;I%H@01[dZ55`H6.REIcKY"/Prn1e*oBs`,4tHY]VKp`pJ%plPZfs$U+fe?t'otrkt2`%rD00Wl*QfjZ$><%YaYETd!Kh](g,?G6'Ci<m#cS!=CR7aS!hXX\rRBN-i!XL5\(`F31fcSXTM/8nU71+Ae6!<EPTX?q;Xa2IE(qn%cFa=W71Q>'5do`lbShpY*nu=diLEa\GB,MKn!90<QY`NY#$0\8-)Rta@*C@t0)St[e[l34-26`.)U4YQ`N6(&Gf"Z=OgAQYgomaV%R`$YGHWJ-1rdV*oHKBC!me[n2DAL;=^uhCp`_#N,geD3i7qf\>P$PTCoe@1W2+s._c'@;$]Y,%Ob9#8)?0$%Z\AUIm"=P6AH?W]/%bF("+'r*[^WhZC4mQ.[SM?ShTEFGKI1#LX,;F1_4AR^43F6KZcFuD&YDHQurSS=,mCMQ.A0+G.6,q?*>Km;9*>04poHG@YbF,rpE%mA]*:<5>HdC9^o7_HJlG!;NG)6$Lp6&",%<@F1K%=rCfeZN8C3`n25-bWR\G$1!r.]<l6[Y"6c"=OeN^8[<na05=Ns3!$l](??!2%msOK`0-m5"Yu*7i,2/JZJ':S;1\]+&?3JSlH"+@1'c>4.G&J.nS/gm9LVJR,0Skj^<=@!>m2lJb?ZMKY>@=d:<-0kqo#pXQV0?'-%qs8Cg8`Pn(AV2D:(6%f2<?/S$_FA33/#!hG26$&0-R,"9l93in8.,S9G(Z5Mn2^5bmmO#WnAUlr2L)C7_0S^H8C^/VLar#EXfKO/%(0O#mh5rLbU?+(armIK+%%kL42?XS<Yg93;d>+oaf0i"&Ubo(p!Zc!OU8'%G<dn,^l[,gMYc;q?UoJO73E'@nimllSOrC+;8T)$]%=oG3eag\nF//:Xs?XcB$>GSlDoR<]6b$fKk4-+nij-f^QLcVcT\Tu5t.m7d]+g3`riAjj='Yh/H&;+b;4V)?;,_al(K7XZc(G\3+%fOmdJaAG_iXq`okLahAC6nqYs-aS-N>Q+@cNgfkI?,s6BfrZM@?uZsdlWjm5ZTc*)Rrn2Z>Uf)Z8nldDYA<@.<;mbL201aERk=1A%WC'C%qg`uE3EbZoGB[8S4KQtN5_RLq#HP6AYh:QUs)Oudee2:N[C%Bu7/kC,O+)L[77Sj\lAlMAE4nP.V6s^AWcs"VrSi`CKa\s7%oDI]$\`FC-7q%-nUMU!ZU\KV2SK54RK6b;bnQW,L'77hMRZHnqW^(+&/>b=hI6j1<E`?)LhqXUr*Li>.8!c@Yq'fN,U6P;ELO_V'%4tVBn8JO\lge>:JX5kEAnuo=#D/auS[KS9Z?$U6`<c]ug^0W=I]_r`G-:boMRPdH.`XT''fllVDO.^7pQ73511Z@D;,V*[OM"C6A%j=5%WF)N_i?JF@=UK[?W<!q!T?"+hLD)kXRM%5NP"g6c0!tk"K[R8`e,Z\62TNA\?kSb2E?&sc6bdr7F;]GS&\n,?/[6DY^=Eip]%R^\XEqnk'YH7Fn$M%Vg2)O!5NZ^ofI1sTHFNIWQ=Z5MV<o`FEUk);mF"d.V_=VnA!H%1HTN4oWaEk$Z0bXpH[A7ORR)8]GJ[h\g5%3j9j"GId^<FG.eAB::FV<ECrb#:mM[6E_^&DapIP]rQ']$G[!1mqAi'`ukJU'b)^.g0KcMlMeh5UO%XA#4[q#nn!s>9XKkV\E77Q%(p+9$[WiEVTk4TmOGcC8*Z5<cY(<$W!"=QjJH_+SR%E*fj(Kmh>;>56^C1VT\I<2U!E8KTHuR\;l8R6-7-jR1[X!jroM?"PYDUec%I9,"F6.sM#)O2:r:OF]XkG.lY@9o%doSDgDFPY]$P8E<c@hOORVau4rCu;e1duM`jRTgbM5)E.".8^]CCd9;&\`/8Zjn)C3,ubKG%D%HW%7.99PeIZjP;,gX'?C@rW4kd=Hi]F4P(K$.FgRH`bbUb&7@&J8d.Eo_,L-X%CaQ*sG@mlM_11u.27IO],3PVfQI9P<<6[qrP%"["otXWCW#)c>h,=tW/i,X(M\kBf;JF04:EQFLt"Eio2G\GiH!?@>Om];eQs#$3[c-<IK#UkE!T_>7OP#n0TSCYC>a<$]9@\$=N>%?@^O]>!bd.m+N@M3/G("]uQR;_DCM/4Y_>\dK#bC/kU<D$M^+VN]5[=.djr]qCV-6[D$*pqhH`Tf!em;i:jX;r&Z1^N,;hW*HgIs%es'=r43p&l,o!c:gSMHi3o?Op3fZ^gm"dUUPr'uu"R*"4A<@MDRrg1OB^(Y[M^0(VllCh)opt>bjVRfdG:P+r[P?lV%20(GPM)Xq%4Z>9))fIfEna-Sq(!^q_ZEP@-jRYE*pXTnZ[W^L9-F++n7PnmNrMfKedAGgkXC>=^MYu!toklNtReAkcamN4Vm+/:&_R`nKdhUK#%AA,AZl+*JT3DUr#DdB%%Z6&GF)M8kU"aEP:h[4il9f<LRm#8+'UK+4h2_R,0foGb%Y55>JhTrI[A7$s'b"e0+-681gXd41>fIN.6%I7r;=V;$C&S3VO\4K?o4>u&MZ^9)ucYn;0%1E]?i@dD$KM](,q[mce1HQG,Sjs4!=?_#Ls@JtU3douuZV<B,Uj&:i[ftWpbIkiRl%*ARDV_sg`(C8QFFDZ';6*ONIWgo;;S!i(e83SBS9r?r(?N2<5d54`XM.5G%7&X8AS1kN?W=us,c)UPogPW/6.$a[#Y')ofa%`WMN%":Sl-?XZs!/%@aSShcO4mJDHk`'h`FaP4Z8H.Z`J*McqW.S;X$l;.hfe07%%r86"R`-NbfQY&s)R6hHJ?uNI.?Y[#=ig46TB1tqD%6^lUB*@+_OE%IO->c3hNIFHX""s,IqWtDBb-rt\#?UIJ7IpZM+FUj+tn25$48B_;=?eqmbUj*u#73Cck24S*bO&,C=B$fU&[MIWb%,9#iK@oZ[]"=bDT?C&O>R/a$&($5/,)b!/bjM0:JL)I=Tli+Wa6!PQYZ*uTGXg\I2#jZ(P>-0(S-b?GiKVaDt3X^$qpE^Gu5n]"p%'pU^fmhn;Z<e#@@(8!NhIDV:NJ,aIJO_2HX0'<M<28AKm/cPKcrU\NK"#Fe1N$1@BQW5R#ou!&s;Sj,e)H68V`)PCqCq?UI;I0eb%0ju1t<-RZDQH08Bj&87HO@F+=]9Nr8,"rnE^Wj2F3c]!*jC-=N[T',tR'6<n:Lb<geGEY(`6]U>)8S[as##?\`6B_fHFD"k25*_7%!Z(=8e>/+W\**pN;EH/Tk4B]7;BE:$:hm1O0.+kJB7uALCQ)jDXkF2F.1*(G9ID/9F0X-!G?g+]p>i.,DQ>.$;CUCWM6:6SEdSCc%@nGr:2VEN<*W`_"<;I^OlLuHERn(f5//<F]Lli.jDskH;0JRZfAm?A7LrroUaF>--R'edi:.33_n\&p.o!+&o/aj;8go:e7BqE.>%S3t>O'$He9TNPu3RTZ\878Z/hi^"L`GrSGUfR!?hfMg&C_*4%r-@a,<;RhkAVA`srBCA^j#NE:Z#1%]JMf?kaWS:i\TC3f4T(K+H%%sN5ibYiO1110MfPGbs`068-_Kd7b%1I]HoPE$l8N_R#,JrB*+pTm(>]1.T6O/?b<8U9MB3ScQ4]Qri;D"`16RZEnjF]j3$PYFTn%Pkd7ZestSl#Ka\Df9R,AWNfZp[JJ`kU3O&4KA!@m.0gtU)oL<oHh=]+DP.5%*1T:7p!%>lk'<C>/pMZoOV>+%I3I03JQ51F5XjR@%Kss!N'c(r38r!Weh?0FQg0/P#iIhn9?B7W:[6^[>,G%6id2g!@aQPgsJ(a,W[sVdPGBEa2Qq<eT>Dh6T*ktIHJOE&R55>FbDLe(a%_aeVuot86J.:nl)b1V5#h=hN@-_J<IB.H6r/u=q?_mCA'5+STu3Co!\mDI)5(uh>r%0+:lRUoG<Uc;Z:!@,hiE+\0EK`#3f"7No:%0uM3WT<@OpV&Pmb@pX3?$7&)m&tS!+c!XQJSgm?kq*V+%:OsS^EK#q'Bclu@frHCl5Mg*`Q9_l(CT<1r1P)e!=uY_G(:^!V(Xn_g%!Mqld^;R:mC0P!*29OKOV].KfbjgtoSE"F(\tG9J2Tc[k.saHX+'h3JPQ>TTWV!8s5a\6*4kT!eUH&*:m=jV/^hPgU'oSQX=2S)o%lr^Q^LEcb.9gqd^JaG;7j:Tl!UT?g86WIng/gN6(Gd1A"4UhgaLcs1nhDkFjdb(D\M2r_UW61G-B"b6)+./frIJ9(kgkj1>#I]D+%N6ed^O7pi/PtdBRqrZ[+]TZ*tHst[aC$o9BQ$L!^\],_u4YN58\k:##_/i^8$A_:*J+iXHKYX#sMi6iO^t_BKmqV)_V,bHCg`As[%;go$q^)2`@3i*=r]3*G&ra$52i(;W$flQEFl0a<lc*7M6'c%)fPNE/M74Iukkhb62)LTG`DGn:>0fj[%M-RjI)Lfg:NW>?R%G`Go%Q.s4PkNlcZg^d4c'g6n:[!D:6,rSA&b=3k6-D7;7'c<N5DhIbS1[Uo%?phd<[Ob_F_ZY&0dc$Ts?Eu1s,)1F!F**CkHAj+,K&C0R%)SpJh,67opns0bBj'6L$HVH:!ZtsV\E;9oGO<62$?L`1"midodl6+t\^QFDD1"8h(@Hh0"*<h?.f&M:M'kO&dZH?cHVjX)_/dmG8%e<Tcq6B>4WCfF7)P@)H@!frRD3VuhV11Ca[6JR5?E#1F+qtZ6k!b;+3SE<B9R,Ws1<ub$2MLak.&JAM30_40/]9^e8OEg,'RnKJE%k"-;uO/?-tIU[T.dl=h?@BDhF^M?sga(^Bi'7""n,#R(=ph!)c?re52OMa5YSn+A/@3LJu8#?TcV)Id=?YUV#E_PKr4]AnW?4>h>%1i4M4++;[d3FS\HCN=nl>N[:jiQT7>g.D2D^!i#"jE8<A=<aC7.OV,L._\6^4(M1cRCiS40_JQ'1N<45ag%"%`SR&sbUatJT.r(k%[cWd/)cMA^W>*Yfc^LrQhRnnpNes<jH$*jZNP=9J6Z^+r>k-l-m19*^)nW[iMofIf]qfaScrS;e1YU;9M]!N`%#R4?+:jelGB=_"%ZGpuNNZP&Kg?fJ*-S<#lI7q.d"ujK"d>>o*%NnHMmK)(bA6345f(H@ikM"gPlUT'S\201VcB/%p]nc2P*SqaY)h1\X%[sEJ(rNVM%1_hn=`Tc<93IQ:;Z;#p%H%kgEX%^0!mVGpnR,auZU*RTQSA<<PdH380FP1/&\T'ZIr+;$/IRW1gk6\Vg&&q&-e@2n#Dn=m!\D#fg%QK=BmMAS:es.\=d3%bQ'i6e!uSdZjVURZ",J[F'Sb3/2<$q-'(*ag`I+gMeOg2=o**T[T7J=]rtO<iK6p'ligJhP#F;=9V5BKY._%7r^O?cfQ6bYLHB**DC<MbIhA_Gd9b-boYW`A*+pf^8"o/c3%?@PmClL*M]EHT)Rghdt:*c7tmWQO8b&4oI#Wt`po%sdkEJ*q*O=F%qGACe:1KBR.HqaF>.^R\Jeq[al$bu8lpV[1:^QY9\RC<NM4O?Y`/7>2PQJ:Xj(#Oj"=L%@Ffr.f#dQ9]+>11]/(e/u1<^bGelB39%;G%cK7[aYRrB7Yo4'Llm!6V\B>apUeXrS1*fR;&m99(04,'B@UZ%9bF"2kXAO>@r_s17=X>4M?Jf0P&5'Z6El3>oUH\\MJk4cb)6%=Mg(Uo4YZYEANsL^Sjn-[+^6t-t'Y`>#$V7I>hW'j-@?[*PW1U0BX.Tm=s8@NZquoT[[:d0ri>^0eH%*C*ds]'e2L=b2\&,Q21BH%ntZ,`Fd(+/24W&XML5;"^[9!EKs]Cc(XB%rhG`tU%`&&nWMOg6mY?YdXC)tslXaXi$$$@;5BaP_C&rHd(!b$bgi_/\0]a)]0EbP'%ghEV/#4SBj?XqVMpNUE4@3aE1:LW!5"kcFm>3Xc3@t7Ziji.7?Z@AJC[6tMHIfqq"YCC-8G_e0=eoYaZ]15L,Joa@UC"2`tkM:\M%NTB<gcq_!)lqA$1#_VZdeuQr&KtNi?5rPK3*n78@\dM]Ib(GT2538W'W.nUZ(Aq_k\biAQY%(dCl,^WLZo<o<nL,Q^eW%qZjB5KL%FfHkJh-gg82GYE0T8hnBb$bu6L7*Eq;sa#fjTYjMO(p%=nu@]Mi;6Bu&uCfZ4ka58km38tW%tAU6gr9TCh'Y[peAmQWAoXig\!tM%jB,YUjAd*\?,7hA[ctj)ia8uB;qR>1X\$n#n*XC4B4q@3LBL8kSn*/hiPi5;3m!"lZ-geGbU28#W]sUkf[(R>=mQg7]%B&c)+5pl%7N9gG[k#\8*%'$8;&U=O@AG^8Y=VJQb3K^('s.XTV5!-4jo10:rF1VG[)Jfpi!pYXCZ]\UC&Xr$U%jYj]>Xqb%0rCo>lcXT0Zb;^%V$b#fE#Vb]HeKE(2Dn9U<1G2e5OJ>RC[T%$e[Fs2h^\nXr4+1WNhoH]T,Ta`(`pKTleAlk*=X!:gglWJ!'0h*e\p.J>_#ce2,HeS%%giWNC+`A_1t_Q&P_.t_Ar]5GC+Na7'DT99l-%f[fTJJ<mI4d>eEJu7L=ZEtJ<coFC0TPrC-T#Z"%<]S_79.Va_VtM*qi&:$(L?o%g,NjpFu*<dau'nIfD@t$?LB2^2g8n#gu.SR:<>t0.>EO>;st[McD@g[F>Y\W0[a"+0*4i_VQ\?,cVl5[s$W\_OZO,@p7<.gI%?+&%d7/+gdY3cnMi3SJk_%)P27ASbc1<?ror@>;VL]o8=`0sf6F2k/<(\cD@HVhfVF#aICZcg]2n=ZR`7@V(*BD,8iaOB5-AdG2$G(i\%,ZUp%1Jtf5Y#W?<!0H<9bB^V<YAXtf9M7gY)E_)COjp;u0ig%o)VW])=a@s77A^m8p9BNq/'R.:hYr.De#!F5DldO/1pmN>K7k`k%)*i7tQ^"W6ecU"!egQ3PT.!0)!F,+[=]R*>H$`#e<gN.,G%<l#SbARbjj*'T/9Kn/;c5_7S'<YHh_^=bC'ZX"hg\D@pa+EMC3.N&%p)C1L`=D(<8PHQA#$V'RN!e*(Bt6KC1?-Dl_?@r'ejr$k6/!0"N5qj;,mhR07K7<Q1oXn>krkOB7V\gR\imV5R6r4UMW$*aWX%m5%U!X4j6Smu%B67(G&_%B2j[b9Z4PE:Hn#4)N?qDfc'h@[.U>7JJfC\!^j]s_Y/_\ZG`*jE]=m@#mNee);k\]6*ThR:Ld1%OVHlZ!r%Bj-pu3$C"6liUk5O5)D-cXt;7J$deNnW6B*?Zo;r>&0pJMn`Pm.<S\s"'(OeW]Td5cPcHs[91]lG*`g]TJYi]@Q1["UC-L._2^&%%gKN]^r12k;879N(qU1=2=7l?\dsZ2=o!'Mtaoo!*P$e-WD:D]*fLg<gm3MCXK;)8UUi^R-&D/J0!Wu(.72)Ji0JLIH1!pIO,04HB%O(:-n^Jo:9q.bi_(Maf1RaP4jdEC>jR];mZfKU`mc/h"HVTK1:S_G-rZtArnbON3:JaJC;b!"\OD"6I@CjGSq3oo8Lm,MG6c%MuN%:)!nrE]VCOW-"u*0qE3u:$*ao@a!dJ&]()=^n)#UqKMIClVpek*dnHr-&Inj?s"d+crnmci:Du`=Ig3b-Pt6<j.1!DS5GT9oI"b?%3VG0fq[u!FnXc^^PL"E;QN_]($F](Q#_4?k!fe=?^*u2q_Xo1Eb4uIM")$&l>k`cN17t?&AukRe`gid"+Qcj0@c"YjqHLPKQlrkX%+F?_=j[!q'`F(''6-`=F9.[n!]Fmn@$D8!:D1ZiiK=O=UJMYqg<NYH&hG5Pm<$5C%!cfZb%ROS`<>]C3#^4Yu;Y67/?j'D%$7f9B%)b_?f%3*F&Q/p'O357Z><gu]lT_")J[im&nCGU2i8n,9-\ANW"Z'ACLi1Y:g`+IQ&"GQCX+]IL,rqh]Ro0+7)\E4'-C]4r-G:mWo%Kg8P7CkU$%]Vfa%IB1Y3h*2ZKPrhBVX.ff9k4YAtWoIRO7LplR&$^6`k;8.aO#^ZI@/ITp0l.*e"=ipL'7C_3`OXj14ro(Pk(tSF%A9jhlfW(_R,g?/^k$hjfUU;t+Q%rScI0DR7`7J'q''$%/:FTNim6e]?b(I0!cH&B+-<-nG3&!hRB=DD"RiYN7]EC`@G2`[)&k<VO%qDY:Z4BM=NRZ%hG`46Ub-Y5I!);2^`X#eP%#&ujA$f.K`'OI,,:J(9Y+)N]D2ceW#qS<%l'SU#X2r+\WD?i444I@+5nn'`cigkD^%fbBi%[T`<iElK'#f$VuSMCnpKLK&&0/G^$W$mOt3%a2\25GKsEFop;Jf!:Tf-P(7u'6D");!"lTZaCVhf"<!6kNLp3pAB&XcJC`<%<DJ!@X.E^.anYb$rd!Lcnm8tFXbgdoC"WfDFI?sdVV9Q]$^63m;[Rpc(LA^*1Gims10I@CYt@Pq%-j3OP9n6(Ih*mDY`>W!H00;\%HdAe0,J1;#h6bC4%$\.^Enj[+@?Im=]U1;al6.gVH>BNpVL45=BYN?qh2W%UWa4f^SWTPDJ=N%-.^fP]g.::nNG0o<WcSZ[YH%T?%UYVu$'<1>I;4\g,o(,(]f(g(,m632h9]pQ5RQRmB3<2SQ<ojLe&NYkQ1$ZS4[FtUbnbbB.$u8RKM=/^MpL[KASZ"L),Pd>Gl=[h-%A8AOSg"_6_O!(;rrK"D?3H94'`tWflW]^.7QbA/#Aid]KUXdqXGOSuE?@UqMl\6d?ln5kAl1\RspJ^$dqOL"D:gRr-K;0n>HI1PG%Z-GU)OB3AY[T\)-RVF2Y9N?kt;Wf"T9/UJ=\G%PjG_O?m4,MX1;bW'2f+i.J8=6/+=iH30Bshe^c91O@(bM:/B>_PgX2o_6q00m[%=dQ8frjgid>&P&>6HAYlj!@u&)+5@$(%Rd\^+=o9IVflh+O,&CW+_GY@F'MC5Jp%.Usr)!r?3S@\QK%Or1N=q`K0oLn_Re&V]+:b%V@K7S=c4L0O*XBhb5B'sdaB""7tFkYg]7%spZ0['e'u\B<SlIT*oKK(a@(YRTLT"O`1V/!&peqD-L_#jk'NmQG`LM")0&'Q!Fh7g%Q5]->#Q'(B_iQ9_oE22jpq)#+O?WVgGI9B<hW7[Q._#-(%HaDciA4*'/00jMaZ1A1\;+N$YBZNko.$sO=DjQ'#T-Ak\sH4(@akhn%$9RO^W_QC14%>62nNQcO$[3-[LF?N;Dh"gsTN9bM0<cD$93QGDXXYV44.X=f("$K]e[('p#Cm0N&LXDrClpXC+Ea$JXR1G"0Xmdk%+@WjgJpZb#A$YlL!8%/bENTB9A$$,oZ8A>ePd+iDO^=0$l/YWQp/!F3kcO>=F+ZXNY,$PM0aG`b8`CUVZ3=AE#6r&`B<I%Vq))>j%]_aXGUFX:Ld;($m6`0TZnhZ2:>::j.DL@FhW[Gu=mk`i1e#l\]2D"_1h<(Wpe,#!T<q15uo4^q4p9Z?8A(d=)M"4#u1'B@ukDsrg%6ZE(45''Ls:m'1=HF/TL^d3+8\P]fIrEf#Wf,$%dAcdhb=Ff[b=]%Br&4%r1SCT3"Hsng>m`i1B`$FIf,`cT&k]!K&*riII"L^Kt%^0bN;Q)IeoM-q2>8TT"]@W`>4=k>Et>C#WY[N<S]mFCbT/L'MmJ8W(>Q+J[d8:-l%&L\Jn2;r6K6g0^2)NVn76(>%VD?jBCjh7)l%4Jm>nD^(H,:Nu\80O_Y_XK#oJO!4Us'<[/bok5>9a?R&6bg/c%[fp=9WAJAB6:R.u1?0;V_pV/]:6%cm2kO2\h]:>_E?F<L+a0*o%5,JtM3?*tu.VG2[_,(tMV/)MsWSQTX+^mO=/Ljq1nTIM+'iPn>FSs%PS1^(]rPf3BRJ>j<,lt!+MJ26sUKZ-TWRU$1nnhB>bZ8ob%b"\3.RX-=O$IVd<)!^/`)^f?/ho.csG=(OnE[_JK=Zo&@OpMR([[WeBp8u1c%m@2W(i]r`!'\@Fh'ST>Hur."V7B\H]EK(l(2VW8%[agL#iZ]L!#Ma14^D0kd6J#f%m8,VV\+\,'Eo/K(\K`>t1siJ!A4$>A]=s*7hWV0r[.]XpWuG+(F=&kJV)6uJ8O?n;^'Ajn=lX+@%O6KPaR"i9P3a!7HqKVX1-J9do60F0PDgFAH?gD\4(O>`Qe[4(bd_45C-t3IMW<hQn,D@N<=Sq3-?OsTMh<%?N/1Gt!n5(8DYl5@d%9;_+_D'B8sXHs]VSTNXdC5/Xr;^`NI8uc2ck6@NUf(4U$d$h$'2*%q>TeW/:8[D=&o/tGi9j+9(3R%#gEjjejeQ_(?,)=<#=i+Sn%c*eI4b'o!1C..i&F:hoERFe-U]1>M[Q+E04F.mj5;:MC0>8baI>-]\J^u]f)s#$QQ&o]Y;2bXFNCLK@eH,iUkb35G<J"M13nh7`"%o/A/G+'gLsi^=YpZrL&e$%Hd7m=l-aN,MN"W:LRURdOm(HK#W>+\363</js]#\g0#.<`IoQ=al(8lqA-W$$DV??j1e,&O/?O4LI%%f1IA=XXB[a'a58eM("RIeAKE$;'e1M8sJhd+<sTZS;#OQNC:]MoqD!gj<NX,rpN):BRfs,i5gX9XN/dM#n7@QkH>;m'H00.m_/(U%Efbg]GI<,#&nD&dDbPeY`$USH.pWIQ1pL&:E'4f5Ui(f*FsV+rc&H'[h2`uedsob=ah1X@c`<+e0tq%E@Mc:,Zs%`&lZqW3=%(,U%PZ--U:;F46LK(TaOq,dU18ATp!`XA$=A7hl@&6NL;&*H+N9*WR+!VM<=<lX>dEWqq;`mE3C*DWj#-4o:I9A+p?bXGaeAb'>K(%><%3pXDka`Dl/F/dAEYQ:qlB.m!J&A8:Q[9_Jq<16<aTt;FmolS/;F]2`sp"n"P#k$t<>sZ1BKE1,<8\m`a.a$^ZChtI*<jnk3.Q9=X%Y)DU>4$<l"*r\?1a$>bVpP`(f4XO4h(X>cZV-jlfY8/uqh=[2MX>cj=Z5)u8Jp9^u5[_f;Nc]Jd@rA3EnlHR"a<B6:)&ue:_u88g%*(4+YQ[k3I2>b3e@VEQRHLt'X6qcDD'sP27)=#!f)IV_fWspMhEpX9)MhHqRWco;>[FCAZCJpe2W$j5s+6_MAU<7P,G(6>j7AX*s%H#::MljY9<ERMgA4G+pX9sfQ`.%Q^uP*P+S#@I9tb"tmA$i$F!jg;FP\mJV!NZXq^B8Tf_Ha%;>+Li=)J'_#a<#Alj2#U]lrj7MJ%CL3bq0cTAD:aQ05fq=X8VV3S:Q;ms=DYL=WjgbiD9D4%?iJn#Bq6^?&K*jkZV/ibo#S)h<]]pkEgSLg]"h$*fn'T]MS7q%?iom73%,0?+p4[]5"@F8JgE]0L#K+DF+Nhhe<q6<Rl*kg!s)NpnNat)/B_b@jVE5/q40^8&fT##'+@r;=6_\O%j<cJNB,%_450ECV^39,*Q%f&n=/_MAp10%)^"$Oj'i!)_$kYcY'7`5\Ii=8(ZW;"5_7+6B@+PS9qLkd_O(b&CbIat-4kjX)O98aq.cfM62sa_hj:iXiJ/kQ[sp%Ec>42O9n0$&a>OQ.8qM![ZoZYC/5=8=6ij<N?@PJ_%PIkAi&*++#V@hh]j<CogTm@Q<$shAkSTdX1D6<%1>74b>$n59!XW*$9Xob%I^UecZK57(G0Of!OS:]9:*4D>Vt$['4'/ZJ+Zl))m+@EbrhV0LZIH'JqRHYgkk8DF#c[m;?9i/i]<2DQ0^!i5'`Sqm5-S".lj'JH%*+;:C4?Jt*fG7I`GG\?%V4(+^?bI7e4F1)Q(eOAmrKBKm>p4H9:)HT:S,BS)g#4W#9jNr2YLX"q$A)YTpM;9']uT$q.L=g8gbY=.%$^.:?.^,>Z4&CTJ<nLAk/?@f*?V^1&;h=:V(:qO&6n5,sNXQo7:C?Zp[NBpmW)j[nX:Q:m\i_H_!;F*^ceGV%,^keIZqY866ZpJJ%^2a2fX=D)Ejs@18hWfXPd;#jM=r>Be67\iLZ7n8JR\oeKq$)&.?Zr:Enf=o]icGkj'SC<9M)\bdgYS6"ILq#h'tE$=1NL"Pc7@$:%Joa'2lLMSP&@>&`5oUG8c8@T`FW-N-h;-ZImFG`,A3I$(73Ae8m/$jEVpO`nFf5_6E)d'QX+'8JR.5'/8:TOCIq]8*?J>3W2A,e^%5)X=-J-\HQBukNc775oS1f&4("o!ckq68W8%c=DP^tFgSKuJ5HSN4;tL+Y>(Zp7K<7-]0ETYk,#?L=%KDe4-G%eN!R%k2NDP$>!=%.ctB3qNHqFIG\>mIVqoO?k^^6')ppe<DJUs[Z>05eI>_d\ib4TCcOrU`6_Z]fXAD[B\DoHA'Zlp/C198qY7l*YNe;8P7Yr_dkKp+%@)SOPJ"scFF$&[)9V)[Apdst[a15Gn]O19\9DtBk>`<@#>BgWN<GkV<?%7.4aJS+g+>R:U>g%is4f,+GAQ:^UGo<IX?m6L\%K[0U%f`Gq+Wf(#Q[<kmF<Z]Y4[i<-:Pj'cHM;,5<[_na)JphB9iU:)e(kjji@P=NA.XG0eU+JSQec[<45mA.MprLGuc)B(tnXMYX&hg]d%d_pF1/X8AWd_Z)W05fXZX_KV4#"1F8CEIW%*h2e<X<Osqf;#B/K!L^1DHIh+N1`&K4.IrteD/3$R&QNX>2Bg[h+^"&:ZTp(VV;*g%#_^.>%eou1[*p1,h>Mc-P&eBCMrGMcUPpUC8<=bngS\npes6TbOr/?-Tm8u:#BBC?9)p"'fOnYKDpC*3P_K'Y,X3/`+\$q6Um&)S%g_J>>X*E$t7a?2^L1p-e@Di?!>kTaCM2M5FnQ%0"92nP]Vuh:^VV$r%M_bir^nKI4/TE0iJUA<e3BJ6[m$KD>-I'MjjbKE`VgIm"%&?pObE$(QS)7aeGs%OI6D>/@tnXGnEJ__)]VW;8q-%-#1&fb:p-uMX3Fo?,[Y80[HUY1_tkPBY22RR:q"Ak'l^Li.M?"PI2<XE2;%@dLF`q`Ldf4UsW"I4\9#f8UpHre_r,&4%0F!sl?WqNBT7T=-F%p9,,;>tPgrl7QN,rXMA3f:JXOFYg#r/_0(OS'k#BVh@FYnFNKI%ZXj($FoAYe4\:/KX6=9mjkf1pU&DLAEO!=3Eqo8[lY'e#nfPQUe"K&W+>FIWJe"9%:7](fTPAX^Jkr8/OV[7g8h*r9a^1o0g(?4d%1LR+ojl,g,Zs94=/a5k-b`:l;+$2($/KTE8'cB@TTT[IPCIF*#+RYHBT'_9UXu8k'j@\nCeD3sG:(/NjfoC>[d&B_m]f]$\IH-ka%C`7Hi5OV?VANqp&diCu-749KucY.G1^97S<:T6Q:iTh@lf/bT_0<da=9Z`Ve!-[OI1]t>>aJI%7MoWn_h+X<Y.J"EE6_.Do>"HMF%(7mAW3SuF:rV5j+1aQPIW6qs$f0X05?5Y1_6"lpuW1`1UID:[Dq&IY\jJ6:L`d#qdV0Te%#h[eCAG;%cmU3FkaO!M+^\l!u[7+:L%!([m_g^:`OIoY]45B:;6gm[8HIGB'rKt/CkNQ1-CR-OKo+6*p;N;h#*rd!_TVq?2j;<lCZTrM6_B2L!ZoTP.qFDHL+@[$(!D+.*=%LZ'N`H*nu'h<h:j9=lrJ?.]KgNi!ocjabKmX2h:_lD/h2.G2I;hb):phe3VVE%;A5m`_4;hWbXDJQ/$FXLj$3g`Q-qoemUK*1(c(%G7aD'4/tV"WFn,pcE"50M?9NUqr3m>-G<d_1l?,X:N>V\Re5/$?G)>@H$"O[daCtr7gu<_9Nb#Dbj0@;p((6@Ap'(DZ)-7.)Id6"%>ZZ-lWJU7\PDfOE/`"IfnLkWaj8,g>"OB9hNo\Ii6<&e&3&aW3?c6M*@fB+d%*V/C#GB3KW@f,)eigWU.cfJ;l(H_lILW`Nrda*F%h*9D?J<S^E]LBf;oj@U0[<(C@\SBS6lqJ+Jbu7@kFg:aMU$=lRn1*H(9lbC0K)O-"/WTrq_W:'dk;a9.B!%+cG(;TbW#k%gW$Stg%a6FR>O*5"a,X\PpoF^bbc5)Bf@U>AtR`5oP_^CHRonXV79\*#pYuA:@0nA*>7pi)f)r5E+DHAkh+#e@=pY)YV#*1[9-;]j@ZN\#4%S*P4l]<a*7p/daE*akH$*j`HM>M`#ES@DdPFKqY*V4]BS]*[U3G<6ra2IX-e4qB2](/:Oe_,ll/fE*S7cBD*4=TQ\+S0[f2.H8S[%8OI]?=*lFcdb^b8Ho@=f6JQj,;HS=Na/Q]`,3qT9mRh[AEJ38Sp+r:!U'=V6;;MRbCM`2q"M#/Ug?W89kO\YBn)7lFe;0F!fuUn@%1R\KOP)F&=RNY;;-!o]uD?rd[#O7OGBBn(j7t3iu,?bi*;S/4/(,'s5s.Ytn:[oNOn9pI=CjRaSe>HR\^m6f;FtV*;-RV7a?Rm)-%SgU);-[UiSBXl%Ga`>;Pj3FAu")^m6Rb9[bZAYjBCUR@AneI9WH-bpBEC6n-'%0WlL;%rcHls?"MKHDB>IAna"%s.:D%9G]h=lWX%eue2:$E/eY?)H&I$m`QsP"Ur+<-f7?D\!N4(J-h-.i1"QNg64kU34ogmEn\,C5GFm'/;&dTXm"LU"["gV<gE$<L+^?-.sT%2Vr))%<Dm[6S#K(gkhduhl"Z#%TPK]MOsaW7pFrZ(RuUBU`a^17GY\"@CI3<s=qu=B\fq_-lqBNh%%/XqnAIB1)-[lW<8OE0]@AWSKT_oV%B3NRs-/,i8A,6FimSE]9$Gg=sgTb*d!gIG$8]<+^U?X.,\!*[)Vm%t]*ISG%:/ZnJ1Pr'C\8Q`=PT9:c$$4"0-qQq.XUNCt0#_Q"%g9$J<C_st)ji:Z\6W-nt"pF'J-Xm]$![%eN&-UAgpH]"`FKTXi;F!dh=Ld_L)m#2F7*oCLnhCgg`PjOLSA\=LYt=;>MP[hWcsLYi%4!H]/[\.A[GmPV[F>RV]5fMkng[=SiJdG<4(:d=CDNmCG44s4fB3rk-3ZRlMX66=:`GkJB_:*CuLT!F1RsVA!d$[f_$PDTYag*g;%S5#.gVRS-$k.-_Jab&aQ*Ou\07*r[#-=SbQ!.6f0.,ugM5=b3PkT/VeitY_Pfp<eof("t>'66[@d=b;M+8ui8Q6HU>_(fc5X*k,f%M$d8@OC$cR%!qUeEMZMIF1+Q*Wrs&Tl_43QWj[nS@`FWlS`6i?7)3Te6p?1C>I/#.MU@ckKJR&B7Bpu>Hkp6kRt'/=>jUbcmB(Eb%!Q`o<`i-"`TLYX,U<*LA`R<Q3/Nu7ZmB`($a]i'jbc2-R65!Hem_B9JmWX#$:KaX%BS#n?=j/1N!m/j6RJ97!S1b3@D#_od\9LO;%MIUU<(]VGci6j!GC1i4Dmo-OKd_tZ0_SXWd?[7Ze^38R5e,0V/'M;8sD6]]bMl=:K<IDt5eN6bc?%(0Q9Uk\\pW0M3am`,><AI5t%9rEn15o:9gUfd&UhppmME22o;QBD.b!(Jj[1;RXH%RHnG-s(/3Y)sMSX_n,0bf(10S0Q;e;"k]s,P)CU*Ad.d@nsQk!gr5pBKE9i%23s[Z7':h,>_#c;V4!.lRc88e.TPZu8-N7(E6J1."o70T['[#J4u/=MFh04T_XGo_E$`[(KT!Wp#kKPhjl43o@%JJJ#0*ul9re1%%!^npKXp/1O#TE1%Y"lG:pn2)rOWVH%8@8`&`B>FC2>>]nU`&Bf1QT(1$jmm!2;pXX4rscS:47>!XhODqc;@KtRhMZh*#u/j7pHP,%jXqludA"l*prt.k1n[M@+tF.t#5Ru)\O9iYf&7jShWt-pj8t^TrJBA:8S36eZ]3$@EL.6#_i>hKTCr0]V6X$UQ!asZo-(,Za$dL?%+^`Z<jd<T/p3\I&)ORHjDh,nSTQ#khSuks#A8bG:mT!-Snf30V%>sVM<($?MqPRh]8m=b83h9F/BZq3Vj$m)Mb'(rI?!$VL8NTZC%U9#[=EboNMIl\Q/2G+TAeQ4kom2S/G24aB$Qm!8U9ooV,P]Wk8lua<.nNDs_:J>**ojEBp_dJM_IS*`%CXK-@i0&!7Qua\LIgD<9%jJ7:nj$3G]eHXsikp!rJ^@S-_<.:Nsq(VXo*A=+mS>Qn'WGin2?%?%`(cXHl-D8?TS6(_)3R#Xthblm8nE9-8ODh\mPXn#m1,+)"%`$qTCpUsUuMZ?FtXVT==)V`!CPg-)1h(p+d)Emom;RDii6OR8eZZ5uU.;YjYcd/I;s8K5%o<7iUs7Y@MrEoTj?iNpT-NE+5W22,f%<e?lhOdjJ,/o]"bIi&+Y?iU"1^[:FF_KFjQJbJ\.-kd7AmN<9TDNFk9d7`i$G77np'FTjPeB^&S,lo:=K5-hcG3$aB?t_q1CNZE.%"8RTsofHl15Xe?K<+4Af?9?S+'&1e,2[LB7MB^WIm/s1.XhVsp_d4Zro!>#FD/b5m5+cbBjPC'?>W8<]O7)QeE./W^,c8.H?q`<6%i5C^)K^NUQ-'$sG0>XE+pul2dh+<1$&u.VC]a$1n@gT[TIg@>j5#K!)8;]s5"\?J7%?_o;"3@E+E(oR_lCua\P42fq'1RL(FE#T6%e7t`feN*)PPktHflIAJ&PeU<cha'qeja$,IhYB1,)-&[IYd*kkW_s.4Ce>hO8GMXfa,kcW70V>:GiEes9GQ4EoBLbP[Umbf!.k!c%Y8TH;d[6MZFdVOP#ja04j1/X#Kp_5`"s"L1S(@rK&hkZI&=V:#c"(KU]`ji\f75<%$]NuCLU?1QeDF^GWNjC_JOPMC"2mSW2;-@$%X,Xg9k/Ta?Wg/rr;Rch-nDQ4&d$d%h:;?U(_6[`ol$U?$Z*N$<K:2#$L$@o8YUUf/KJP>s@?]OEC=hdMg3o\1KD>oF3Qa[Xk\7:Z%]3S]Lk2%Rh&]?@a0K3a^7&jE,+M#ei6[&?qm)2c(0K)3A`_.INB!qb;7D4!')2&77$\Iil4epnoI.^=l.R@bDKG;Z5`mt40fFL9/%*qJB2AIpB=9-QAc15Rjgp_]l*Bc9QB#-:J6-7Y&^k6J^GXWY#S?m".rGQjKnN2c2kB<[O0!,d_9,u]IIo9!Kff[e=udV18'RC#bS%9EW5##Gk/B[+*,&"kYr]H1T:RVJ4i1%'K3%nZJKVTdSE;cHI^EHh47Hn80pI8icmeAB)r*5;b/"RYYf:7g&F%?6TRf`(I,QW*/^6%'G!7/4692tTA26.*Ohgc%I6?i!%u$9\kSe[KP;&0*WD%>r(H8IKH_,+WFIkAh_&+E'8$RQG`]7W>\T4b,"\?fI?qP0bZ\[4[jWC_%Q6fQ3`@K$%q.qFma?PH\??aqerB7YKXUb4W'4M$:U`A0Fr&!<Ckim:9,<&7N$'K.#1F"c/*KdgThskPEIWl8%^lMUAr]uK22h!h0%XFq%S)BDqu^5EeI_'Qs^aKXoAoH-,NA+7^Z*#Rr`a0UT/"eogITG'f+0?uM4=EU""/orsMn9b!s>TPu?q;,FD-@u-ELA4EY0J=<C%@9[p(0ATHsCR.T8;4rIW3W)(nQ1i#jNFiL%0_GOEhhUElo*Mn$8h#=rb)f\?V0`t[2`2GUE)L'GXdro/.RiI<F,pA.`)OSYCdiT!%+gFRDA=l8N<jDf]`b>0(njDHDR59uA2j6O"6"5`6!g>F!3XVk`J:2Ql/[>eY`G1I8<^Q.f7O<[I%)CN9fEqfL7"@ps%(Y,rIqXBe%Y=MO`2OFa\55Y,s'f9#tKL.kYM$RG<&f0YXcg)F!QV4GVJ[4+)QB8eU-5(Oj[PGb_+WlZrg)4/fJR-M;XU%e)K?*8I/3d:,W#n*[%N2_noJr251/:`-W#bMhhj5WTH6dWl0H2E8#+F)BQ;O!o#MD=6EC&uqC*:!._'/D43/ha4u+&#NQ@cSH^i!O(""%PS`G:I6/c]S&/%K"^T]\Wh91K3QTm1>9.aRs'0Ac<\VNKVIEMcE?EM5!k3,<o1ef^*F_o'"Q(I%Q8;jpMCXUSHV<hQ5OHf)C0VI9eQ!mCAB>:5L;E5%06/pgod3&cp+f\u"#E(-r+eZLXd`:Bcg>6'Mb,&52dC[OE3I(!LhEC5IW&^D]M=*`leIOKLPjm^S:#HN#M.%thc78<W/^l/\0%32%_^^+%c$]/lhD^eBp1<Bor)/reSEhDp!DFoSbo*nAcS3K\2/R$?cfgrh.i7,iCd)JaYiEHcRN.PG'RquC%<Y3;oka6r@!9?"R;:CA%&LHZF1%?PV'W>g^/'@SX`1H7J[O$^@*=2d/gTX=+!P7,E@ZBO.P9Yc87Sm=]lrkTKGH0sK0mSlUicD;^-6KZ[OPCe%RZ9]J+iAQ%%UEjI\r^;ci8r5qLB:IE7D^V<IOP"$65?<J4fe@YU\_+;S4*T`FH0=IfLA6D3&!aA4puLHc7d7hDV"O!/G\;$$8GROYEdOladcP`1%fdcdPV!Y5#G;a2noXbaD@':Z)T/V<"`_CpL@TggY00h(1+Om9r1D5F3dia(GhOA*Mr$D<WHe9jG5A2bSL*MFBVg9%m_T89;BQq/_%2&.$:HWWpQpEM:!Q.k8`<na!aS6:PoN&KuSToS0)BQ#AhNdid[-T.l$/HS@c8Y,1+Cbe&b-+@f'D[bn_6^];kV*6^<*2]DL@h3[M%%!PjoX3K^9ZD4S,nT=d+*.XM`XX-FtY%pX_reqDSf^$O+Ws(TR^(P_LcX1S?JE]([A_Z<2<(khhc477hR7ue.<&j;g8$`Di8\Cq^%B]T)M-l6>jj$j&:SCE2"Fs^J>1>"6mA[u88'_g1T[:3KuZ`A69gG!bZJ_Yf<ML9PuPR^Eq*\(aZ(+&#RC3A/J\=[M6`Ao<:UW$@O%SI3b"RH$05*!<Vb_Q0-"([1$;jeJ:adSbVMlu,[Ebhl-S5k%@sY.J\]kH`n.P40")pQ*N0mU3>)I<LTdY@!TZ,\C42I,1*Fo_.9:%NC.-CDi!%EO%HpDN=Aj43YYs8-\];T__Rugs$7:pEU^:,L.@FmKpXXA(G!c'#H.-aLp^dp5GgL_0@d'!Q_-clIH&h3KASD1!>sWe%*fXP96+2KpUT&bpA1C9f%:UkTlM%\dW<C_r)R)92lQ<9FaXJQC5/I[6M9(>cJ2Ag5.@$5:q<^+$-LV_i`7'N6$=f_T@Zmuk5']b/%VWd*Eg@$DqFkmcIT_t1-OK%u*W^?Q8GhQ5=*P]WMNCrorVPQ1UTMCG'"b+-p"+rFHra_X'Uua=g$&g<JguNQ2&L76(1$79g>#@@e%>gMd9UWk'F"_."e8o*-Y&1aYkV8gji3J!6Y\lI">VeUi)rGLh/ZGHAp>()AphpuA()PH&dRT(cl[qh&m(7J2p,V6_R<M[N`Ll2Hu%Br\2<ATlDE)Z1K%:Wgj7kHmoVh8Eu7dVZ:Mj84qWqJCLlY-\AE5)G8^8'><IW*;W$s$`?$=&CffpO!a`r#^PPTIkJQh>42(6]2_\%Rurbt-mb3!eB6pD_g?_mI;NuUC1d2\ff?/Ae%q+`C(E;9VAB2p8\SBX)'d_k)c?mpI&:W<?./%qm63@6bNBQ]6J<%N_(0FM*<^;E%W604^R*0heGQr#<%^TR'=HOlQPBF\(T^ugLfp+Hfb[0?B&ij@O$7_F`,g0DN$':H-_um*aAAiMkB'e[j;2lI?\[+ZU-q)_;gEa#=%dDKsei@'t_K3^pIYRlWMV,.C!pB$9DnD6hjk3/OY"Au#sD"dFce1SN5)Si2_R\8!kdU[RMN-_esmcug/1Q&+X`AU7nb4OtYGbDm@%0UH]JHItF6Ol<<m-:K"%$mj9);ZghFn$]?_)PD5WjhMj#NnnUM6gJ>5.gDrX,]oq_d3BNop>V$<&APPMCWK64dA"LN#\;h5?rdS:%^J6;ZDl4?_/+:mU]T%U$^s$12Lc!.?QoZh(-H1NLVK`]9U88$'[]NT,9AF-Oj^M(g`d+nm2EC]L/cEA=PE/gaoLb*PC30CB*U)M>%/%c;_Cf#ROEQ#1VG&?\n8(olXU$KW+_;m>B"DL(UQD\:m]QR!P-C.'-(-<OMWtL?[D:4c,jjp@[,I'KF-f%I9JCThA?_6qtNRk0W%P'P`dLp9<_M>bGC47ReL`YN_D@a?;b;^nhX;n#+C'"6]R+j9^Jqo`Ht]NsA0pY$$b>+"b4RHc(A)nPt,)(G!\L2B.UN9qioKZ1"#%^mK!eOo.)P(u*D_gYH?[nqEa>PS,cDBKX#S;5a7Oj=NB0_$mF!WHiNk5R-G)H"7D31t+@=ZBgCc4XcOWOteb/,EQftBdW[bZ0Fao%S.%`O02hXkD>[],ri).R*nB;@rV]B&iHm/RGr:M(eRAN:1=OIEo6I:a=PjR?1CCMN$>1#V,(&1F"DrJOrG!C3";F7*nMQsHE]gm:%cs?BgK1>=tZ4J81*MAO!^EEtYO35UkFpcM-"e)EAQ;jk_"'TWL5\-WG?#q:9hd@q%gUG-Sekn^8;l4J=?^s7cf2RFW0NLZJkC8gh%aWY:0;;9O7X;2e<[gO/,3Z)'NBCtTJR1q'feB3pJ`FW]rc^rthEHPhDhf;gH@::j`rZ4uhnY^ZcLb0RpR#JV)=cqg5PNK1WmX7lU%B00nsl".nT^Q*g6I]gYq>VR>S%[BP5Qo0O)Z^p%bo[rXu6bVlHdUhrB,nP;cc'XiS`fY[ofU2Rf8%4"$h&*1NXjU1Op&<G>Q5^@u%YiX:QquT>?#b<0H%jo<Q:KG(ABES+9h4r5$fl,W^&*0g'q?Xe@6TVUgF_$0?PT7J$8&bGMZ2T%44);rX:hgfs,RusSq!"FIll/n"%"&h.(@#U6]6XD"2Bsu)WL)l_;+IsL"1%6E<"@g.jm6lC]IXQq+@]p,p@E;g[PU+&_\FoW[l4gVA`5=tj?t=f'BQD]7Ih#b#`0;/F%X:8K>TVS-qRL6bk>"SQU`U1:R+@2,mX"m6QWN6`bF30@&)LE,(g=5XY3`'D-U[j-@]VYN0bAiiC&8aR?I)cq;/3rqnqJ8[9pCNr#%G@iT$,1+18')E\2@r\G^Rb+jZb>F1tT7-&2TG6DLp>f[!=k<nZl3,>K8)=Y`;Y4p!^MdHG=/Y:ZW2sM$m68g,BlnEq-EnD,CMUAD%JMnsoG]U<9"XXarZY)ZerUf&amYS!V:fdtE7dfiV/FA[9.Wr9s`4pj@n$re)&JJ%eABGMGq`MH6@`@%ccuB2kPJQ!K'!`>Q$":b(%"*^1'`)'b?o3D#<n(]5>pJUH3K?s1Y*3"qU&K&)dS#Z7nlP/Z[iF[!=a9>`u2l7@)Ha4\bf9^)q]5tWdSX[Gfn,u9@]!hJiVDBA:%$C[F6Tct*]`?OU6*4a2h>TF`dEj1-S8m);,*g_"^d'&ZG`st\F+\8UG+DtlP.%./^ZNNXJRqV3rH?4V@`%qMgT=Q1LEKj?W#r1o$%Nmu(P^R3N.UZIZ5B8sC):30?cft0akX"sHAB_prchj%m(QZYYVesqU*<$!Z,0)PD^D3Ei+hSB-`k[Ds:1uWJGa*.b'FkK^$j?B8)%)O@8(\+:&jojk,pmT@qjeTq\WOtD[N_:k%P9/mTNl<'3k8lXs-oOH]q=mo`$3<CqTh)9fgd6d6.1N1#tEKm3,S4q2:WOl`Y4PAk^%j^aE&_gY6DC\<R\*<4P2N<I'1L#V<_c"6/Q.u':f9CKdBN&=K!&g]!@0$3-`AeEHYbX6Z!>L2FI2`7-:j8)4bVcmsJ3Tb>USSS$n%(Ue63'o>d'.qV+[qO,$q&6DM+H7;_KdD_-,DV$%F`5&i7EHSh?\GCTkV]$<59Q0/99:gQ=P'T]_/c48HMjpBmO-]BHO]OET,k3E?%V`R.(R'#[4AHNID(=[)Do1$,GM^gCIY5C<D0<?m3j@^LPlXc]2mE+3m%kg[gmI<F>>poKJ1"C4Q/C5\=je3"I!iKqKRbl`5[bM@g%&6["djPn/"%"YqoFgTFBk`F+Jk"$[(q`48`RW@=F=d!D%;rn*Qo('sX$'3GpT<2**<d8FXHj%]@aR$T3mS7g1/-O*[Y:fKNj<42<%];f5J(7)nsQUQUg$pu=BeKe6nHaVFTV<Y@`Q<GXKX!ap,5GTTk0u&8\JBOT+dU:52;0JIqKm.7Mp2?nPnCD``RJWKZ*_a-C6!&l/%WJj>H`\6bb1X;[1*XZUa%LCal_lg8/S"f]?ki$nHTWAYOQ5^["kgpXj5mp>qO@0@OnZl&V;Q'MM=TR7*YB(je3&mT5:9F6<FHR1X%:Y8Wn/$DNFC7.`t8%WOq/18.#9$oN6/[p2c'].KeT%pAc)):g'!+t6u7th-C3:/Q4s._q-662_'fip=V'\'gMTsGBd>t?Gi1l2Tb%CY"i'%uLG>2c*Okl`,,B",[hF')-E_+*=KE29$Oc!GQ8e]mTo9D:9"r?ST4eP#nt)ZTM+'Z!``uD6\:adH]+i"-cM.#9?!3'>]i>%C&mpaPt)3AZ:us/V=q[=p49GNhU\+28iBi,:8+jmS3GZbH:qXop__7sr9S:LF$.$_U*Th/B*?f_(44,^DG9nTf2Fe8l(s;Sk]q:!%IEt7W4F5<j.rUVXZ+^lor]PHtFWf3%AkXg78mI-nZ?aT\nR(Z^)d]'!(o:4Fn5HIQg<NIEb3iqn9[hN%OROmj2m)IG:N#11IW8T!%"F?Ve#0)?8T+i<o`3'8A=5uPM:[/3SCI7,2li>rMVZKO?JaDotE;mshGnbB%R"^<Tk9e>eX&A&ID7(qPmDXg#HY<;q$\QG&Vtg0;%rLej(%-PMP'921pc*8Ujr[%rloO3`*gh'TKSKJCKY$hWoXEfB\#&9/q&blB<P@RgZ9nr[CRTiDk2mJi^gnW#SIV&DC.\YoV#NJOO%'PT^+WP509fLiH%84l`6I/&hF!q^EII+*VIW]F>--;tVtBU1u&#gO`A\:O=:`K"/6I08$\=-666`E"AHh)`eSD$>S4Rp#l/:+_%L%4NhW6.lTqSp?QlH3X]dB$H7pfN,*Fc[5?e_CX^_YY?ftJ=?"%b`Kg>f.W<NIf<TFH;p>NXS_7j3[)oZogh*V_:1<\*7k6HQUFF.I%I'0iGcm#\s/Xn384d]J=Ep"iRQ_[.&1t`4eT-C9ZW^bO$(QsC#iVhuPr]%/riO7Lc=EGtPPP$<AXZ:Ib[tWsG_6fm1RjRtZ278lN%L<:]<#(?kY=Du"l`%hhdf@DeUqp=?@0k*]`<kYh*74:b`.erb:=hk)@e0!pW;Yr2A,*&KTb[.iL<;k@N^M,opCVL0*b?NC5$E%D"%C4NKgMC)I.)3l@h5F88_jT]r`HO+SJRBb&(.E]oO`?B#^r`a,9]K#8]_&Zd9([*JX605VfT?e[#3j?Tsi4sS;H,>e9ZH/BN]7GnW%a)B'd1h-.Y[3AZV[fJ%pm;9'R6Eh8C.[7k9TH#Ni^\_#\aE(_d4[j@k>'!BY0rNDPY[6-/hP6ET.rl%RNW;b14B_K+Y^UC+SGF6W%k=P&U;bh/_L"h&hVej(A[6DR\A9i#\Xls!N-Gp)2lX*4T.]>;[e<giW1W2C^gF5Rc?^k)^E_W_QY!MM?gF^6BXHp/uJFYGEAOg8I%[23Xts#%+BH&l+?6d;kM($O`&iMSA/$3WIPG8eY=LC8)k:Mi]@JISbl"o#AgACq1kj!:'V;oY9fY`%@g/R9Fe4D(far05fF'EpO9%M-$;H76=1$)U2L!biI]uZC08EfIB5^@i)&PNhG12?OIeXE40$3$$W]?^Dcd5m.+sk25bubkmR3ZF!N&61%+/La$TUekp121BW@(1%luFoSgu2sDq^u9G"i^DtIXK(&H=Nq'+q-##@:ieG-5D`Ql<[IY]T>2'3XS5H*0%S3(u<^,YTGFqG9!,031EncHAK74,<CQP3_2H:%GMMi?INSd4BS6CYE36Y/VpIdq"OuM;XPAcO]+ODbo,;,/KVO[>fDUS!`$S&SZkHY_:k$HEG&hXXR/J7kD;f\YUE@dJP:DLf,>.&g%L.uC-IF'n'2lDn-6(]aF%3NUuji#+AZuhoi)aYh?c]OaOSG5;\64<s@YVP@:aQUV%Gj[ck9_]sSG4(M(e_s%E<^!:'*F3g,bT0YZ%RdR6A3XRo@grUCHe+JQ:*W&WKd_3]k.2s6[^.0AqrI$M*<TOV]_Gmc?aUKV5!`$u&er;nL%`4U3/G@GV+Fb1bW0M3DdMRF>[i(FC%""@*$mS"I<Oe,<GL;bN=4Y;mB`L<'tgSU$_OuoTeP"QCSlLam18KW^LpUQf;%Uc?h5%2lN8\XQ$,JSkll6kX"YPQ%uGbGV[opj5M%icE[pZ'O"MOo4cLOa9@%b#<jaiu(M3^*R.*ob*W&Jug2"^3tE"mQ6Us@?sc:b1=fI;iH5=bEElBeU\:A14a_oqj+#cX?"F+m7QZ$%h+=Ktr9c4ugOE!"AGlk!mcI34nt.N9pp^M;"TIi5>U,76!Su.hSQl\Ak.3>"!O+1.!'++Edm2$rYfJ8>7RkFQES1HNVg@jsjm0(^%6C0YUrAr+GPTC[e),4XV=R<QX)&F.tFg4e,j0jM(F89pR^M)FfF`Q.0'%r9#IN!A"P,@h94f&^p;[Bq*F_2HM"i0PTLK;ti4&?WL%1pI#n;_`'-HP6lQbNU(0+aG$gm8:qrs*fZ?V.:mGP?4$2/O]D8Z!+7`'eo2gF#rPi+Qd08^EoRA9<K@ZX^4PF3a"?^0k0/!<$$YX%!MDli7(%F=@)t=_c]*^L!SHg;[o*kHe42@<X"ZH4TYP1H01VZ"9-BYT5ZOs[?'GZQHln8,2P_QAMI%@D\b"M`AEgO1LkQpa29<mp%`71-3J'dF;Qnm&Xo"eC+G"po2P?]Es@'.F(T*ZMSp;3i$gfh?>e4GpoL0Of4&mBp_f#QVpB1ef,0fk]5Ir+VQI1:,lStiVeoYdWY%i;RH05BMK1g_*YV>.i1#C7+=W(Qcm2gf_\L8sL>:"L5DMO>WfJf]3G7BId`b0D4a?.`I$GZBs)g0eWR&D>aZWS$oH.OiL/qdR4Uq%5L_oXr$$?_@Q%H%k:`KG3;5_"%FB6Te*e(lot]Z[N"lC2c!4"["e[>(5n_(*@/ciaaj_Gb>WSWQ2[*$4U=X+^6=9))%p]=Afl`h4%T\'<iJL9=Gk!H[#HEr)NQQ>(>"hPjmWb7'jGs-JbCBRKo`eZ>s!]7BFeLjb1E>PA>bfV:cFZq%MU,cU*FeoXZaWrU,9Q<@qQ;4BF%PP6#Y_S_=D7hf=V3'="l*SRZBnr=!?-ic/:a#?#(KXJbSiXH)qDFP/_%Vi1)[qt`ON/d6'g:Ic+U+@C^lX\gFch"#uR44>;bLg3.%R;OBLiW*i/39%BYk"t__XR,l1odPeM]#R>3]<&#6<ug`9)@F6Xp[*>"kA>W9>Z@sAF1;A@86-FFT<pSZR#pZ?7Y3=hASILa-mPV,%0\!7!:N8X&HSga;G"X+C0G!'H0(!V4m//TUcOS8K;-c5\Mr`b/A14St7/H"!^c@npnC#d^'3E[`6!=;R=ee^e)Y!5mFV.[@*E)Bf%UPCI0<6!6H8$!s9<S9kKEdHMEkip3u9SD]2Usb0r0&gsUJKEm5TMP6[pRu'ak*<^`IdW..]a9'jg'+8+LeG#a=8^(FUGH((^2@h`%'4ISj!c7?^hd@D0h9L11n!]TPMO4ebkbRUXs4@b(epg/i'Uq_3o""Qu<dmTfh\OmaUACle&$T!7q$ulVm=&@5TU8VgOoH`i^R/CE%lYdFr:fM%t&9VCn;A`1$A?Q]lcB2I#U'=J1@ah'"r,+,jJD1]R]'9aW3Yp]e1rg$j'^RI;=sTT!N]<:<"R%Xs^-?k/o)73?>SiBP%D<n!&"=RRKS1sV;"K#ME^r5RMbV]\>V6oo">TT%k'%kt3g=d&oNfg.rkIZi8raZTop\\%>$[P+d^%W%]m`uhtpNN'lCt;r[eT,36%-=go$kf;!&q`m$$^%Uj;%[=)9oMI0p?/&3Y@8&3QVKP,@9Z4S/pnp)*r[,h&f5bL7]ai_XJ2pOG.qGrU[G3qN/'2+!+)%M)$.h*&%0jp"_iL4lndonQ<>VH3"rW=^SFiR%0Ys"t%*9UZ]ntSX5;mnEbWL<uMk/jbmCd]gW/L4HZ0L?g3FB;i[pRo"3eP&)RK<DE7oA[GS%T3]ahf>gQ(&5!)bB9VePNkDXpfh7l3A?`phcZrKLaNGsnb,DoTjbd=a5jqfu/VsK:/*eXfM#q0g39:Z"0[8U%\*$ot%l-)obN+EJ%8Zd%#@8\HjhqK*0YrdLfoD(X%8[+GjI$q+:1!InAl;b;Y@<U`Z3tCi^>P7hnZ4XS!c7$/<m`>q8\6>enQN^K<gPfu4q)21%*DJ7P%%ULkfQapbu+]2[6R9fT-oAg0\bjDBIF?5)6p&Pi!(GR6T!%TG[AT&)#Y2/&8,j4klFp>RinQ+=TF=/tO>RaZ.IXLT:OUr!dlI-/O%EN/"?ViKU2m*;!+%kCYAh:5=r5O=V7J!WWcnk9;&g#QMerdP7)Ou^o,pGQ^:jRQq/]]_92eNIiH=sLnFmFP<<c00E0_Sgt!O+C"Y%]U@6^+WK#'Vn2kZ8_Q6>q@'Ab=-bEbQ'ur2H$0!>HYn!D=LkR1(iL3K!n+3lC_pJ'_PLA&P-E+=nJK6'A.\$q[TR@K(OA6%@1dQ5%4Cl]Qm2`G._Y1Q9p69>])UNnJDVNk*0:jrbU=JT1S6RodTlZ\<lb#YY,&*l%b8Q:`T@<+QM_r'"Vi58E+#/&gitYi6%'_1b#uqH;%CV<qp@uA%?gboo\%1'o4@.uBm-Um3SLW<=ZEN1lI.dZ_>(O<8&J9K+>Ach-"f\@p*hp6d\D#:/%$!lLJhs(c^k0!g6QTITKJ2%+$%N-QNfCciNeIQXd*':e?\k(P-?luG1.c4[0uqZ;\[T1qK@KZ]YbQ&l\BZlEZ)!\ie8YRRR`-YoS,$rOSFJ[#JffG(&LD>KMd0%b\j%,+?,u=H$0hDY%`mkDVg$W=L_0+O08!Zo?HYl!9ZHAp=E!&WXG7hMe$nWnWR+!`i*V9%&YYX+]:?<Vo@0?=+,@''?OfGFA0%n/YXN%9g,?M!!>A`n_80=$bt)hjA=KZ=HAsCWX]Zo<q0"-P<@*-Xnd<r>2s-c[^E"#r(aAQ?]i_l6G$!ne<<HC^oe;Hg3fl[fDopKOSEs5%;_WX;f_%-qp:sXdh4%BWZ1L!LGam4>(N)3AX62,_QQ2rfjnY4T9u/J`CIUts"T-d&qZk-g6TmD^1?&F1I@lA<5s(3\ReqQhD"7=J%hGM4M5jHMIb0;rE=egd5)F3r5l(h!_?scEg8oT@C,+bkVojIGN>A<S#3RP9:s.EML0ON*moQ))?QoiZ8r'R=D2YR>$`i;dCD8*9L%es@jSpDGZ#_B:IH,M9<*d!e9UnMSH41T(jpFG$l:R$b98oPd_p%+1:&JhM%O02Ytl6Xo`a3pmrhJ2gdFKpNI%G_\Gob-32CliLeh%8g\@s]*fG^d0cCs\^e6MR&V]V=2rJ"!`fI*VIQN/BUq%`cKAVrI8ANifd9H:#dH1jos,:ob35-VIZiZGhW472k'b*)]8C%Q9_XG8%5A]-82H!+&6Xe\Eb9V1O9!DD-Qo`mcGI_oudPr+VU=ql8n/"7ZI/l^2g)*D9-.'T<aNJo%99k<+l/8*>bQ2PC1O:lh\J1X4)frV7%&d)>ngZM="*#ka-S-?<5C#7g]Kg-FHK''DY[_K]O4udKCO=)Lo%K!6m<1de3%l$G!YcBtQ<F--l4S)#K_D.;I?Q^)lUfTb'>%Xqd%a`MJ7W4+S;ZI'j&&(T-G$2+(ZR5;ac/[[N&ajC16F`/jj'u78+SO<+38%StrY>#<36?:g:_eJ\W8.=LYdALc&,r`tKOT,[&gbpuW%Z3\Ndep93lHCnc68LZ7,,$;;^8h`3LX@)QJ6W,$MX*1e)3I$YnFa:&J_6GER01]`7H]rK>g_j`udg=mj^ETO[o7'U%I_'#c/Zk[)%Y34+FrXpX9Fp/r^B>>4F>>!u.J=KD(bUY\G!m3nq^B7W^HAVn@:L^*^c:fPOl7#ibQKG=&:NV#P;2slIdM(`_+VnK%4eQB+(2B=6%=k*&.B*cnq:"k-Ik9N=+q@([cbT>1G!-8kh4MSI/:u$4>T^Oi#JNA3JP[rVmrR-F"2;\uNQXo/>h`s,u7TH&*oe4;],[9F+`C1D0%Dsk#ihW]TqLn-*]>2B!Eop\amH#,P[?Db3]N%]rr`L)FgE=+-6!cf?ur30cG"*6,T(3_3Z[+^/n,?k)C^BSLN]fHkOrhg_FdZL(_%*u:HMnb$?m[0QY</&DfGHLBe*_#7j%&ltKZ-"p)s95p!42pT$?f'Dc,2-6=<=>1X7`*B=gl42Zmi$UVVa#o=l>\#^C87j(+-!@T"%$*>VlR&NK*L=J%=*L/%+j>n@RjUt?*XT0#3."."K#fEJ*o/r%gpW+1he4+6]),DPi)cMgb;<4U6''Q=H6\i=H+Q+GN][V"0/>Va7%3Q7RE<($;&_3GAC[=/=5<KP$ZB$925RI/=2)^`)j]/9A1@mCd'Rhjl+,6E1aB-^u=6'4AWJu8+gRL;B:U.?]KC_^b<ZD$pRn)qrO%%;ac.UaiX-](rV1'"6q*NfqK6,JlgD)a4#t8BIHW^?"c/e(h;EZEOD^Qik(anS8,!`"6X#HLcBY:Y->RfT^BTO@6KfX4F2+0U\Jn%dk+>_/.?\'iI8G8gsjWf>N.F]f))m6anqJJP?O+=B[&LSWpE*O8JW$7eolqN[7N(5eRX^r&(\$T/BLlLPa_]NRZa&f?jfOuVX[Y-%F2$I;Q`/rcUbiAc#5`][oCNH78+Jh&6oQGMnP&TBG)_lGoe6V&&B'J3XKP_)ELlsId4NMU.\crO6iY[WK2Q%k:c&id@*>nIs2L:9%iXg59a]BC/-jGs_[DZl;djG%103:Ci#1A37BBeNF>VI1&AUKYnTdd]b=.1Yd[n8:%.J'.`FC=+-e3?bfMt6'k:.pa&Cen*B)D1XO%W?W)/Q$e,6<o.%1&;crr%SXMi;![s."HWkh/_LJW8bmSa/!`Jd7'h(IiA48S;\kTE]G6oam*A4=\5362p\NS$JNHX0iTY4:&r("1%.:o5!FeQ1dpiUp$8e--hH:dpWMV<lcO"Q(<VX+Me-3:J6'V,4e9HTQ58qdF\7rU>P%7`LE_X4I98mprIa2!bS8ae+7J13LIQ(%^#%X[^0OpuT[U<m;T`@S</b>>G=U?fPu[s3O3SN'6LGg$Zm`ju'lGhP<jrUb%RHYK;MbO@Kda&7"Se8.p>?T(3rQM*$B+_pfO&:<W_#%\k:)bmijfen1,%r/$H3@O"o0:F%=OP[97Ekq.CR]T;ip2mdFlqG"&]iIWnP-k"Q"H+(.%K?Fdg"icA9[`g3_g/?3?Wn;PjD,c;bI%BQi$D6i93oRoI%sI$qnc5rDK-5DGs`SAZGSTA6,jG0Bd1h;g01@Ou@0KdqC'E?97018Os&oQ7=l4l!3P&TBfA5C%PDkMo^\$S4`d%93L``Oa(0<=tufVXAs,jhkGJL,W7l?\^bW#[.T`T4I/l('o!&R5g28l"2D0+"B4H6CjmUu3AFN2("0[u:M%4O=`e?!R)J0Lc&(ki%*H+dK-:9m@!=2`+H?:YrF[V53#eRLJPQc<(huF;Fo@5-,Hqo(j?&p!NN)>W1+M]\BDu%a/nnZ7dBt[]=&OH7QT/\jC3ZSn<8"R!H%``-dY>nphn5cSGaUFkUgApIREiL]9WLT5Bd"-XVDQD;q6kV=S^KeLOtUZ6ZR8jdT*/G8h%Ji.%Ic"B@hFW^_*Z@r<KA>;9dk%iXF%`9&s._]2WOA]HYcL,7_RChI!OY%9N'Z7`*lB"jDS0Cp@(c9h-@]#+)`X(@R!1M?U".)_a,W2<M/^1jf\j.uRG/uQF]B*1rXg*uU`%[Q#F3""(2iPapLA@,F\)6`#Fp"kcG>-Bf6-^SFt5cU0&KR[4d+5a@pm1,5U*JOARs]PJ\CpP?JZ3%_5g]X_A5=HW'MVb-PZ(K*Om%d3]Q>R#d*nXO8H,DIUm+WbKAbqFJ.em9c2B\,omu;!bM4,N4H3P_mhD1QCUTF:\Ng4"G1Ojl-APS="L[D$"1W1j95*!(Qf-d+80C%%O+r\3i,U^?`ipL*aKFEQ9c&sdj\pG`4'S2=D'[]FUog\AA2E-W%-K!.@_ZcYZcr]9,dF[JMEKf01:M4=];7j.Wh+0oV4M8)B.be%jeX/!6&6kgc1d!s[*'W`G=DG-$]X88dGn)<#V@';:MG;t-V4nHC:l,#EFNqVpctMbLL\`5(Q$q^X;N6p0E0/lWp.mP&G'n'UK08+%iL@+?SeY<i^?[d.4m?@2O8EhH"s@!^-0LnjgjF*C7+7&i+b]5gj2GXq9TF#Ueh(BjjGR!?>g1ocnpq4b),GX@_'npD:CKNe.7,+Y%PhH6$UV':;]JpNRQ>[SFYRk$9*,:=mi&7nSb3"0,_XP3@fki4,pd7^?;d\U:q*P[ubDbOP9WZ7OX"2,Y:en13).kE5i,Dk'MOWZ4%q:=*#\<V@u<89R[nZo#:"80k;]lhmd]AM$bouuHOmHUTC(XZ&TeO@``jEPNHFB`pIq5S7@6;1VR[KsjmNj#V:']5Yo;nb;%-X8)I%&g4c@ab?6pa0O`6XqZ#F<O(I:/IqUKZDeneO2?TI(5<DOH!JT/:6g+]=>O0GQ]+GO+l2]FBt!]2.?N-%NZ0V:0l%Y"B!eI`/^F,Z%i:W1-UeDA1rC=JtQjn&(Umrcp$n-LGe)jdtGY%)CiTTZh.B8o8IKJ]<p$/Q7>[h=VA#,(GkSl+gb*bPO[B'.t$ueaB<t&0DQj6EZ%G>JBdE6OC^,Ik<6].V6K:Bm"NbY$R8&$PAuo"1&[@?C1Z972Dq28itGNFMCfr'RB+Z(b?HKU"M3BuVUVh"FlNRebcf*3IA8BdGr$%Q5ABdF`ng@SeZGlZV9[F0%Ya+M3eH_gB6?_BM8Y#`[[K%-FV[g)rtS+kSV<S+=[Om_'hCC4gBmX+9fBRG_0l#?lRLT5c]I6#&b<I%3]bu$Admh%q+(PB/mibZ\[`$O.QLK^_Sl:f'em=Bj9>pISEO[PQl>s<nh9>#9FFdJ=GpnU7A3>BIQBDmia*;9B\t;tp:V@&(_p0b%%+Tg?bg,.Kc[!f8r>9Q,B8Tn=g%8&4j=d(^WhL$*]J!(mf6eZfP+-@p+=JL)o++8:Tqj]L6LA='lFX:YKr%,YSFc"O6k%.GWdGl=%k%g*k/u`7DBu)H:@Ab5P!X6D3[#,n@Mijg:5]`db%/0+LL*UB/^M>Q2f/kV`)U]\@eM#%aPWQOJ">L3%Zfd&!Lh\O4.JPI\T?][h%Cm$A-A2k#nS;b+392aeVk5L^7#4ji"=X/-\3MBZj,qKi>7HH(=o5Lp"mr*4^j>k9LZ][:r'K,Vm(XLX,Z;'a53W0!'?oG]ZGj`3[%bc()J9-)]+7I(&D;ML1p_T>18l`o.(-^@6TT'[k5S(7F7,J,Hi?\kt9Eu0!X+TC7nZ6`/LM8ajKb1H.HqqMq()WchDN9Tt'G!opp%]4C'Wk7N&72^Zs3<;R(m5/Z8@-U`l0;85$L9FV`@OW'OdciDq#a!Z&T"3!20F/!mhonh7<g"TI^;,RIDk1_3,KFq/IDq53E,b'**%X#BW94&f`0ZKSl%h>V6OVqtU4W\YiP`S48@SQ*JY`_8Mih5`^:U.crbU$Yb?X,jWm^RWli`YD*qPb$+[s!>%3[j7sU,L^Z&f61?Q%."m%#*7[`KjFuIJ<MCFf'WfR)696rZeNH9e;LP'4*h.HtH_3K`Bc(OkE/@FrlPX@[^@:(UWL=^c`@nlN<#mG3V7^p*.chkLGKTW%%r5r(Y\-X@S$'o`mq+C#-@9N'ic)_EJr'HO'OHud?X'*k9#.W#4BQEc)<P);Q(VmXIN'ef34+a>-6r<F=G:Dc&cdch%7hr-TYqXTA%Aa'bIl5f##g[P\YM!G:I=TKWR>iHX@<MN^lEbH48)05(?f2+W,cl6!)@s`/&i86rp?!efuMaYq\%)97:XT2Y+lnuU7?sT40IEe?S%M3qlpc1<ej_<76Ha5%E?6rpqsPN@=MB!2V$OD'$ph5M)'3bO,-m*nC."pJ`m\Xgj2\@q6NEbN$RHJQiTfhl=egtdKDCMANnO@dUL%;<B,'?'"-9J#C5<F)ila.ehgc59`]FfP',FkRI"YG\g86?LIT0aM8DfU,[sBYHIfB@4j/ES]#WXEf%],,L15T='nC.AP&9uN]'QK%-Bkg:</]D`M0YfRLf7%SCX8P*>2>U/B1B_,=qdJU0:G[+J^?l`P7C$3*,,,2^*Qu]*)r^daF8,FNF^W@<A#ZPIBJ(Qc/.,PXNTKY%+*"XF&6'&HgTon^FbT'_C.:q!($%a"edRNu>I,NDj6)\86fEaqUX99Y-IYuDGHo7t/s5t^:PCm.Q5$13_Js%'\SpLK`F"*.qon($%<2?q3ClFO`Rj"6GE0D-HA:%f"R:2mApPg"cUAR7<.h\9HI/02`hP6kZ9?U#KeXMY&c0ep+;8bH4eJX7uP'0thm84mqXUXE$ff?RV%7c[Qb\`iD9q"r>3eWST&/Uf#.@fI)+r*ZhH/.6D\6['Ie'Y"TZ`7$<Me4h??/mnF!"ZPZ/@ZQl&>K`nl%Eh7ejS39EAsrs1,Dfs2%0ah8&FVoIj(RR=+`Dl06R.kI$!0&KqDBSJ%#`bstK%aiB9NAIP@D8C@c4mgJ>W0U)U>9(=X:tES%[<?NEeZi@mcg:2G)N/DmFf80%X1hbYN6s;-]F.ehgCtE\L(Y;Mq-=.OUppaHanO)^^V</ocC_J:8+#=Re_djThpa@`Z*t&)R98R1@s9lqVeBS(5g-o@iYMgS&E?!1%3gGsF6=!ru`SDNEqimRSbfD.Tf[&$&9W3MhNm:rhQ*B/@gB(qZ$.3aIrUr#cSVE0aOC^D^%9T?1m`tTs3pJT[XC9Ui:YXKl7@CZ%%P\4UfoUKI@\/iR=1R></S5nf_-6r5bgMp)5>bf5(/Qs762k$I$GZUHCs-m3D2udp)`;ggV\_)O&0ZTe[R^PVhfL;+@4P@%jmpsJL%86l#arTI(XDL4Tu3>FuQS:2KUX)]8>lh/o/e=O&>I:YXX)7JQgKfInX9c_j.=E>Tms(osSpt9A>KkL6fHCln5/>IPQ`E]V4G]'K?%)>Q0;IBQP9oA5X^gt-W2$VaZXk>^h):eIXR,tWSLiQdM'IV-o9[aaWHPqQq:dC,HZ;n=*TdWO7B]Ys?kQljM#j/\Xt?Yho@<pm$8%r5n/0I:i8mPd(3>*A<F/7tF\%5pl<Jd7`nTTkp.=:>k.0`F$Q+9unr%FH*:<S!>u\?O&J7Y/oPB'a/r:&fo.h8e#!d/(k+#!dh``%;fD<[O@Z#7Ge:j8X/=_%jP(k5"L^dc)R;en]4\rE/Un.)LX.BPRNE4'Jk6QCf5?cq=kNpr$jiQAZi<7*DiQ>^OtDZqT_HeW.<NDh%@1N\B'#CIY9p$lFrsYAZD@If;5bh^)I_X#'bf<Hu>W<@l(ZFi.YZk%0q=1Gq-c(r'6%;]5+g3p&js,<4TUXsPFl)K*j'!F3;c='b%C`6_L1NrL7Shic2e)2D4i3!@WLu.6EC></p1[*Dj>m/:m5=[-MA0>tOhe0J\SJ]6N'Tkg5AH']5Z&C@^"C2K-agb#PRCbR,(qj%R%K,TqYrH>]GM.p]\cAs;p8Tr@I;l-uQcYV2H?8oM0A+]rLA1bVgBZ1Wj<4SsBH)=C+oTsR);(&s@$Vlu)B(aTBa<eu>@Zl$71m1;j%>*j$Unb:>D/uQ_UnS(tm?JM(2-TothoX48F2:@V72T/94rfp9D3n=)XUlbZC\i4Lso1Ma%"6D>ZQl?BH!KQ[QfpbX;iDk8mIQ`Zg%c&?u1-fT0mp0O1._T'J`BKaT`!dbEfcP5n)UG#J@VcOK-#M@<qSVBHhb3<T;)Sp8H*@G%:G$A\bhP<jT/rbZ8CHPTG*c$e$Z:9S0%T%R1n>>qii;?qM9hoL!(Y\AFN)T&Pg]bp"##r4unOc4..U0e?B-#<5$0>HO><SgEnZW$UV'><(YPT*;Lr(")q1T$>3R=JPo'k-8u%InVNa\]/G*Kttii!]^8o%,"orYBT"EmFY-4`-JKVA2YGYqgb5r170:ebmY$q*Md]TD+oufn1[*[*Z6bRqfqh%R1L8/da<i]b#F`F%QWpf<FQ9O@iV:Z\H.@B/X#%fp7@#<1VOoI&\$lgIaHso?.1Ck0e$e>hN%F6=&+dJLdC3[OWoV0"jB!M;qaRBp!9]n_I6XG(O63.*%=(B5KUF4,&p*jl5*%uHg@=O%;$mn`k8CPuX6YEW]BDMOZbOD8LL%;r\]^ic9(?cY)6]j]Ll_T6/5and-Oe:HG+rV=3Y$j3ip=Y&8%g1O:/3/,<Li1L`KPt>sGC86F7XQPO"\h_&hikr*7$G:X>=b8#Z?(@O>D44ai?BmS3ptM)8YEnJ(]jG`#30e$GnqI`W=Z=899Tbul%@1glT*-9)hk.^(:K`K`@fcZ#3EL2^N[c`Bkop-@^1SDr7mE,`_0W(M@D-N'p-b?%3NguD`j?gps@R;0hb-!eE7ent2[Y3Vf*K!"9%<f?=@IK(/3Q3g(a<%/ld4NmT@CFJ!X66j7$XdskB\dH2+[F3Erco3O'#,D%OZ=M+aTtY=j6u<pShFADu'8SAh`_2rg^&>=r#4[)K%fs4c(cYqpUiSA(J^hOtSch"=0``2+ro*D,Sp^*hD_0hk_]$c>NI;R_jI\fZpTBQ:1Q-&P]`$8r]AuS%*R#Cj2X'+3XqUre:8udcf%,9[2kJ$%HbI_0n/&V]0*D3N:%>66Cm_D6pe3ES12Ncb4e#5eM`THa7oI5@VtiBA.6Ri>j`G)eE&ORO[boon'#Z4gW)R<tRU4L:P`%I]MFo6SjE-iu,_:[SD1#9qXW<6rf)e[lk0L7KuC^W]2B>kC"We5bga%HOhp$drqF:"#P+)WhuTf4(i#D6'%IaBfT-,dO1:<ie=0+%]XI\Q1VXTjG\Lh7P=ko.Pi.8sBSJ79FPPrNl>7('mF/+t6%PRthjL3F5q7DR+=W)Hl?Agi%9IIas1R0$H\4o8<4tQC%E]q7IsCa9%V!f9e(JU6`ikOY[n53ld1ik3%V9XWl8^A5*OS"r9!*!eC5h18nCp>0`(a\p"P+@NefnlKYfIf,#<[`pi*k++i+o5&^AESm@(Ib\W%I<g7%)DO[USj_&CaMXnBYki_19j3$MZpj^PQ"Qgm;^<II+.fq;ANKmZ\ZE^?deIEW9ZI7RL.u'urm@Ar1E!rc9p)Ek1A^XpNhC5W%@.sHZ)kDpPa`.YScg[c2D9>)A2`<hcQE%a6<I>J(g/I@E`11a^aSm6#IdjJlY0Nq/;*!B1Q?3YR%mir7(_gb\$aPg<ape3\6]%%l%'G76F:a;,gS&1h9CIo7d1Hon)%.<_DWs`Bf.0KpXH(3`6lB<!?%pKfM@W9,;<)Y9>kXA.AT&umR?o4"V\gM"ghjVgL^cnXOoO"E`%,p_NX-pZb1]ddPh&kiHnlL)B+0kK:ke(0n#kde;'<72bEJql@e7W`#5O>U&AOotA?21%>3pVk]Z)p8`E1<CE<$k?UDcLL1\2KK-k%r@PrgI<N^%m:bi/h55Xn/SE`B<2#iE<`38D0>+of7'>?k<b/:i+mo+JM4e@TUIIf.['a+VOLWlmYF(ZTFEIL*1V+*C;60i8[&(*_%Genj6YC)(>1(OVjqO]K1N9:'(lJogCYG32>%1Z4$[0"=/"-X'gJg?K<dE9n@i$$/#hgL3NNl2hheC(/liCU+'H)\ulA-LVeOaJ>q%"XXFl^,M,NSY59#-gH$JLJ=>TH63doi6]!]_JtWe>%fEAKHF5tG<.%GrW%+P-6O)P/DG`9TW4[EC5sLtTd?HM/s:kbXg\G5F9bXi%&H^^'lfB1uoFX>MZLp:X3;ckH9]:B!.d",-G+6_Cj2S#.AqCF>!)00Wl5e[\@J8B?^B@<b.?Jk5bH7n\&DFLe?3$c>(&B2QN!AQ,%"_=Q:l%K*`f[>R5$FP"c!!8&Y"$N[@&5WiE!iFs(?AIe`</G/K[6(2%#Za_)6ZA7%lg%;Z4c00nc$@s%PC'Foa&.:%I4c!R2l;II%?CB(r*<m;c"4]X<T^m;n#B<`L)#Jr$HW10Fji[!WY*'jgl&h.PKS7:^>mtOAL-Y%BNs46^(se"p$_H"EeO(=g]XDS:kkUhC^-B/$%LcTXj4>=`d:,THpH_AcOYD'4@Yph#[?=4[Z/uP6`q9:WKZ0faW0M/'5onbgaoq#=gAi&)W%noC,r7R$u;+uMV&-Bsil$BGqS(+qc%GSEd(nc=5Dq^`AUbKidhg<qN6TVuMkSCVZNc^mie>XsC,W"MCb::'h:?2_<-0'&W\#9I`j*E6VMPLPi7Qq6(In$VHpSB5$A!qT^:%&h)6'g7l!k5f2&do@7El]_'<8;=PN@Z*mln%d!EXFF&@a\*WXagGQ"Q8UNUJ)\Y0uHp"D;c^]$JK>c=gD?*]Md9U6>&&1"!-h+N=%)&A=i-)Nq-m6n3.SHoR%HN>L/!G&1-g%/X+]f0Z\_P4[#Fr%3:oH[q5f_.`gX/ZNe*0<'gp<fjmbj9@"Rg3:%CZ@l-IFfgAh"$+X%Ra0)52m3=am!Ybb"2,^VK,h)l13`!2,A.%E,!CEWV6=om$<;g<HpJJ+rg*+Tes'V>/\*cGap2jI8S\1bD>j5,!DkfB5^cIg0ug>]%(>i*9TYNsS:96I1KL]>D(n>kH9XQmnF<B'cYrbV@b>KuRfSr_RD>IuW/"Z&B-Ro_si;7ZFQV$aZ0jE.5cd/I_1F)0Ur^X%;>mM`U%,TX*bU6q<"<4GlRMfKk/k5?aJCJ;Q$O0n7uU)0t@X$P9D9)Hnk(.!`<4"o%EN*CT)^QABYcOE(0eO<.L$_%+Da+)hZ[a"f4J!GMM%J,djprNGn_s6Y=9p](/`s8%4D9N(lg^]&rU?/P]!p;qg`'`20=jS/,[s8C:DornC#FpX<OFWfae=a"gG.$CtjUIjG/Q`>6L/r1WN%7>EZ]5jH*d?.(G7\f<+R@\2Nb[NP?M`-,dVH$%$g^"QBfJYEF0R"meC2,<.2_3sbIL'UhdMgP;ejDk$(aF(;1AY]e#@Q^=;FbZ?I%\@@=gXrfO1I'BKDE>?ko2(#Xt`+$"]/eS@4)$Z#Ojq"M*m"4#nU@e.'E2ulim[_A*7Fb47c+eYb7A!<l-V*D3.NO?]@jO]!U]8Ss%=kH0eh/[q*pfmL5oF)=G)LtaT>+NSE^'Ko5phT*=+Mu4blPep61tZuZ4VBJd3MGb_jZsqilhW0H<Df4eV(W&>q[Q.J8PG6srl'=U%<aUucG*@^OgO1?%Z!"KG95No'%UXN-CP%R_P_0SF^1oRtHn^%*IOO@K\JbK%I<q'iBe+J=BqO)[*t5H/Ri(L3Fa8&ro\&o*6bj:V%hBG'>KZ7TOTs%O1"8&?kL<rCKn?NI_k5lJqY:rs2nooBES,2L>ffI&^4S%23kj^,rn`e%t?9!5r]k=erclJD<@3:)U.PeSnL]#$E%O+dLO%^5uR0os8?SG.rlNbD4@!@81#;9nRkLCkEL#O6)B6!H3_kk]2IcTL+Nr]#>-CUtKbfT#9mNAj32er_JO=ff?\mPkCo&"Y!(%^hLfg2JmlQ6_NS!kU=<]^.Kj.N)eoe\aQ\U[=P-OA=J[U]F*b*JRD.'Z?-s$@(q>KmYBD.\k_c42.Ac274n2DF%m,3DQ_2nk>)k\%?$\YH"iGL/[`!aQ4Wlal95/jX/f(gQ(5^A6)k+D9B-1LQ]2A24MV?nn>r<#^+s5PeCQ0F>d3m-8deF5a7jcg++k9RJWElQ2#]-EI%DK`LPj1T4R25-)UEeKEr1fS&>]BH*J\S=;5F\>m^&JaXHrk\HnN8j&fDGAf$2aY'ZfAi4Ejr6O",7-t$""<2@`2X#2oco>B@R]ql%*HmU"2*9^-s!@m^Yq;i#@.P5)C/"rAmos'dS'fn<WX&AC=Ub"E@U#+.\?pT6Y!uIh*guBp@:.qq.(6/Q&d:/Y$+r/j=G95qGPt:2%-7NUc(>3cc4JPR#&E\H=<n:"MJi<$t@03.%#2B[m\+W4N)7fX-5P<2T7AEk/_MpU3fB0k6*<Irkm/^81c,jR/-W(YH&F6>*-^MM\%NX0$:^XXrDmRncerQEc55L$6AS%`ru^q=uO]<:V3;\:)$>on.Qnr.6Q@D@<aqfL0)G+>k(2@=Z8bLQ;IWa,XS#$[9kr`_R\8F&Lk%,Zt;-R;I.)[j(g(/c$\#$"[H=T]:i1pU<G25n39B@dX7"kpMq5Ce$>^/l])@=`R.,,OC/63=!MNYT7d\/W"ut7),g>p"En1M]+!e%0&XlP>-WfC'R)N<Ha][F)*fdb@UsobRjs@rLpHal6jL_71q"/_6XX^63/EuCAo)8*KCnWRmoYeQ=Ue=]'k=5?q?)9hQ21OBPH6`(%S<TulT-?;U@_5E()s^f@U\<LCTI"I%0#3^$"3*@3>Wjl1))aR&G<Zo_0UFp)=t[`eZno:*q/LNfiRo@Ro=kUBR-nfC@()1`'KK^Y%+%E61SH,K7c?0g>&F7^9#K9mT?=VG$n]DdK%?ql.LDA7%M-/$$#+t!_j<JtpSpG.?ql%p_Hp;3l-McjH_H7[2R]:YD(<eH.$4&HJ%bi9YP(5sfVXVs:WX*s%>9AGCX_H/*Y$sLI9M6pA!*h_8p+[K(LQ+WgV934iQ^hm#@"(O3?*j;sEDHoX^hKLWt)l<F[;^)LqTI\Bs%Y&UfCgh&D3HTg2E$C0^3Fu?emK/*#t/hL;l.d*rR0@^p<+[%]ldms1Q5rQ7<RA%MP.$7#n0Q'N8eFY;1H<WTP:rUu*5r#AU,[PcQ%R[@PF#<4<-9FWDgn&Bh>\j+/@\nn%k$AWC]RGs5LWmoLi5S=5+Q1TGFg$q_1q.Ymj()1Q5^-5Qc/$DicW2h>6(fd)RA9m>X[+h0Y%><+R2/nrN(prm]oZh05\o7j'='s5]`iJot0<:VWG+g8PD"Ucauf7P2Z26'(DSHZPDe+!YQYVW.Nl@dZ.:37MPUMI$-ep_QY[pr+>%)oU%tiLK*?O(UFINAK-=bK-/dM.f#0$pJ;cQA+.=NZOYDU&h;8gVPkm!N)an@LWnWjgd*GS>Zp34T-F\*.5T:Zd"g.),:f".GB+5%Rcmfd-+HN@#YIeQggL5G%)4;RJKH?FjLT_uLIIE[AJm;Ho?eg+EK=$'l#Se<1_X+rp#CahNTdWed;Q#ap3DSCA9^pP(4XhQ*n[sh%`cc_H'RpefXR+mT9[(.E_isNeb0!TVMGuso\E8Aa;r"V*lT@RFM<!D^X5%IW8lg&%)=gMBISlF)[.'CKl(HPHjHr8:gEX&FQTg_2%J%(Jf(f*YESG5FWai+-0e3qI.Gn4@O_@r\_&:#P`Bqa#72_.<U-dA>nd)9$q_^RO#c:Q-8AHjr.DV\116euk5%=B7VV/0-K4,SlO%BbEX7e_cNg^Ps`'$I%SO\-uX?ru;gC;mbHm*Psgm[q_6*1jL1J0nXHK`<Ua;(DEp>g'L#=[`6-MaPe/ZO/LkfgO29<d^cFr<OBCF%dEj,O2W<<DV&r<':@j_aqY8Rqr`<&Q>WbAE4g'Ji0h(6oeIhi0*u#%-fZI7Vdd>_>1;.XfD:fOB%"$r9bde"6H;D-WlI[)Tq<Qm`%B>)Z[J_<O2"AIX%K=j<MHPNE?.;51O[4KRcPCZS[<-=mo=+nA;nhGY.%DFRd9Em6lB]9dbD^Gb]=*s),F>QbVP,Z'`R4!>BlSrR&%fn)4.?EtkRjK*>bf<l?e[aJ;(G\!jG2pA:.&_eF4FG:Vs[W<>@cIaK)qrFS8HQ?`tm+/4390L+'d>fenost1Yh:@d&mK0`!U2?m(%AYPaISo.I<<fNNXNECHaqGOpM:prX[7;A=j\Fp>4%S!^gr`4C"qrGioX^>+'i0mAgDuV)E?7,$CBJSbRB]:3>J\'/^]F-IX?PXjn%MGCdG7TH)%Q[3o#:jCT5*]ZrT(c_t\NL7D8KBq>p.1uqU&admgmUK^<\&CVB-^mM.TeUAc`g]h^Y3&G@9_70#.\:kl,6m^9[U+Hf%+8^2fmr[e0/;f$<=fjj0NA,!%Pad)FRD!8\g=A_8T5[2cgK;@\%GbK?8KcMUlBkTI[?;$#5C"4nhVf&UDV,pMl:":K<@*]o(_.&V%D4=l5c6nI4-q?\`!@JV=CWU7DebFYEP6^B`IIMU:'1^.r2K>\9FtBEE%LGA4lmLCI*0+ZZHF9[3iFC2L=_BpbBlD#C[[E#$7a_rA%]3l]iB[QP:%K2XUmt820EMUjRFPh#3MWA1n_J]9Z9sql:/&'uF.JGkr?+k34"gUi=^"c4.#@S,bPpp3n`9)p!Q,,d``1te8(rRWF%VF$^!.FJ3;^7d%++KAB'm&oT^cgWhIH_U9ZMdLA=:HdlTRO+G69:Y:*<'B/?D6<JM29+Un?L<Jf$q?u]:@5^)l[[5tV>L)?r2u)!%*GGUlP.K>]1ijS=1Ba[!Ogd.$GR@JdN^LO<?][W9e#`aNca**(<qDARQ_#-D_[9b]!eYRcE9\ZmCMp\(r`l%W_/X,Jk$(L6Ok/<;%cZGlph;kDET:A[*(8%YnTS!/KQ5Dftb_d"<qPhVK0)"3LJsB2@@&DGF_bjKCF)>,ta7_XhXl;h&HrgQf]>^&&j<q0tmC5VLFUs<4%N53=J!NUdW_`;@]R+Xl9(q/CUn+mDpWcRE<R::^?C`,ES)B]+)f5;fCk#"SN,9rOkWTr2-*cg"T<HC5J$P^tcTHuB8U9ocZ)>/rF%RY7Pm#g`c84,^"gRp=a'J#O\2/d(]6J'crYMg*"<3DG@/j);GumT3GcS50Hb5!HjJ4&9]cLcM)]*R[U)2;Gc]9ST"mNHO!U!%K.Q%rHMm]f<D4DW"3AZQ8FX*KtgYeTQ]0/r$[OE9WkQ8,=8rI-;Z@K6g_-"#IURdfPQ+?'rM.Da^Y8/(<454>[(5Ak1uTj?`NK&fT7i(%!p\n)0o"oTAjNCmk(8V.TEQ&G8HQ2c]8CoTo!qB;,Mq['1R/QgPeO`B<FW7>"Y.33.606$@$[@XNmW-;9-EBL`cN!;Mjl>Y;1e.V%4D_7eQ<_Q`!cob.1<#5X5\^*eIP?c_N"eJh'oQKS@#DC5U\V/tQ%*j5RK!CZ[mN6dcl-P\Rn^th:b?Hh]+lU9>@J)06G9Z5&=B@\%cD#>WY24%,Kfu)64u!:q:peC/`dS>QM#Q.`g5g]5U&O)k=58E6oG>3IP>NdHA[fDDG,GuW*#YZ0M-iSi#XVUErI_3hXmA:-c5gjB%!\lLp_!GTO!'Vn@U1E_?^;OB4$K<$d8e;AN2i?&DOpcT'=`dV`Zn3Lqb^5TCMnBU]P2`Tn2fa@:-o`upq++A!r"dH/>9,O(LUJWE%M(QE=.GcdF,B"8I:]?7r>!+3meD'!oQ_9C&k<Cn"$@hao*63aN`re5@_"kDFH)opU?\Lju(,=:>U/>MEXC]0uKM\M)]US)XiHR"U%7KYJ#l+@AuIB]&SS_)C2LL#@,/k8)N=!KOkpDrB')mb*@G5>IHW][5p'H7GCeCsq)&/=Y2:Da$kcm\AF9HUMO*@?Q'58uC>bQ8@>%=g=)8$?2DuP?[]4:lB^sVQ2\S]NUFRGgW;`c;gO="0Nlk)D7NBN$@asP`-.2"R5$umAs^OMasn#U2oaTr-E-p_-L#0UAH93*ae>_%CAR;k)-W).b2Fqj`fS0nR9A'!gcHk'/N8U4rsMDT8?I'S>`ksjM!KFJ5e+M`it7O&aM)V7/Z,U0Rae:m'mnYV9\p_t8e+O[`bO!"%qf-qU:JmP!^&Ue,\TfMG+M4i)IR<Ya:5j/8'1^HU-ujdFG?2\g$PQ;J[/G4S@*DVs;S\N]S0jTpiiO9jkqJ2eJr`c)RM-K7RKC<^%jD;8[AlneOeZ22SQ=$0O,Ks1#;cW;#Q+`Q^dEn`/VF]6X/>8:[B!B(B')N`*-)-TRHi<K):K?Z[;C<3_i?C7SSn8(5X9@9aWMo_!%'DHeXX,+IFX3[0IZl1BMSI"UUqegc3&`6=UKQj0(qo!G?Z7r-7E/J8t+2#o9-I$[6mh4;^?%iQ!jGEiDm4a:/?nY<tP'g!])Z2&&%g@J$1jZmW1-8DDf<dOEW&W^2u4R2ZP",OmWr0c1t+^;DbWr5EBbbGElAS>7fP4J>&R%A@C/b1O<ekL`?%H?)JCs"cpNQ2\O-?R*E%5@4,AFZB>&Qg3\*@qra/?ZbKjW4$'$$1(-+A\Wqjd[q+7]N%tX/[`ODjaI;7q7E0l)1p79Zpk:pk!>8Zh(qFHq!?]3D_*A[RaMFf%L!Lai578`nBtaQO=?"h5i0\2*%IDPDC6"<<m2YaFJ^f>sNh[QkKAE287X,PA[u0OQ4?Gnc@#7Y0[k50"U-3G=eS"Z8V-3@<><1C"%=<jAX5.?sdIgJ!#gdLqJ)sq,4e@VrVlY=PI*Pa'U"LO*s]\U'SHKJVZX,S=.Xai;nNP)[6Di;BMVXS;2JMk+cll5lMbIUr;lt3pd%0IpaW`(:$gj+nBUF0hG64:GQ;q<IZsEC^ga=Bu63%u0#knR<Es>WfqI,uf=&SF`:9aGJ?`k.AW1K*ag7`<'o+7rXQTSjh8&p,fX)%TiV1UbOL+=1Z*Ft1b4`F$CJu4n0/QO!i2V,g'(b2#h0"@k\;YalBc7o_guAjZW;uGDq/dK$g9(K;H5C[/.YYm["VtI;k./>JF)0T%ZV*dg%pehS2,4V;QtkApNI0P51P$r*iPdR63AP+\2R@G>pb&kRE8OAADhg?fB5hY,c8Q=NR"@d]/hDgYK!&?A6h3]fSVrgPRrRQ+%38*(9!rM5-,;rVDAY57Pf`QO`QN@Om74A@/!`]+'FK:pZ3Aa+i^A%]/7tmMP&P2Hf?QG3%XNjEI0)spe"&MWk<tSV3Vk&8!?P0;q%8Nc]:Bj+[qYYNF2QI=^"]JJa6E>NcmH[2IiI/KfS2l''Ap:B9nF(FP[U6mcMn?GW\M[FV.)V5<TS-q_\YtZZV*<*X[C]Mnb(NthD%;tfrjcY@P2<]/-aTh,*bm_@shDu?.o"6U)f3RU:LY=DQD36_!hIC$1DAk$6EGYac"44>L#(h^ETH*a)CP&SLnlSR&h/+GT:EM..g%)XH$\U4'r<=d1[71N`O?NYnjd3@8ta19T#t]R#MS7;dqs)r[kPp$0k0Z)t3ap;7PT[H#1TY,pc?\R[(5Yt)K9)^u+cl&\^qbL_R;%StPUE>*a?QEnEl&(jm!0=UV[`,I?#]RZ0(=liZXhDh\bs^0O*!WIOjUbS\KM`V3mq<H@%m=t#obm/eX#C:Y@GhLh:G-n8QMfK!^M%,TVtj+YPP\Fe3L<o-RBT5FnjK>rGP%55t3(FO>h[KQM]?QoQ\-29K7RCcS(/3O+j-PoXpO^5/>\neLrmMMY1O,uuL9IdYsca$.X*%pk?1iia0;SHpZ6Z_bAT"a2aM6JNRt<3k'g+E=>4s_]Dg#6U%g.LoXm=j!c)JqhdSdkS\7<-0D0ARd]FcG/hkl&8H2W1b\_BIg[84%^+F7;"U4bj<2mN5'R-r5S=;q@k\9-es$)"s>dPUWDGZrfB<Z."G;RRA&R(&n2['O[4[B#IFjTtS4K\=k:ba!`ajD#[m&rZ&lsn9+%c`8O^aMfG/;cL+\,Z$OuI+D@NNfpckEWMb54$:j)(:0L/`R4a(7^fInIUZNKmLcBf!)bA,^\kCU+i?__7\pbphk`QGVYqOC_st`j%FI7rWJXHcV\o,)!"-9Qu5P(mTLtG4OSS1:%nKKSA@<#FIUT6tgpmX*#:nl]lO(u,aGM2Epj059IDV<'/>pUUh9#^r_I5&H);Ia%&%"I>Oo)9JqX-aDp'd8_b2G@RV/oogTFHdmKN;'+/J+:XkoD'%'?/6aXdS@?>4ZP5iN!5qRd#`QoR]Rd`=r+fVd7nb4O=n$7l$&MMJ%UBIL&\([^p(eVQqNFhI!E:cZub)t44Fb%F:@5Zn_9!uKj7_&G>2-FeA)KYa-=\:jBO2+lZ0VOsiPuUYR4Nf68>bEsHQ).ErVBI=d%:h!DaEcj="&Dc%3:2lk0Wl9hTHj=)?)&rf_]fLo"O`*\4mrjG"R+RfY69jIC50%W_KGjA-=*AWPj'/ms7=+7LdI9Z*B3'4->676)%4Q@BARnA?ZmI?H3C^+8cI"^2U'd+*0n<8$.(+6)V,QSIS<ZQ`<G)HDf9dSJ!Hg=7c%gahDXjgfcH''Lgl.<bO="#cLs#^-Of@@5%%@JcD:NhT!4ZPHEoQ2DDtBf+grIYHuEXQ?-$+)IELPeTj\&J^oE@$@+9:finmKA,%RW,S+VmUF,aMruVYE\%L2gol$dA/`+:Mn=^Y%EkU1\UGO6c?][du^`$(X$jouT*o>$ejfqJLN)o&=c`oha"YN@=`IMh/iJMKWMCQMdl*F\ul1e74H=P/Z>dhD3a>2;K+9C%<U=^d_%_60c>LcK''OH*QXRGQ1ie(flk@om`7\_*5"CEhe=Qj?&qp-#eU%V!,?JcffSH-]locC]1iS+54s2o4K+A,V/ip>Vcd>3LIDR,AKI%9mCK.mdMh6/*Q6oTj?E5."jpXGS,XY)_aG_nqD+JYW+';,VTt:`b"T2IM=LBZ'dc?J/tl%hVi2V3<S*\1;Vc9r+1cprf^4Re)Wmb%Uo[=KW_P_dTX,)3a(4K_<pn0b<Q:!6drSa?]b3=^Gda!oMVV\b\>J?&2iqg6`o7d&k/MF.'Cjn^KE82`^q@!]r@;94%b/miDHX,@%6\DS%Fc;X:NL(a?$s(ghM^(<J7J,k*;n1eRGpb%m`M,0E]qgo*&be6qpm^YSif$KVUR,'.<BLToGHP7om,_d*H@;dS/!ZgK^;X*4%XMlLZc#g:NMQ<5W[Fr@Hq;&[IFB$XoBk=';p3!R,kR/K`))K?(j`SY5:gEJ@A:gQ'>t&c2S_J\E[cq.BWKOta9;K^%.1#S"m$-LJ%a-Y3'>*cMbXo_&TO;_bnb?$6iS'"mQ!TRsrG+H=gCo'j+#JlNoM;>l>b=CrGZIlL3TKS'hORe:PVP^Q]dPFa5ekP;H<Uu!+Ip%tk%k2O&o<`bNZInSAk/:M/%RN5Cc&9Ca#T(gM<[jc:W7=)Ao;1Ga?ntUl#,6aJ4/mPu(DmT8f<(GFQ_J6QV<0b?'/O=<h7J:8:Fl()<%cT!X<=2SV+e5d]/GVt70BhDD.b7D!t!\-,tKC2P1]0uLm=#u"<U0",sq(6]QjEDJIs!9*NpG^?CVbfdf7PaON>6U</0[4"@Rrnr4%7q.DF1t=ID,boS9l0=\&(N]e@P\e';dE^d;m'8+^Y\AFTlD`$Wrhr-"FTBd0&,;)_;Z3Cs!.mqm;`::;fR6iYo[_=UF:ju8C5FgC%dL0G--K#9ep$8kq1R%k6pQE^2@[8sZP>Qbu>r7uHh)sSN*T<uWRD[(@b<eW\:l5MJ'%OZcn^i1_\iZ%Wa;2.4h-Y.Vl2H)\O3@bW%CBXP\DWnXq+R(Q,0cZjk$FA[u"j^d)lDsN&8E<l_6ag*lD*1smd`e"\:LNKJW`bQFqtk:1CK@C-(O+DW2c]1N7n>jO-Da_(R5ck$%<s?[2nrLq=T[Rh*&*bQ.MO4i-PnTTBR`?a0k!lt-rE@p`RY26:&bQh";"kZS^Xq/mqeTKt5K%/j3cX-*#@#HALui8Ulm*OW<pO)Y%SmiPubXAk1Guh_Ds(ji2)ea0hV*fpSYUS=OX^55,1V"@EQCb+#:58isL19C*`\H4m?+=)@"LrcXZrWW8Mb4U1RHrB*JAP!Th<j2X%?@/0AlW0L9o)H5JC2VOp'B]2a9Seh90u3KR'=\rJJ_ApK.-$ilPk,mp9c$S`:Q25e(GC50=(/AEdtUMBUSWKa]j?KA7t8k5?e\Ek%m>=,g8j+"'UuDENdXgr4/RYS48sJgnflV3p'9,Y#O9rL'p[W15AI4-3^LusA9-NYt'$\EK2`FLD[i]O.V5a@rHLV^k!JAp>S$*RA%VGOjL#.(J<*8YK&29AlXYF`bX\8K_8CMeoFS6.21J@a8JYu,GSQ)PMbj4=N`F@chiC@MeA%NKOiE4#R;X.?\eL?V=N#D=D#>b08:%[,BGhd>jU9F^eod[pqmISq]f-Fu#NtVa7lnAn+9]-7(c/`SuV8"g;Mo3q&Rb28hne%?,tZ+7)"b_Z^KSI9l6X"uW8Tg<CI)"CY8m%d6+Rnf^&-D*fNWhhH[[ljMYbtZ//=,kJ()AHP\Td'AHckn_9>0:[D=ubeVq2]8o!g#4,0FP!2)d&AZE7fY]EV&aq$PlGa5O4hZfC%/tf6$SfXU_L:?B*di#,@cg7;fgo-^>UoEQ*0I<+uU+4]rQ('^fB%ge#H:HQK`4-M!d2IHs#Go(>+k(1Op!ttoYnZl;[s#Gg1a[T1%h>L@JIN:C\@)b)j3o7?COKl2d8*d$i(*7_;9auM?a-M6FGB&*oZkOiVS.>:%Tjan3VRc(qoNsIML/>"OTi>_[Nn3(,\:&G*C2lA=%0$15Z+`aYL38X3Pm<m)f;?Uj%2g0W5(7c$'@\(r4<GXDe\#?KIjnsqGK;EFieB$oO1L+G-RX]ObF6IK?YVt=A$8q??@ZHuYc&VUg%oW>lg@S\l[/MnbB7?b?[i6,oc@[Bl;;n"t&3U!R_VDHKIPfZf\BhY&J.NXC,X6)uDSL$UISh=h(7\1,AouHrgX$44Y1lF^Qegek*%`4V-#p.G2pYI*hoJZm6<RV!n3mb1+BoQCnQ/?V^&[@gD2<WSd(SWnk,g)@7RC:3HS)F1K$T3#$g=k]pi)ZSOi(K\:qNChs5q)ZK'%?:m#tS8N]m'io;fjk?QAM78mdO5JXp`6Is`g(aqr5g?ic^;[!dlSW7=e2Thg=U/2[)dt33`S""+-d]3tb>!9_@PZHlTD6>X'9`LX%f?CXLZb16%!q*>6S!^a';f9Fa2QI!Gbq)?;M>$7B2VP0tM]uBgl2$atE\MR3HR6NCWP_P[k@>R[ko0P0pIXeE0SeC;0e_p.d;\'D%eSj@#7]H,AQEe2pf"\dIogM1!3?a`cDY$[<<0^;9m`tp01dD496ZkA%6o\4ddA:E,4Mr7W4n;M^<>VO>&tFoF0\/pXU\Ipe"4t*$%IKmFZ5M/OU!pP]/(tJ4Y%i;P'X!W:bi&$hd<H^_6q!;=729SfC\4W>sH2Ofnhs5IBlFAenl!rE(&gK?f3?j13,MadEfYj:p7ZR8T%n>*Hg?]e;Wc9mL<!a3UEp:+@r$ETI>6,R5Xdp<EEXNE$`R@G.e.l:j[-aOD#88^6tR@(Qu45YptFk9UPcHRq68_s'j8m5/um>=K.%VFp=r;uX5k=b5Lt-JAa$>8oM$.iM@*:H7h8=(mJr^_44:lgY]38f^DQ$u.<CB_<\l5>5&V[Rpt`-J,i#+"e[=n,[ga-2(hiMQViW%TA/$7Hp&(k,b5M+?;)>l2;Zaa0MJZ9bep\oi5fKL#!_p1CuP)&o2lK`k2PoMc>P\dq%(OBB+b4Yj>e]?<"XAG^P.CM"#1R'_*FKg%U4Y2KCgC7KqXDm1`*8^CMWdTNs'hr$%Fin#>[+dVko8@E#*\&X7Pu?I=LfS+]3\a=c02Jo$!,q?n<#a@>\0EF7:n2l1YY`%kpj1a%9+ILJKQuJlDC?DR`5X3;TOPg`J+^P$UVB]@8ql<?baCGkp;P7'kl.=n&0e6!oBh](j-S,1!j!ICU[E==].2P\T-"XmH^jsmSP/=J%r,)GpRFS+=@Y_i:OuJ'5A\@&2;]P"o`Et43KjF.H/$8fIod@>*q3$X;0/trVcbL3[R`"bGRJVFgH^_Qg,YlBE(kuPTPISLF-L(B8%Nb;3$*=D>frI]IlqM=OW(]0@#D/D)Grn(5^<`_hO&F3=WpJ2Ws#qu:/lGK:K/X2p&\-6K5DM2()>lLCo4[RSZ:[QHkIR<2::VBHa%p*0D,GYe[fgn\a7J4*:]j)s<Dl3NOoc7UljS.B''C`t(k)PBbqiI2-Z7lWH!e?-3)0ulNm><CPJ.ui.e="S;PXFKWF5^&3%QBkM$%KsYdAHEJ]#eE$j'8bVYk`TfktZ?WXT8eHWETl?i0mFA@7,(]*hK"g-s3V"=J!+VEemZj4C*QqeE*_o@A!*jejq(K=?*KM5i'1@K#%g>>PEWjN/rXtQmi:ro4ghj%D!n%1I_Ho5h>.U2GI)Kj\^n0>?04t_<%V&r>0PS^2b6#-/75;sebJn32YYHG%=qU,q:as8d`G$64'%C@^75NE-GG=F93ZD7Vm#%+ReSZHp*2d4.[Bb#:EbU`hE0Bf)p_Oa3\^b*3VU76/VkGM*3?i\gd[)#C>5@N(:dShaOS=U=&f2n<P;%iCXF.5:P!`P?b^i9JBu_$c`V*"gFfa*;Uo;!%8(+!;`(hI[eO#AK<5/@$m4n9-'Es9l`nKp7WX2_E829O7#1XTL22d%&G[]0Qi?;%$[&j2_c*AU6nh%Q&'VF4/ED_>D/tf[O,B[#M&3Oa7=0WWnMIjk?M1pAe_X3q&)C=#fc:$nlcZYK-b%MIoaYmm"37=)a2'"`VP<A/%VO!!\j7%44HRmf<qH1B+gk]d/T@Gd%jbFc<#\SoHorV9T-4H1$0E%4hnc.pn$75qLM`Q[9;8i!/kiKH:TUl^G^]Q@$+)JLJ#+4\S%J]4hp9'/^>lKltQ&$N=YIRQp]hRsnoli#GeAm5gC(5!9!Gm,muZ[cc$9dc;-H)kN+Fn"pb=V+mrPBVOZYtp>+#%@IVEVD/'U)\l0%koEi8g.Rc8WEt#;Q5ac5-ZtVplFEAF=*tj,2@s@p<fcWNQ+S?I"Q9N`Jclpgf+TA8[4nUN@,9>U!,2c@<:(GT.X6Dr]iH2/[@k<]%2-D@b$=e_`g)_^D77"5(@$NO3J>p<Go7%sckA!sDT-^k$s0B3do7M0eIU>Wm(2j9Gk`l[ih5ppHb*SJ.Q,Mlf!Y[L3s'd!T%:c>T%?+UM>10G[\#HZrmM6Z91fZqPILomN:R3lYKVNGXV%ulhPcjK[FrCd`],cX"8Aj8YonS'mD@cVUgZ0>DkN&Qe,3[8m-U-J%a%9UP:%-Ghq)8T@#7TRm'*ebabsYZ#M58I0Y*ILP"q(X?3r%Q\eLQkEl+)R/Ksfq'YnbhY:/#!"G4=;/Pc4MEGL;..Sb?m+PKqu\@.*=p$&%,dEgL-*N``0[VrcoisdS"'a#qVE`-gH+d9=n[c"2&puncmZE&?@Luso'"0Rs;ZS-cq1r5G;Vqr@;%kl>0M\5%$QER@T,n-W(OJ;W%Ue]VK!pKn&@\T$Xj]"I'b*@N@3Ei>:1A+M*hUujL3Bk.pHL#PI-ntX\X2B7Ec-s+5"IVDX)ioqQ`+XdEds@a]d*[Ose>p?/X%q'q%pZC2qq"1c#Z<FRkFK2gB;;G]s4D'=$EXlN[cLX4:A#;LalQ[cZEh_69jQYhUW(mufR>iP*6\+/r!lcQ/@Og6I%%VKMFMkZCnOT@D%HjsLb(a%?_].l'$kq<O=CRE!J9Bk1.3/CNCM'I6]gjQEN).LJcp?gg)cjTgI<Dr!VS]SaAaCXK55H*q@`;YSTe)K[1EIiK7/QD;E%\mCoRS\-Z],aPjFnpqh=^KI,24F`X(la8c;_]8$YBIS<_;F&/7=IUKMB9P&UhP$MI+-e^X1`8iR#&K[$QmN($)?CT=+eJ\+e!Lus%IU_T'kYMq:4`,WorudFp]h,'AHqn>$6\\!-kpnJEkn#/1'Z/c?MGSh>NU>LK3qq5NTn+54%?!+c+7,6<g&)T$]`W:E/Ht!q!53:d%f<W"\CmeqI/l`r!Abe)WKl?qD8u<f+.8[4Rj\^/qqG29q+IhqKM('!)D!9Wh?/K";`He@LleM<tp5Q+-Q<3mr$aWh(L1HfRE\-Gr%D):*=Noh"X3Rbdt^/*E2@DU:J9.S#^n&>!BS6K!8o"0(/4nDfj5@Fe%.6C&dLrDKdDqi/IYn1]iq)@`A-#J*2Pc*?HV.[\0cX!!e%<r>M+BS?+[`J@9A7O[4:Y?$/9MZRGr*Y0*':l*Z]1WM&)7$Di@:t!i[lq.q6I0DsuasY2+Oi29q(b?J/H^o`WnQLajN?ra>Y>(@r%q_)P.YB4X\k*]89RdhdS>!icE(SCZ5L.F:[,)Sa(C@CdgXK(]I+Vl[3U8:t^Z(T*pAPG"ZE.Ed%!a*O'W)bKM^&q>hH@Laqjpdoa%gg9k1T9,8[M6\7o>(1-D2j96K^sF)[RH?M6hRW"_,(a&N^)P3FS$hqfY.`l3R$,kaj!"GofN?^JKnHEf"6jupWr3X*e)H<rYCWna%T'&?Yf"fFb<iDaeqk-r*UlqNJ').@kU]3_,VLF;Y;@_UDGACu\$)->TY1e0)SrD=s\iUf=U=IX!ip#U3oPV-8</(6(/fp^=\c'ZM%Gp\SpH@qPBU8Ipk87.kkJ"l>l6VCA*?F(ub;CcYB!E6gf7!21^&OBgbfPU`4ZkAGjoO@M!9,iq=j35pU_eE;PI@\F=c-IYmI+b$7%b<CRmOY7L4]&1]h@J?C)-:dKroiG5S7@$VB>n]LBp4atAKPD;;eqiT8/R(d4&\Pl%DAKSH>L*@O$tA;Nd`X*07B6mhq5S@aMNbBe%$iK+A@EO;@(hCS"roHjV@U<`Hi6,F.ZVf@+*+bSKjFW-)O@YlKhrrgRiuLCoiLb;4?]sQ\>rB%A%VlACiO;Y70G48r&/lirjf'><%\X\<i.@YlO586P$KiUWH-3_jOMgq]-IU[=o;"lccc"]#.'D60)QI4MrWu=nE5Hu4Rl+";*BQIEjAL"Z)n\YbhomPS()9DQ=O+H</%,C9^LeaCtUK6>gV/?!0HfliE'd5#Mtm5tb4AeLU"7c9OPHD?!:Ns>'Bc(%!<9"Z6(#8?-&"hr`M$i(]>/X/cDfR)6Gr6elmo)O,-%L7ShJ=Bf7CO_mU[3FLnsd[d"<)43Z>M8d?&2Ycnt[fT/R6jcm%MZ."]AM>UN"LWKPbrueDd5aO5OLuN6L`5R)qmU4W.\^GA?fP_0%7-M'l7?]t+4f]LSCp`*/m2:YYLs7+?o9p73f[m1hZ9E!MCHIi,F?6_N@Y1F`S`)9K_eESW,UhYHa9^ZG\;HT6m*DP(jok=(#2=2`%bj=2sV!^Ki9d+nmis%oXR)S7dHes\*IBJf9m-"K$YD;#D.NTG#>:rf2/K6E=]0iaFBE+l5LZuAIbGH.)1`i-)1</ZhG_Qd9"TD49%"ADd$.)2^pEm7]dqUANl\b-t8OVSRpj1Z2pJAlJM=LQkaKk6$UVS.YBChs?4=<qs/`fH-j'bs2uKiA30(KP!:nlsN(Y^@p"6/C3b%EM'RLpT_9)P7EI,AZOD%J='L+ETuN=D!damVA*I/Fk`l:je/8bH7`PY_"2#a:lobPc>tB>iitodFF*3Z0^Ptgd'FG4,c4)uCXCkc%;.dc[Ynt#o>9KKG)lLiE4+=-eKe+-V`p,VR.'k=SW9)W&LqOP4a^N5p^5gNZ@qudT]_!+!jbNjn]f7'](&<P;QO<fD3!c5s4Umm8%fmR<J2@S]K3'R>MSQJF/-Em6NdGb'tkfD'3/2i+r<n5lO6KIFYc=*B05;VAg1rMlR?;daGY;)&]SLQ@3oT"s"9CFMk:Q?^B!3&bT%r-jKh-B)dt_G7K.nc1#1gT*3fScVP&NF`k/MR?;gUrLfFp4d-%H8GId)VhW_-.TS_!hVo0"a\O>oB\fc>o">`M>8c?A=hma5S&jM%q5&M6?;;m\FTQXQ=KG4OIb70:mjOn^!)K.?Z]nD`.MfC&S/,r7kgH!bX4ac+]9XCJplg0X>YlDs^&:%Dom)0c\]W:e6Y:Q8A6<<c%ApiJ/;G'!4[N5NH;^&@k3em_*-HX&EgO?$Br5Mm.$-2_g$M`%cUL+DQTB:&]kb$jigE#(?K?_pp%TNB]5a0sVEnrsIR5M?TTkO([%hY)sNBAaBpA5GCTc8&R4)b6`7X-7H0fNk*/a%BWp[D(1ZXDR?3meFJ@5K$$0DdTO^P,JnoLM[BF1.*:.Ga87#b+*830.YN<altFu%%`U\R?t9MdC(c\P::?5XVqJ%sDT/N!589aggWcHSB.OO2btcG]2%Hmpo;]nSI-8t828"q:O(3BS`i/)pYo5\d'l4A(#j<57jcFJ1%)U2pp5YW+l4WOp[JCUp^)mfO\=RVL`X9e0>&-"<D2JWhZL";BKnL5&9/g$XUka$"1-X`(8/5J<h,Xn=DkZ5:eq3^LZfuBHh5kO*H%ogi_C)bhI;.d0W$j!tujOX<T1MJ'1Lj4UG6M\V#@]r"S2`F,X[SmP[ON'OSLhW!HeMKH.kmW^0MWpZab'dRR+S?^ACq9#]F`HPlb%]<3^^V0d5S!fanV^t+0+D)68IfB=m1aR(=6cF)nITOGFpof2!f^#*?AO@GdC'QQod4a2>E&'8!Da<T"Cj<_,a(D"iFLZ:+AWoQm"%j'_JH2:CsLA*L[oe=/ih^qK0'L1jV[o4:a":<]58cVs6mC(0,iang[4FK02mO$BFdOp5K]!'e][n[;uUp@NhAUYLS<DYM3:m=WO&%W4GaU2M$Lu$k_r)cdt#4-Vo/5$:trsle%ar2j^$X=SDW:/!$9$HTIsI1@9<-8Q90aO6$%:bRM/HcBaIL!X3]@g!\CZ9gUCadE,@t%YC.>lW)JJ1_;c;SSopO"7fd^7&mH-_lUiC"C`jdSELR3F&/#9O6U\#aj;k].NDh<`g5a9d(kV(4Rc4WL6?RadloFB-OK)e`@Ob:N%.oM+^.pGN(AL<1U>OT+oUkdW-ec>_Z2gOpXC$`Uq"(beYUh?Yu#<EWRU3\hA1phLH_.r[C$OaO1fUtg+X;j/=.C"o@K@?(&.3L'#%7H2<b'u&4NPniTNrAd?aP$g0,-jX8rgDocET5Gh..a^=a2H1UrF3I89^(0<-lNnC<F2AOFM)dYY9>[[q^`XRbFZ]2KSCK%4qe""f%0ok5P'=oBf.pL:XZ/'Cb"fV2@\h?^%KfhIo6cAr;1?As/_'q$uWTbfOh8Ld<F@al3dc'HRqB]j!J[mCaJ!6cJ[:ddhX%VI[F=*0Q%Gg/J6L9ct#'Nu.kW'`'M-1PXpq'G.Wf(%cs]u5q<.juA=UQ.'JS9Z;>Cgc>1hj(FNAI3\cG!lYc#R!@=Cjr<^*=<?Zb9'\h""OZG%X&`+c3$2id>Oo[d,78"^SPkf&oIls[XU/b`%t*n#Vgg_]F&ad>YE!<Z$]FK6?6*e-?&e4m/Z>6^@'b@5cB7&cJJ[.>Qm6C@G8(9d%SqNZDf$U+_$5V864JLq6E2DmrcC7/BW/7hYh33L,%8g7q[rPR6U2E2<D=]'`*;)X<E_hg_ZLGc]?i$0$'8Ke?o@CK08me.4>UHDd%#2hV5s85EJK;NYG(ZsgU0;@Xkf!=s3c;CW6r=,iT(kmRIe-KRFaKnWk)-a*oX;O;obfg13HF*#IW)N;lP,JP8291]i*QL*NM);!e%67=-tgPJ`]XRRRX\?.Aq,8P%(*uRh6IaoAZd/l9uaeG*6S!WD*mV,ZCUq*Z"T_;-R6:US(CT=!nd;Fl.7h2\(rlh[]\rnHE(`VUk%.=$L`g$`+6_"U@%<fKr03e$/;9$U7_M;tR+1+'NoJN:<"&?TQX67(pMG>[4N75*$@*3`]'&1d^KKp_9ZVTX77A8gL`[[g;BlP]JV%n$p`7($:WNb4@B*#IGc&CYdOMpd)<#DgkdEmaP'O@cdB/[S5VI>/5NHq4^BE=DJd!Mf&L*5d+C).SQdc7,L4Dg:!AhFOr%N"JW$[%HY>Ju)%)gS>J7<<<C>6kZm;-GkB6B<b4Wp3VF6IkGe3pN)R&?4.`M8\WM$!(qEV%Fl@*J-mtpPg;N3/%h_Rhl0'r5=bIeHj.6P90%TM,f['.%=J)6&hNS5E\]K`][8:$mfInGiEMEVA^rjjs$c^g[GEn@-fONA?PGN9oT?ek6\n"X;!8F-r>HYk5QRO)M#nR9$*$QG+a2%&/.uU0k7*WH3dMb7/V#Kf\oiIpgtGL/9Va\P7["+I&A0hoK4p,UqM:J`K^loe<hRE%2$Zg66-7VY=Q8km?NVedo!7sT$6W\a>JtK%`KaOp`@H)E(L;O6+jSRagh(c3h6!]*MP,Q:><LX(@C*o9GCD6Un^8W+j&S4]3leI=EP"6s<ok1Cgd(g4^&h>GDu`Pu+f[%Nh&I("%o7tkKS-TjdP+"?6W$Sn<#AR7ILMk0lT(-'VPH,E%n=4B*rM3u&B\ncr1;$fN5ClZ\k]]oC*!-nR[\sauBOpN)IYsPGJK6b^_mq>5%1eu9Aa0lB04PCgFAXr#2<NPVSR&g.i9>C13>knk'Oo@)#J^qeA+en>tOk$_(&KOfaV8r6ua0EgA]-q0GI5@U:7q*BD"[H50`@j]0%Qsre0/Y_-J3eUJIXV`pCW]7!4aUkWYbE+!MEJsQTX(j)*c,VHf>,hrP*dB>(YOX\5@AQ+ghSlN@_4()PeUIoW.GFWRrA(Yf52RLo%I6:2o.8UuU8,3G4++&<(`-G[kiOV:8CA6A'+]fFjDop*"7<8D"L_5W0[5U5Ro!_HY)E$#3U<)GTTU'b@e]BEH"nc.S3'n_GK:8/u%MQRdg>Js)rs1FCq9DLDZ=UlZZf#H:p*9X[BNV_MWr)T7I[`790-+39#AV%Tn>pl_-UOSO00CRgtZ>n%BPV6*2M?h5*.df&5<73;i%N6NKB>sjoH)14lDfH4qC0kEWK8`gETUXi`$Mmt'ea32eQ?;5hM<9)=#3]Q*VU*W."&<b&^\1_'KMqZ;.DKEB3.D`+l0&]7fVh>Qc%R*C`P<e_`'l]U[#rN7TYKtjO)+$,t6:"_Of`mP/np1iLdVn-W:b"BXt1_TsGLRGrMmZ(GCU87sl8\;q%im4*1@!U9IgfCjb8uPb"%;b<#OlmU=W]$K\dG3"8!+6BQb]?b,I[*)I9-8u;Y+0hM)c0R*KNt8j]%?g>c>&s'dm7$9Yo($_*5I,X18h5HYnM8]sa@Iu&1;5#!%$4=s('uQIdFXcEXA2":i._;`He`o:BLI"&/r0u7tl:'eT*ZZN2$L$GT#sj@QJ0(829YY!W;:B\tEZALd8)<0lN.q02?T15lX2%X#%^!-l(o.n&a]<4'-KTf_J0pU9nm(kTmO+fpKPn714KuKq;OfPPs\5RtO(QnM@J_JWKrRq(Hk3bS<[A@AK*>@D\FQnaB/4KpC3b<iF%X-C(XKfUQ3Z<MjHK.<7+l3`Yd4DYBBDZ`K3[\kNe$`VM^6VCMN[aJ,Q@d3[(2O?S>&`7&R&n6\SAGg#>`ged![EU:_j)jJRSLZZ.%).M9<;oFWYW#j''jY5f7X3h7B9_oi**_J@B0PrT%L!DRhh"QL&^68r$WkmbK,5'A!Cb+&"WIVP[Vc5NA&6gWM#,VCERVFAEh]r:9%5`I9=oIq(1n7UOnMt9Kc>:^G.%97E310*dULrhoL[d-8'fk!i''97Vr7[QfU:'Etq1HmXn;%ou_Z7F050S)t6o:])QV%EPN4l"I`%K"0TFb1.gskA:aoWil7A+-;%KIYB6j(N4KN<C&:3p\6M9gL]7bA*_;Yd)6ok?)4C@@[an1<I\;Od[nBhQ238r*jOkT69o>SkGZLT%g8=b]D''Qn%P^Y`V?3i*/=H[T*YpAmS^cX;.?S0tfec0E%e"]QRH^d<4\E]9LKk71:TN,>:DKW.4nDj7f:^doFD5VhLs\;Zk&b08%IIFhRW<s1HPeTC;Xt7M!*JFWHq0,85(gK3\$C'7M(*9+pBpP0lqLc$^8h]X+]9%UX+LceJ0`aFd=XI!4%ng_#22%%%YK]Gt4Rc3Z%*7*4E<*lCNXt`>U691`?Z,s)Uhi>o(:6#mKG?qoh(c2=FiJXs<8uBFLOjCY\D/Z+JflmoWj@;Jk>C\GY_`sAiO',%K)sei#ZJ7l[%PCe?*U3"aW6t<"IBM==0faG$Z\EiE'#+&&!OZ-0W9kSWOi42In<muUu[&k3gifNBH!#@%*n%/0qrMgcnFEX93C2'8AY@Iah9tenh%R3e&amX'#P:n2hHb<]#Vk/:kiBmj\Gm-d"-gMMHW,"leoQ"L!G$aD"fi+XTqkG]<p.rJ06*^2mg&\AgEOt<9fE^!o9#8Tq5"dA,]%4;K6D>Ote(h]18,lt3sDB.-C+mI98\g0%/(.=M[oK\6^5'0DDnJS@+gcFBLJSN392_HD:7jcU,(.YU/$G/r1Tn<h/W8c+q(Y&][i%LOa3q_WNFhqlERRM`ZWb'#B0,FtRU1*#3YsdZm3@#';a0JeKR<QWEhT8a.JlI;O6r="aWfc"FnI^;*]JoCm+l=,t#,;Q4cLMMHZh%F_^60R#RJ(`.;cbs1(;p`-<L+X48h05@$au#D9cOrCc_F&T\KpJ+8nik0E#tcXX2n;s!_a*t`MKn`)9O[ZL8TmRUmjSnI=@8+ch<%])^&8iR@FZ]Xk.djtnrhHn\>q,0'=e@SWtpqQ(:%74S4fo([[<Q<<5tb01JSWPp;9\Dc_AZI""U<99Dk`jYRoU"4I;[i+kDptVAj%%+j(gRWHa0$ET-tk8[RY@dJ4p3T8Y*`SM2+^`9)g87rP;SXieQNd<Vjd+O8Cn!%8OQYHW<BP[.bI]tDI&!"7[8_,n:fb,do9\cDk%626A,dXA8lC0fTDK]fq\*0[Kn%!kRHK/SHQP;Vt&`V]2X]AqN1,D<>b)P_FjqGQg/1_T/$i4?-H'*;1[l/&+5-FURuYkXHM2@h-l%B9j^fm[N##_V;Q@Z>3pP?f[;d;[<D((ZM$Sq0_N"AS.h+gh1J6iqW&>';148D)@t-s3bcmG^GLD`'*k,^F1X1;*/1:FfYKfVcFF?%bo8CB/-BD*/Q]EW8iOY->mJ45V7VT9SVP9XrnY;!C=hhk6pFGdee'6kXYA<]o2mLuMneHm0#WO7Z7umfOJM*Sd`L<$\FhIqCA,mM%[Q&?6?m@I2rC]lFj;ZO_[EDFF>Al:IF$PN!e/hD]lp(C_VQ5>5)EsQCc9(c!+4VV$&<b`=?KJ])GNLYmGF[F=.JZlkBI]-@)'11P%*LZf'9pM)%cMK_nUqDN)5,k1T`js@0Ams2Y^Uo)bO76T`Kg/I.N3'h-RBIe_K_i'g)s/UT.)-*3,9h@p>8$gJXMDM`jP38)R_15;%6#R:_,,TVGhCe36bI>dV)tXgdBJKao[X!kC79j98c1n)OUNF9mRa)_?V(b-ZPpS%I'D[cGL.,j(.dt!i)`i.tB:BKL;)"FW6gR>E%GE86O797o-<rbSaCDNs%Vcn*#/.8=q;ANe='f8El.5J8)cm;@CplLg\-$aih<uX&4IB+B0`>akIm/G4O'gq:\J'sbDFO7&QS3BC>%c[6<E3DGH<\N7=%RYFS>Su7,mUTW\<*b/=njK=*+Y'ps9^j2B/iI>@n/F.cY%a,?F&ITP/dA28rNIEXR6@gu-Ou&@dr@Kia!382W%Il%rO&G]J2PPCl&/J"klT'T+WMmN,Ggn%@$>WA)N[V(nn28*,[n6,$6Vh0$/q90Be*^j-[5RnDkB%/nD4RaG7\@r8qfT!KtmYElD%Ii>B$\Tis)=5*^ug+T-POFV.4NB>PPZ-u*09mBu!q=Z+k\]PkWcSVg_DU+F5WX>>bC(7G]=Io@%5+[_QbuK/0:JE_IgPa96^m`F7%:JlK=#:g,,iP.],%.d1n;l=C(2)-K#:/s08YX5An^N5>BW9lC6jJr=D\BB.r$.&@p('S`k>5\Cc4dKk.hS&k;49]IalA9r^XB81r%697!mr/8a:f.-/u:,,1Uk-EnlWt,-ZX<G;7EfE]hqPCTQ7%cu7aV)p$*M]q8kef/e0.X")F%7l/cF%1ElUgn`i[A3japN$QhY?+t%U!5ORSlDS.1\K]KC7_F@F7/>HTuXr;*,Pa,.U(P9P!is_@I:O'0-Zld?+#$m$j4agd>'t-QYX4feZX30Fng@[)jkV%#-emcNnX0"%Mckqe(-Ma>:4$J>C*@JF)@oSCG7<SbF2!`P,12-AOe7N+rCjR2%iaEnG$CXmfK5t!&n_/]MEfVQU!NT@-*b!73E`f!r^gr*'WTnD%S8*gj$1m;g:_Bu8("LFB=&:a7L*#@@QfYgFFk'.<YGpX#:?8tC1BkG#agrTAOUSS'GQu9=UkCud[5b7r:9AQaoS*Y<JMhDPRYR!*%8&!%*>\X/`_,9Dq%2R_Dg]Q')G&LbcldXha`rU7&,W%*2F+?98#-=7t'3;4n2UK=%$-QO0%^[-FEk@g3-lNO9q?#]f/jG>Y%)ACQ%_eUM6)mCr5)^"42V&q+FS6KJfm$=)=\Js"U<LsW.A=//hW2N+gH'j94V3es3LmE:DMF9blAoPb=rRc([%jtZBSZ-(`fJM_':]*Z1%^]@`pRm:,B#L)7Vgs":)gZ?KTSO^3X=0bBSOu%DlWJT^JGI_h_&UONPP9E(G0e(Fg%!VB)FFbjEmYu"k'dgjRs"Lma,Qpr3(jj!a%;k+0Q[T>=p9F\1KJ*\bTE4fgUHZ!hH%EHWuqWi^D>eO%K$0QY9s3gTpCmD'A?LK-SBbIU-dj;+7g&q4@Q!i's\orE%&2>M-]K.P7%Wb5(oN]Z5&ZC(DK8[5>d4'pb)?C`TM+^mum6^H$beW0[#qdOubo5.G6L6!b+_;\Ub/W?IYdC_<T<Z.#;H+i3hJABe#Pl3QdTGS:E%!%RSP]>oK[92>67R96hoh9=p$]jCTD0ls_"fE,SF(2?k94bj$PUf.nI$J>lJVO!=-UcBYEYi,*=B0194<S/rDG!\/Ug%Wup<d2MT%'V'74SL<sGQraAS0kF*fO35;nR0L]^h8iW:b^q5N>5T1\e0X?/FR9an@__dUn(;Ws;,=+j0[-5g"AB[@m%/F,21u14=:H\]`(Gp%%W8S!9e&$oP!WbKEiWAUa/Gc5kD.3jhF$lq0n@2(O4'_]#B?8#SiY3QZ1$LP1X:elrk1(l2f=ZHjME3t(-:`%(lP#etPu5MbZZTfX%#\=G5"1_1hgpbIeVq(?[F@S,qJ?&;<Ye[Tg[ag1\@%n7,aa08XimN'Ti*n2s>:d(u>cn4!:&>^WrKY4Y]SjIV(d(Pgb"M67AglQ(%'A*#;./<OOQ^QmfMqT1Y;]M#]_ht[,&)'`?Y=&Ml',U;SADK/')V0hrPZhmWSsMNNN9qDN$ur^sD,#Y[0T=1b.Pf)hgRa&W5(W$7%?=H+$59r=:f;^-DRU-K!5<TA-.c1?NW::D3a1ki&J$T$1.0<m-J`>Us5SrM!1h+ESYbdTN9ns[l&L>d%D*9-92Qn^;T1I-#T<hke%4t]\Qf1#dtdL\*koLPq*:ua$!TZ08%bN4B)n?K]hJe:uh^4g/Y02GT1b\&4N0dXfbGnd#A'tK*Mp[@HhSLsSnR-V`Mh01[@YH:c]%Nk?\BY+;rb)=mBQ[<VTkqmg@I>N$a7#H^Jp1(r<Y+)hsToUmJ5Sl3),cELiiAe?.]W#i_&1C+G6h@b@4([IuBPa5d<q@AuaeL0sT%f9gieNXDlZ_Grs_Cle]Opb_8c301(h]gTtFO0=3YgQ/[NjK5Jna#^X;8mq7hL`X)AQP+;-WS@ko9^`DEEPrtu%iI'VSaN6miEiB+%#4%FP=F`4pKD)VU^#9g`*&*+<]\'$En99a"7h*^!p8E"$^uU4p*E=(5g=69\kl]%'"X_=mN)_:E3#[Q)d#-LX*H&G?VJ/bf%PCSA%7f;S?rd!GRN^\3JQ2'+46VQIK"m-B\)&_SJ<[bBf'tSS&R96UH>=c+,b[iUY$l?jHS3QU,;IDYJ+@PZT)IgAu#m;=SFWPS;.YM5(%_'9+[,[g/%:)X(.ie@etafuT3"j$<1HDnh\iXu&V&_luqcg[!uf=Jg"3Q,YO)LkV,a\8YWr:7k2CRV&S5M5lghL&*5BZWZPS;#2+%Tg&[e;+5\2,B`qY_Y43j2LYTmVktgEKnKtp@F+6'b[<3N8[+I'(XE70(*Bkn5fQ.KH<OZem)3Z'j/+\!F*G$jVQZ"e/\MQ`BWfFt%Q:rV,4gOs8WFQIk91:pD9/S"ZB[9jV=/$s@kR>F"$=Fq+3c&;lRbu+5TGip1eRVrF$SdX.mTh`gH@.EN,;Q',Grhe'##/?*2,o^B%"chYZNP3J9CPN'^3]g5IaLXVkO2tF@C2SS_c\IIsq6"l^oK"?j9\C/V0Q]6B6dUB@Qb/e+RO=o_03=l'=nFNVqCD"gD]04lfZdf:%g8OX4oZIok%@`L&Fe2-C-5uiVk>SPuV7Q:r)4)&G-8nY2^9m8_ZlA\@b(;s_CJ5T1@[6]JgST((rN)7c;tF8,;b-D$"fJm;M/B*3%JX%+B^u7e8?99h'VkA!1M&JhcGr"LlffIUGDllUm\9!rh>\n\%ZZQPS3<R=q.o6uX@kSV;>j"__%!HZfCgtBREXICunm&kk2eJq>%;n_<c\'(K'H^MaQ7iuu`CTA%!eC`3[e?i5@Xf/tB9rf`*+te<a\^1PL6Si@Y/l!lYM.t9W,hr0"D&+1[4W:QJe\fDN<7T'[01+AM%^W\Y)i%@\CP#MM3>TEWS^@@m8]&SWC?L9olU=G=lkom^b*;S;5DK`5PK5KqETir&qk,6oc"$\aNl>=BsC`_/bF/1KK2UKrk^>XBk%7jc?81FS,*ChC"on\!QX\u*U#\aJuRA5a%$p/^%;_g-`fH56JnRgOusn2$)+]6Bk!>HG)+!kic8/WHZNpqGQ<N]UK\,:4lnjJ3HE%EbkKhd<m;%[X4s?,g%8#*/$TWNIMcmHY`,.UnuP0>A6/PT!m:\-uak(q.NBFEGQ:%V0]E4IUS^"`Ji5FEM;;1c/l]QBf*d5mBpQc%B(_FZRJKF[]hF\:V=Oa90)qhm3fZ(B/fI]^)Z,q9>K0&<N=DA5c"\]@s-@]-(SQO3a"fNNplo(CVWT`H9H4BWe)\XC,h8TND_)A%%A+BCg$j<)_&Ht4uD4"AqQ##@P![]BU3+0e`n/?#u@44nEk"(F68u2p#`Gkg4'>?paK)t[N2u2U">W9e:X!;L@rr7!JP[l)pndfNX%,I$aEPGs(dm,Di3m_o+Um%I>JA[UR:c?E+=f9N!<);1gcEYu!G,:u9Bf-<C#k-Q[5A/Dd6nb:-:=4J&ci&#VBWPbPG5_a83EWk1Y%mIi3XnoJIWY$ca"(OeCYZ\3iMq&fgUi(TfKq'C/%8VIWnFR>rEHLqG')Sdk>Hfucf&nB*Ce_5tQ"q"U)K.G@1QtnC-a2KS#Z/Dl9%rrQLD7=B'ui%O_#MDQcU'<[o]R6X0^(`g1Df8GO02+&0m9jE%UA+-WVZs".Z<D.p<_U@J_/KA\$#X__kXWBQu9=;7GL4,`Bp!b3d%e7X4t]XX!%4d[2T^5`SBc;:pWmTa06#*$;(fk];Z`!?Odp]f+(Ba-@r3&Y$H65oL-?EBB('[<LIX"_JmcYuc^am)S*I"n[SM2G:J%S&toa`+Uo9$G@qTc=<_7ZYHMH/u.LjI#Y4`i>#KZ/a_a](%06?QpT+Qlq*bnn^7e4"&"J^oi-m#X,"?)q%Q!,9RI^Tf6[$)UEQ$0%b-dd'XNEa=1XQq\Zm*9KgX\%hH4P2.nVkY(Bp-gAE,'dl@dXD/8ZXdDP'ep"HF67i@RBue:h"3@-np"*9n13a3UB,b*o,kE,qgbd%2`\(Vf@?rOGQsR^Lp'nn->AoTb=;&fo.C8g^=)f2^?.r]OU<ZucqClYM952bRnW\(ECA]pP;nXoI7di59TQt47pc%Y"Ha!T&;Wd)%d\nO(,TXp"lk+70A10FS]&58[G&58KL$MI9=8Gg?*\g<VJrp>E'c!2/T?j9uKc_6:&#=KKf^>e)8`]C'Cgl:Ue"`E;RjZMm2,)*9%HrT(uTP&`\O]P+?m+Pj)Z/(U`L<*QUP9s<h*['9Ib'Kpu.Yspa@=2i@Y_TVJ?pgLObcg;8.Kd\Nfr9fUA[l*V]<Q=n]CjO,9h)%E%T/9kJJ'8ZnSb0s&Pc#K_o6+fp/^(^[F5MpE=V4eA%?kBibf0jV):1D+Mcd1Ogj07eOk>?,$hBW;'4YbLpYGc!7K^pT3<!eH@E*a$%6#;-%@[$n(;TiQZIUWV2b\mKfSId\!f4Y'q\jh>u?.`MqI.7;sU_AQ@@dk!;9apTOm^Q$:eX`Aq'K7Vf1'OO>QmihRk=6&bf=0M$%lq=N?7is8@BY]2%e,!jj<=kN*Ks>r.7eYuU=^5RfmI)Ygd7r'7,M?_Uo.?T@hE>A:Ai9B$M=!E`K2!H3]KX@^r*F6c!MCoe!bQj?%*Us0P@*,64pIs*4MBQn2fSl`.#R2D_p#3;+$4G?Dp`U,ss"^!9Ym]k.Q5[BP1K/S`ia4`P_4-AqmArLDjnd[eYuIALqWsq4]JGPo%3i856]1p#);&HJh:?RRL'sQZN5Ja=0iHrn`BOtuNgas1oJB@oo4/Wp&@-c.t%H)Ec6f2NhF\Il<#8m>3"4p:D/OY)90ef@mH`Kg;%2iHa'4o^nd87;sDEGqfu0kAXZW^m]`fM_YqLi_s15[1T91gcus=U*(282lMQm/85'J/&:uHEnj<a=_3iE9+U1ZR-lO6Sk6O^KETq%\.-V36[M,[l=4)<.Ub/N9iZSG`1GNRGuIX</B/mOrkDXLe]rreb=b>G['Zt`oR*hQ[aK`Lb"A!#pD%l_WH$4g"Qi9HaKo&RX9;Ps%&[dX#45RL[:>B/m(9m_"QieS&S>BQ*6d^LS>M]'LjV;Z\;Q5;K9;T1sr:i*1A5[Y</,)$`(,iUQnhiHrfZ!aOO)rM:=o:euaF#\t%3r_)O([K!!g_D<bV0`P%&`-J(Uj%q>aEUh3;IJnqC7+:2dcT8CY@Zg;gTNqSQ(c:U6LMhMh03IJ$Gs:0OuD]-U8.(=NCc6+`V7I)%$L7mGebUL_d;+X6feV**)Jl50$&c\O]tCS>'C.c<Spt_QRl^R.ebdg8DZ/,,H`G)(Tr-XtkG+2M14BZS[5g!Cr`^:.k$\UM)Cc86%#&2-%L12;`6Ne[u]d\,rcD#kTdos+LmLm\L^u,j&)dA./AXA8@qN_6eHU'D^r?bCOpE(jsW]0;>gB389[^mMH-,/q5nFphsi5E%D%.r3?9lL()u2$_qRpOI&te=:TfgkFk,D*7JdlOYX?^G3c`;9m;ZH,.i2K!qN@pRMLIGW62,@$6K620[T<!b*?ch9Hpe+Qlpad<Xp7%Nso"Jk^Lr4[/^+O;s0NdUaha;^CEIU<tsPRL-3m<X+mR&#amBAM'LCPS5#bqQ7["*1p6LN7XZsHKl*#GB)Bd3g,%Ot,YVMsqrX3-%,#Ys,^45E"gZsiLp`6dKS![lMfk5SgD5Q[7H%mJZ<!@,8G".(Tdp=!mBjs<fCQ'.\e?/RRGdG!2L2;p/nmi.PYUPH*@)ZlPK1npQ%j5fN6&CTme&5rS6(CXHq6"H!=8S-]tc+ASeN#9#[Z/U"GqjN0T8YJm="B_V#!@dc%ntW21hpY\%rTeDTR>3@Bc=EjR`5<lJ_NlYJ%GB*9JR5o&ZqUg7mJ!6h2RH=sTLT551r%4+#2Y2e-hf*Z/4Xc'9*ciFqoq6qj=5kJrdI]]=4Bim=!"sdBr>Jmp_eO^ibO(NQMiQQ0%AQRNnE^>dKRld?>RrH,$?dp0[;^U@IeA8P$Vs&pKMRkeq0:e,)@5FN3B@`aDa7_0g$rNACMm9C?02BY(q^G??nY/^=`#Zcqe&HHP%HrO?!Z%$<WE:)98X&roentOnkB1Pn2'N+b$98Q@?88"PM&$UV0:m/'-R%GemSe_iR3]b#3Z4J*3XcD5E1d"Q+#@m:C&/77"qQ?b/%m5bn4!E_md*i50@0LS9E@;Zu$<82Fo_r:*XfAaF8`r<E=s6;Io01$8cm5apnn_gF/jk(7B,0r^P]CPXsF.5dH+^Tp+5@9::BU((_%=k"'4nQ^;u8KJK1-&??JbdR=Gs)UGpUk7q"g'D0@8PM\bMb-c"XHVF!!O;o&EV'n@&!dlbm$q=.;FQ2c,Gb^^QQXToKgpid#+1;1%;)G\N*sNCB8u5?j27](C93IIJZeu!i,,'V3ZN,:8*ZCpef^qhg+J=0["_ZrZS?4<Rfh];up8%PoE\jnU**7ODI#Bi0J=32=YM2I]%l_`u!"6K4!8Q,X@)DtJk3I8*/LEEuM`=?&]`TL+i-Ej"/SCb5kPCEDWF-7]igVbO\csB^hZLZ^Sb;[^IMmJ.cZW&a=k#1m^hkb5Z%g,+H4Y>&;0Zl&"ChTK,7+M5XO#!Ikkr9^L2f`16XPdecSdd(VN+h",@AI<4IQ@j`F**).fgZn+k8mqsRen_mQB9:J>$P7KeLCXAr%FbS&D2LOaPZ^KX4"\cfRJ/tPWCAVH-d6Jfi!f3<3+4s)K-0/ETQk0+iWoO1QlP&?S.UUme0uD.BeW"o8/5_[&Dc<SIMsL+`D!RS*%Mg&4YQ/*V$(JZoM'Y2Ia9fepX2O+-h-ZfM0)0Sfi27_:h3HU0X/KYhbP[7ToX5VS]Ch7T475ARQF/m9V-d!%nh(k[B+6tsDeWt#k%X;0fP:N=FJX$cWf9\4g+>gLn[,gELS\%0Z-E%!'*)KiD,1iYKG-CBWZM(VLD=GollKKSs;OaVq-F4,rj`2d7uq*Xrm'Gi5N9@hI/%j+qWKSe.ClW_O1V7s?0e/E[YiI4]P3>On8*g[30gf&Il5>dmBd7a*W"VC\h*:a3(8(&gH?DcscuI[L"p5lROeYjWPKUl\LZ`Yn!\%,X\*:XrH!!m*NuGKp<50,hKl#PLji:MPInBH/!(/T708J]HVAmk,NS3C/?/UgigZfJ]$'SoOd'tGm#]r"i5`SRgqmMA:tXHPPT=3%n-MbKpJek*p(%BV*)<'S:3N670b;]";bF3O9!2ZJFBWa%:[$ME`6n:#A86K:hOFZ^$V_;'p_%q0?9ZY<%G$Kg)r\Q(E1Eg*j^/_"%+*gM6O%UHKO+kZk&n;`g:aEGLp5']@[nihM/Vre</8\u4e[;;7Yl,B=chWopja6B_JUQaQ,1/V>iPV0aKQqPonGLkr6Je`K#-WDi%>9IP+HG8"8o(\,?pG3jhhE6_X.1O%GqCYT=ZKW,@Qc'JO;G?2sW'dPC?V23p7"fu9oeR7`U:aO[atck/M7O^%1]O-;q6ha*>SdcA%TfJ>G*Bkl*q=;_r_-(XC4F.sZMX+a7eY"SONQHi>"Z!i:D.ZdG3VslRRm2scVLB!H:J_H9`DU;mI]#]XI]sP#A?JJ<ndZ2Qo87lT%6"/CT(:c@L%Mn^Yp-uFnkn_hVVp?f7R'``:Sf2c&6VcZ@_2PJH2qVc#!+U-]IE`H`(*G4K5OK@W=eQgRCb51r/eq8s$i24E;l;%N%(/a^!Orh3e>g)=':lnjcFNGmM-tLKP$hmaal/FMU-ZoB4I4SU(/3?o.6gPPGfr^k#OZcB@=(D0`28c^Kq]&R^hR?E_5dj9,:#?K%%+r#@HA)6Wkm))2O//dZ-)Y``3B(8XE#"hFo7R+Cah*OWUA%@n0=h/i)q>dp8>CL-m1N$)7%%*Pa12gcc^LgL0=l8;'k96Q]&V63+%0cdZ/2eV_>YbI#)qM.h,YEuX!VQ;+Ho),`nl=6UC?ZkC:P'g6,,XqSXEV,72J6::%LIKdl7?n6\8H=#rEWL[Eh'"0gKUhk'k:`,R%/p+tBYEi3h3HZ=^'lcZ<`ZNL:0uuC5F-0NZEme32E9\^$frs>&8:$\4T']VIhpoLs@Uj:;4^eL7U8j5lV,C']C;d<:Xc6SaeOR)!%XhK86lG:Bc+^aA`VV;_-<4,r^(,gfaFMr6=@R`6,+l_jUQFFHIYI9*d<`Pu1%[jWp-tDpYDOq`"RbBOWgOrM<RdL!"fd@p_L((cY%J3b(a`Z=@i-j-`%\AP=:3D0R5=opmgC?apTGVXTb16/6o-//=k,=AD$qr?GoB5:\4]CTR%Y2%bobkXb^aF@(s=1\F([dmcl1&F-j%RIYih@M>[bn'`ho+)Ik*(rYVhWs0?nnaZMnTJP*o$k70XAo,d=>rP?V1-C3FrVtE52>@I+1K\#+>P.ZgEd0e#I>kF28L,q&.=4L3%:IX=ZR"IXPbQ=170s`E):2G3V9sQaZ.X[(E'VRF@j6Hgghr0jU&ZGRm=R"`BCVu?)PbclQ[G/:HT"W]H:V7[U;\@KP,HZ:`]hIt+%c1/kdq);;AK"!mkRI$?()Os]gTq("C?)Q22h4ET$"u^BR[uZm-p+s`JiXZN5"oj*n\hQmRQn@N/UMisuRZ"CCL*IUJVN5^`o6*c<%=^Z<H[C&-^JiV>Aj9&d;@WmeV`o6IS=&f4!/=<6X@F/p6#"40E:+=Zq1:[mpEnT:$NJF585LZu'%#7Es*GEd?QlPT9reaii=R$Zu%ZR2-@*W:\,3'%A,%1GisEM[YBj[&Iu9_*FmJ)t6J0K)Ie(hK)#J)%CjQgs2o!cum*XO^O,DDI]Hf<0jZ+WR-XCl&md28tlG5c&A<%lc:P=p&lk.'gj?-Gk2$g,Qc.>X$q_KQ"V,9\75!-2aA_fP](RJgsS&ud]GQlCmm&83m,u)mG($d@m0#LSZ/h!AY!?:jPCP9kA9BN%.3n`mZRNtW)u#GF8'c_aCeM90^?Xg+MG!cS7c:*XD\X'/QgR]AXD1,_3HCE"0>^\/3-(J:J\"O%'_TKcX+u600Z-O)NVgaPTj@pE%]1:DOjI\Zn42XRcL<tN^W7kJCVEko+hH\&Y-E?mac<lfYMto4d8$f)c"-[W@W'c19iP1cSrC/!(,!@(pE7OQtN'k`U9,[$:_>1b#%Gg6>oEkT4>l5K,reJi9o0/KjQ/Z&n64VNb-o>r533`'gu4?7SQ^-5.k<S(/c[;-sfFU&@<=l6'V\0]EWZ>XErcqe@6aRo.Y=j(//%5q=4<<!C;T7ETibc7gQ&jcSp9rlM;b*jH06Psu:CB+V$NkKhH:-"MhYqB7YU2he0,kT]3')^eD(:'JWkYHF[rPVp163-+L>.^)1p%]'%PkZH7hN4pWYW(r`1'hE?>i];\",Cn?LBgo)L3r-W>-GLm>96+WW^co^mIj/+?;S<-(1UpYEY>#$nJdl#co4/r^Zj?6)c7"jC#%*:?Iq/F*c]&B$Vr;hf$l&K6uPPbd)+[`<hAN/%tBimJlaK8<#nC.E\q:k[s,`neKiLT]XejlpoQ'B/nGRt[mAq'jJWbpbQQpf4bE%B,88PVK8VX&SGSk3dZA&PmjOTcM'*Ng*P<`a^7]kokc[^i_V18W@sF%1)GK-%)&p9N$X^tfI`%IHa,hTfF4-^![4FX%k\$t/5G!&%K,=q#%T4d'lJG2F&<sO?9Or%^(keo9"^6ZJ1:r6=%J9[2IfB\BD30<]\27n]ILC6M#P1cY/3`,,2#k'Ge$8@8-j=[TO7!?4B:;O1%19V.A;60Sgr_6iC79IF["3fPQ(nJm$3jA'8>?5^jf(VjV$lZjf`@&`[jrt^\5.i\G^fV1AYJ;r!MfLlP$=(g[P[kL#'Kcm=)3JF$%i_87hngIeVFrP(h32-o,1t3Af$CXb=SuLV8'@!R&6`Q$DLh4);:#U4DC"sQJ@ri"mon@)),p`@@Bh2/,iSr487Sb'[0u0*r*i:PK%=_I+4)86sLq0^:"^E#[u`Ka`ab,4.:mI/].3<'Yl_(E#cDT9c+D+/8N!L%)-HVT+Y4jK?V^.`sM:-TZOX5/KW&[.[BZ'lh5P%dA8%1tP0;;H:nG>/gXG.ureZA2%/u)-]BA9`=9U\"pB]c*&kg*Q8>g/RmZ5Aua:k?YRpFBFEK-H8f<#P1AmWp;i@J>JaZ7Mk)]L&P8S]%J<tLj1+R+!+he<&"0-;1FGdm((DRk/$t-[gisjYS.b1l-?@;rJ#o\"^q45nq`JbnsB\Y]Wbl+]F3^PNYrTX1Pe8)OXd"]UuEt*]^%7?mbdn*YF-C9.>XoG<eq#GY<En'GOqH!G_uqq(^G`P6L9(QODYIGC[Qd-rN4<)I28^G!hY='+dk/AV2"G3q&q<"2ZDheO)Qf,af[%9Z7/%"'4Wn9k\hS@c[dZ1OBkYm:ra`h@TEbL:*nVET,WR56':+T`:_B7/2T[)TsV("?26gFc'BL!F"IlYr;tfnLmDYDdV/QS5^fr%3D:ct_GG2G8Urn&Hp=&H^%2fUc1l5NiHqtANTce;"[AX83mr_?&ON2n)<4rcc1dSumr.VaR59"k`c]K6n+l@d_Y4k+)uD=iGE`3_%kVRE=[ADW#R.oBbM`Da(8CUeE%5N-e.=oHD'oojPLPNEglVmOQ)3.PZ;TG`7'e[=.NpAN%'u6NqF2,5MouVCJ<*F(V\0a9Ze=2kg%L'Otc3M*hK%/k[0?-BAk=crZ7o+-%S#mRlGT=Hb5`_B)8Q9[^9CY#eM<A_R(j=2SJpZ-WgA@d/b<_]ZoHh+^ga(qdle3]:=e?4>c%RKL[r6o27)UO9GCE5aB0g4REo=,?hs9:k!\Lq#j^TFjte>E<"Djjg7oIsP_VqY`I:a_EmICc4FC(HD>R%Q<C2n<l,h;bdN:h@O5`%>C>s`O%:SJ>JT%dL[g(Um6mH8QQ[tn`&X8&3emLr0Psf]aDgg(2RR)#<(B=a8`@WtFdTMsju3F%A_\P]*S0]91;\orERNO],Wlj>%l8%kKlg^V_fT%$Ad9%NmF/i:t&f]HV?d8'5=CE*cS@M=`*skTP8,afW0\2?gcuE[@ZndRRi/H8iUU[AHaLILFoD4raq%@K/\Tl*Y%k*NaYL"2^j4//1t(&!^n53DOg<WD1Vq(L?%]bP$eM/)==U>d"M;k4Y,M+M.UJng6/meF2*gji?7^O41rA[+3I-l1j*H$o+WGj5m=%VWt43m5c&Lnmp>XO2C0<"+?18B\a%8-40!`9<W8qqO?q-hH.&Q'PsYHN%/JA"]468BB#>o2K9a<C/]0?H#%(7_",@oqGfl`GUUO`%6f*OS1EZ^G;]XL&*=Gm$c*jdg[9JV1PaL8W,R]YRGZk'7jj686fpch2'Tga@]L(C+UQshN8t`\M_%,4B.3g<t5nERJXiJjIIZ^+h%V[n?P[?Ru@O<"SJAV<R@0jptbVF4XHFL&L:Wqo9:JH@j57F&3g9r1i!*e#Rgb5qKI'i#H!e\R=b;'e\Bd:GFaB5td"6tqH"XM\J@%C-Spn',8n:O8SCVJn<9GBh'Qo+Yo?]/8Q5M5d\J:/XqW:b<kobS@Z8`l@o@C&5ebb(=nN8')0Hc\%%.hY:AI]miX;0cU%le9=d&g%V#XP@Ncg9D=@c@QnIf[H:E0QfW?59%1^+9U9/?b`oEoH[pSulG)MnVmm2VPkH#QZbi[oM(dA^pLa@?s1HBmQ@ln<DEYS())RjQ-a%4W`DuUB)jX?"1'@(>@-Gm+hY^9F*t^k%5dLdAf.:3j)\$0\Bul_3AmM*NrssCd^)kD<-cSf:*VQIDkmcB#.[1OFg=b=TmEED-?BJ%K6QAWq[?jdCYAQseE9nrZ/X)mP)OTjI71@[PX[+8S2%MWTte_j*?t8[P2HgeB8a`K^2f?"A,8ofTu6qsj>o%o05<*5.8:@BX_P;+%&QrsT[SZb7-T9Nh]YYFWft@hK+%q-@X==8*/.!Y\'GCb78-hAO&KF@sL%/ip1PY:sD]';8+00II]*)q&\$]lsIW=Y=]=4a6:@\,\%o=>5B7BJp4J@N?=*d7p8'!8FM4hElGRZW+SA`SBm/1%hV@[/hT<(aQCh%?=uUPb9-.mc%DYZmooHhHe8*+?RUjV]OIYk?Yt4^G+P%o^:Pm/\/Tlh]9PX_h+g=I8Q53VU5tI71'PdVo"FkQTXI`>+WQ',<:5+]?ZeEft4%.'o'o,GGaoEVslSBk2p:"\c_&9FoOMJj*mSk%P-?hBb4kZnKd?%,*Mk,:<"SJj9h,kO!0EbaD-,BDr8!o0T08phkMhoZ@Gb^J.%eu2bX[WUm^YB!P(K1`J?+@`<*KBiZWboo%q.D:%iEIR0]9iQUW(od`CA1Oci0a&p)D7X[m;I,'Y#?I#fXe1h1^p%F^nGMEYGso"<\:5al9WRD[@#.5LL)"9:oVmD0`H%eq0]S&Ia5JQ%/K2c>3NXH$'1[iE2U3^)\m#9r</XN/-M7^"*`l<2;F21I6Knkf?^KtZF2(")@J<>c8AN-fW'Sjp@U)Mr2LnIiGtA1i>b+^AaN'I6%Pifg)H;h[i[?^:I$91B$>\,QkUM63Eo_o+5.YA;DbtT:S"cQhnF$r.%LQO6U-EhXk@G<]n>fp_4SFacQ]!Yqk%DDNP4<3ihV\Vf6%PS=C1lc<"/d&Tm$LJm35Ln]ksW!#U!r6+L(b"[tL[;B5j7eAS,:!*W4r47m_::&R_C1KQ!g6bS]&u7637c;.,CPE6hj0W_#$$/&-%@dk[H'N4A]57>\fOuI\bEZ0;+M8Nu'@#8^RLKdP`Q`Rg&H^#:Y(=3_B\CGs[Sl,PDjfriaE%.G'&e)jFZWIdZl!>7nX8*:c\7[I9%q1pZ[XF%"edoiD[eP&uqbT?q.mTB"ZNVEUnS.dW^:l^Nq%rCR*8(#iQ4DeK!a!.kTIBs-3CeL)cNGngX@8h$*;0V1:@#aWTr:E7i%eg$kZftRX@_6!]\SFjLFmEhVY@B;lYp]LD.YnTqH[?0_]9SKF#`<hn8.9EWhS1=CN_m<Nu2B"u`duuu#3HnLMZB@''+)`&3:KtpB%LAC2doEopM7_s4k-'HZ35%tR'``;jS8m3b7%U/qH6sG8&(b/MoMD%*OHq*Bf@+?6X;G&cM_17rsU&+>&7hpUPYKsM-gfM-79fk%I%1^F8s[n=Ec#R^Uc#op#Zr@BtH(H0bBRKm#Jh%Q"S2Hi!Vl$-1RQhj?\JO@53U2:Fibdc,-kIU6X]&YDa^`JU63!G5r&b,YEX;F'Y%crc]Z28%l(B#+S=\)p?X)c/7S/`M$L"Qq4`(,CkBCgPpE[1'T^MZGiX-.aAp);rHO^r,oP?dQ_8_(g=T]A&ro[a?AF:rYNl0g=EB%!@jWk[:0a`pEAY1OHsSEmC_2='M`1teRFG5SBi*_*Vo#e[c2?uc\Y]k:)M6?KuFq<M!mSSW8=`q@7PUr?G>:cSE:DnCCAb-<2g#f%]k:@#U/'>kA)iWp\%6CKB'bInG/#d@M)Bh,]OiG$5$HGEMIqcehe%ilP#.:G)b4fBZa+IWCB@*W0bo\Mh;gFdMQD?/n"rkkIL#e,%#[sf9D"`>bC`+sbTb3[TPg#dk\DFd.pu:!/3;j/hl_,a6qY/eD<SAOUDe@ohXX)GO^2`%PQ1R1\*(JF1h#jMs^gRJON?>$mAi+l@%T\$&Lj,2(l7keG6i8!BdfWH@RUL%Ba<fbQL!Zbj8ZoL+9$:ar/l_Qk>?nCd&bCRe-kR+JU'(K75d5N^;X'&TX/X;I-B\TaY^*3h7%UZY,/e-Egd`a.QJfLN,YW:h?X1_\61M<nl`,jhJ\hgE(";2L#g+\\J/L!OT:7,F*H.&g!n(d7bqf$o;#>i2`6Wk.GNqI@]i>na*1%fbo1*0mph#lG?eFe#blaI.Rd4]=2e+<CHXJlaLad8-GtkEulk's"(Vs&I?,*B[/`!*3?,;LGu"3&[m#]1Cp;a1N(s\f#'jM0s-_7%9HPr9"sY'!i!O#**ecUEbTHqG9El5ZN*D<s1:s^DJ63"9<5bMjH^;N:XUQtJ,Gq(N+C3AC5"pY_?'6a67eeILD9*4.88$C6!s^_c%-qP?/Q^7h9:sRn]A_&7Z&h*(';E-mQg6@%PRhAD19:n%?Xo[nlLb!,W.h9&#ojSO"H<36X;&-+4%lm7=fV:pR]B7r"97Im"fZeY/%e3iC$RoJCO4Zgld6o4YJ0'SSIZ,[LC^)$&2^nd,aXZ*%e%G23TCgsBl$.-4\*$A^p,-Wk'.97e.DB`,nG/]<<*)e7OKpt6"NrgJX%3\EA8Si'o4D7Sl,7L%4tIKS'["N!;pG%h]$&1STH%.gEUhkO5)T]lTO7Lh7B`f:J)h.N-*NIj;o\kEH_b9iZo'JG]7!VY@P1,aR2%Rn).f>2iJ>rG$*e-&"_;LqnrB@G&dU3<D@[^ME)[RV$7=Q-FH-g>Y6>EV2&uIso?,HbAU?N1^aYkOmo=12YkBBd_*.c$7\p$EJ/2%MRI<6rLjQM.W-#_C%irfm!aff,bs`=^M]e#,2?4u$GW_[`og/O$J$)>IWOL>RB(KHXsDq]m=Mqe77jl-h?%F(&$kQq8PX*lB<>HA%)/VIs!`mUFBpC)jgsGsY?sORtg+.ArZR=Nsij*--.`4?8Z5qV,g&fsG6[&&1O'Fl?\q"q*Xb1lL)]M2U,8QB3f",/JRUPOPXq*&J%!-KhAb.o)`$UHlP]ld&L\G1foga8,!#$DIDVDNoB(G_oh),+PqnZJd>]T/9Vc2\!a]r+rAFWQD_B*rVm\RJ3F2>s(94i+_(,uZ\]%],26VUf@LV@C*"7SS$NsdH(_[,nU!N9ee9HI;u*\!*"Io\*VI7Krm>YF#B%.3+QpXojJB=Lo>&EUVF0_D[b,lFUtjH.2F(Y,(!1&%A+u;i@Q?b0$A"#s';/*<l[lp/RoYOXc<Ci38k^GIbHh"6%WW0,NHBj#c&0;UW4`JbTJR;f75"T4W9*#2.8bZmO^",-"ES>ggFPA,%"g3?en6BFs+\(ZY+D2<HXAhlWaY[.`YQLRZ!Xo9YQT_Qnoa4,5K7])\+(:$\[0@q>f&gi!h-emZ`[t'JL$cqiDQ#]mg?4D@\g#q7%4:*c+Gt-F=<h/to4Nee&ilJImM<&MnKeW\l*r5IGD1PWd%uoLA.R=JGq"><pKj8Mpjp]f\9:-f?[32][!g_^/]J7li[SC"=O8?lG%>-8q'UFfSqKfUkA3d*7NGW^iW=cLM^TXt#G%mp`jG3LJts'E.:jHaX\eZG>&GDJO:Y/";emLdAAU]['B!["2o(*t]jL\t<+n-.VG%0N,53C91^cXi'sLA""90!D+du!o;j9C<R0(VsDON7UoA*ARFJ#SOS8h%>C(QHY%26^dS.o8.Q<4^rVOe?MUa>gna\IJ<\:af_3!i%$mGO3X=G=%``(9N+Rb;/-iU^&EU=Qebd<h=+-fs"q\Vot>JBSF9(lgW!c>mHN?7M0n$6Xo%K%A03-[DCD&aK/,p2XqkV(i9W]k'*%h1&U;9/<cZknY_oeXBk)8tr\)'t2#TP[rP/a$tq1?=q@5%M(boY?)g$XI_IB)a0:rf(2W*9>ujTV\YDP+lR=![V(oC%r2#<h@"0j%a]!Q]@Bg[?1H!E&/d%TR6:VS@Qq7Jtp@q)t7NSk'B]Q7Jm]BWE6QO$5GC*i0Y'=JI@!F+iX(NsA*CMi4e&S"UVA>c[_/<S?^r*BZ%<%;?*4kLU?"+MK@.kX]9beX8T.;\,e@cFhjKrS1-J*Y%EAX(Ghl'a1;r6SeiAJe`r9D#F,'H$<hGb$ID?jlWoSfpZ4VmA!ePUa7;%\b>A-,BZRN%R0D0iAt$$>/l*dLBLrm;n1UK0CJ#Pk+Mr<?_'d4)I;m[%,k1<[+4-'m+oFb2?4oXn[A.QT.e2-4H$;;GCWi\c-`T&%6?nhO7\Sm6^60rqLb\e\,!b$U7'n1T,oM*],\(e#]GfH5d]&GRCaEkK_fM)[\f@AnHUrgKpcIWW?D,9HP,cG[[P)9*GWqCXnU\#r%DO76YHjF=#M2K:i1DU:r*po_ngjn$]/MTV#9DW:"27^q#"O?:cP2TE%0@Rn?4>ohKLQ#9MiFcU5ZP*Qn3Z]cko.!??^s<.)"DCaX%)h[mM`CcH6Z,>(70p,EVA(,*e9%i/D62\tDguqJeUq2Z@QsL;_UW1jRI'@LW_[K&UYc8:5Yu[Y:@6<&QJ[UlRYA2..TgBBqi.s_V%j])A/_D@7\`HJc%pu:9Em_/j%fg8O:0Si7mnt<MH,6C_0U.BNh[MH.#[&nJuKe6u`Li!OtPN;!9eI&(-WX_R^&;blfkR%(:dHr]N%YAiWhQ`o!dqQ;>)AMVC'(n%oOTIEPo?VR(I@@O(F2cdM:gs0Y=\F#qjBb1:)SBr?%CM1nrqWS@O`WMY5o[Ts\=SCX5nl23prUXNG%qSb+[^AX[F'tsT.!@?jl%hE>a(*&o$.&ZN^@Y]ccoVq>p?bHBYO.Y:Arf<s9TDnQKo.Nm4IJWZHk@&g\ro:1XcjXM;n^F7V5R4Mr%cN*fk]GjG;7%:(cJp^bKqa^,_I3T";?^CGI[RltKZ9<8EJqMB:h+Vh2o:`#NF9pSjnmL2V++%n'H-3M,J)l<[mCN-Ve-gKrrpdnn%5#H*.dI2PU%6F>*PTAq#F)#l&?:e=<2kRPEVXdQM.8P6(Gpj+WrQKm'Ht/gNjXJZ!]D8hiDCH(g_Hl0`-),Q8cCZ/12(sVL"1i<I%SUA'f.HM#G+F0;o+-l,)gNf@VEjqP&]I^!u\$BnkMG.WJqp@#pT(W"q)CO`h/>;.P2DEJYAA-9WVY?/;lI'q56QYWKHc=G6?45ZC%s8Qqaqtg6>hjj`AlOuIT3JaNLdY\7Na4&+D"R"r3%^::Uj4i&8`<n_e!0EedCP(UJ[?f:K<:Y=nG]1mn_\"tRa8qk/ij0cF6+A\#%ni3s>Sd"=@\F\+:P+>/K*]BWVFmF+0qtb7ma\2@0_EI/akK55gW(s;Om/3BBlhNIQEHE2!GVcKLVA=U\Jc,*[9b"-@4.I(X<LVc/%#0>(1'u'#&(n>#9c\(%If1BmMb,V%W4/bf+X^Mj[I,<I?$Q[]6oS-2JI.MU!q"?GpElCDcn-\)[#Jb8KcQ2#O88`=B:$D$:67s4A%?dN?"Z-#C<28J\::ZmLS:/p9K.L:7IL&B/>?3gp,.(PDMoGq<53gdI,nX)9i7.KQe#dW00H.N.1lOCgolU@W6I"h+)dWW=R37c>p%SapB'eoYL.=@jKP1Q]ds*UEa+(&[4aa-Su^Eue^Ga"G1%J<@gWUDo"G1#KmnPjdRCMt_a3mD)!V4U`$,?htuGG^AAe0)4h;*j8oM%fDON5J,e]@n,E"=oCMS6eZ7TBqsM@o5/7!0^O>nTq!No]s8;BYmecH;rV5g$%t?hDcdR*15Q($2Vp?HVIe_*aT3s[/&qBoGeZXJs%T9"I(:P,/%~>%AI9_PrivateDataEnd